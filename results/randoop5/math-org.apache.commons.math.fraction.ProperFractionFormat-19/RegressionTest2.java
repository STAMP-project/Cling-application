import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getDenominatorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat29, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat29, numberFormat65);
        java.lang.Object obj68 = properFractionFormat66.parseObject("1 / 1");
        java.lang.String str70 = properFractionFormat66.format((java.lang.Object) 10.0f);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10 0 / 1" + "'", str70, "10 0 / 1");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getDenominatorFormat();
        properFractionFormat44.setNumeratorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = properFractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat44.getNumeratorFormat();
        properFractionFormat41.setWholeFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        properFractionFormat20.setWholeFormat(numberFormat22);
        properFractionFormat7.setWholeFormat(numberFormat22);
        properFractionFormat2.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.lang.Class<?> wildcardClass10 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj9 = properFractionFormat2.parseObject("10 / 1");
        java.lang.Object obj10 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        properFractionFormat13.setWholeFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        properFractionFormat26.setWholeFormat(numberFormat28);
        properFractionFormat13.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat31.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getWholeFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        properFractionFormat13.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getDenominatorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat66, numberFormat75);
        properFractionFormat2.setDenominatorFormat(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat34);
        java.lang.Object obj36 = properFractionFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat39.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getDenominatorFormat();
        java.lang.Object obj46 = properFractionFormat39.parseObject("1 / 1");
        java.text.NumberFormat numberFormat47 = properFractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction49 = properFractionFormat39.parse("1 / 1");
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction49);
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction49);
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = properFractionFormat25.format((java.lang.Object) str51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1 / 1" + "'", str50, "1 / 1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1 / 1" + "'", str51, "1 / 1");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        properFractionFormat20.setWholeFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat27.getDenominatorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat22, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat42, numberFormat44);
        properFractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getDenominatorFormat();
        fractionFormat61.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53, numberFormat59, numberFormat68);
        java.lang.Object obj72 = numberFormat59.clone();
        fractionFormat47.setDenominatorFormat(numberFormat59);
        properFractionFormat34.setNumeratorFormat(numberFormat59);
        java.text.NumberFormat numberFormat75 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat10, numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat22.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        properFractionFormat38.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = properFractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat67.getWholeFormat();
        properFractionFormat64.setDenominatorFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21, numberFormat47, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        fractionFormat77.setDenominatorFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat87 = properFractionFormat84.getWholeFormat();
        fractionFormat77.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat89 = fractionFormat77.getNumeratorFormat();
        java.text.NumberFormat numberFormat90 = fractionFormat77.getNumeratorFormat();
        java.text.NumberFormat numberFormat91 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat93 = fractionFormat92.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat95 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat96 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat97 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat91, numberFormat93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = numberFormat11.format((java.lang.Object) numberFormat93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fractionFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat76 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat75.getNumeratorFormat();
        java.lang.Object obj79 = properFractionFormat75.parseObject("10 0 / 1");
        java.lang.Object obj81 = properFractionFormat75.parseObject("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("10");
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getDenominatorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat19.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = numberFormat9.format((java.lang.Object) numberFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat48.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getWholeFormat();
        properFractionFormat48.setNumeratorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = properFractionFormat48.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = properFractionFormat2.parseObject("-1 / 1");
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = properFractionFormat2.parseObject("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = numberFormat1.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        java.lang.Object obj7 = properFractionFormat4.parseObject("1 / 1");
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat4.parse("1", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 10L + "'", obj3, 10L);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        java.lang.Class<?> wildcardClass9 = numberFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("-1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat30.getNumeratorFormat();
        java.lang.Object obj37 = properFractionFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        properFractionFormat30.setWholeFormat(numberFormat43);
        properFractionFormat27.setDenominatorFormat(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj13 = properFractionFormat11.parseObject("10");
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = properFractionFormat11.parseObject("-1 0 / 1", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        properFractionFormat21.setWholeFormat(numberFormat23);
        fractionFormat17.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getNumeratorFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction40 = properFractionFormat37.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat37.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        properFractionFormat68.setWholeFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getDenominatorFormat();
        fractionFormat72.setDenominatorFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64, numberFormat70, numberFormat79);
        properFractionFormat37.setDenominatorFormat(numberFormat79);
        java.text.NumberFormat numberFormat84 = properFractionFormat37.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14, numberFormat23, numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat0.getNumeratorFormat();
        java.lang.Class<?> wildcardClass20 = numberFormat19.getClass();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = properFractionFormat2.parseObject("10 0 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.Class<?> wildcardClass6 = numberFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        fractionFormat15.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        fractionFormat15.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.lang.Object obj31 = numberFormat30.clone();
        fractionFormat27.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.lang.Object obj46 = numberFormat43.parseObject("1 / 1");
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = properFractionFormat50.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj55 = properFractionFormat50.clone();
        java.lang.Object obj56 = properFractionFormat50.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43, numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat30, numberFormat43);
        java.lang.Object obj60 = numberFormat30.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = numberFormat30.formatToCharacterIterator((java.lang.Object) (-1L));
        properFractionFormat2.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        properFractionFormat67.setWholeFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = properFractionFormat2.format((java.lang.Object) properFractionFormat67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = properFractionFormat4.parseObject("", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        java.lang.Object obj45 = numberFormat15.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = numberFormat15.formatToCharacterIterator((java.lang.Object) (-1L));
        java.lang.Object obj49 = numberFormat15.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10L + "'", obj49, 10L);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat9.parse("-1");
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction11);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 / 1" + "'", str12, "-1 / 1");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat0.parse("-1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj27 = numberFormat25.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getNumeratorFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.lang.Object obj59 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44, numberFormat56, numberFormat72);
        java.lang.Object obj74 = numberFormat72.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat34, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = properFractionFormat79.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj84 = properFractionFormat79.clone();
        java.lang.Object obj85 = properFractionFormat79.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat79.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = numberFormat72.formatToCharacterIterator((java.lang.Object) properFractionFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1L + "'", obj59, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.lang.String str33 = numberFormat31.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        properFractionFormat36.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat51);
        properFractionFormat36.setWholeFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat54.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat73.getWholeFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat79);
        properFractionFormat36.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat31, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        properFractionFormat84.setWholeFormat(numberFormat86);
        fractionFormat0.setDenominatorFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.text.NumberFormat numberFormat94 = properFractionFormat93.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat93.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("-1 / 1");
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj7 = numberFormat5.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (-1L) + "'", obj7, (-1L));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat46.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        properFractionFormat62.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat45.setNumeratorFormat(numberFormat70);
        properFractionFormat25.setNumeratorFormat(numberFormat70);
        java.text.NumberFormat numberFormat73 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj74 = properFractionFormat25.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat25.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("10 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat33.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getNumeratorFormat();
        java.lang.Object obj44 = properFractionFormat42.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat45.getNumeratorFormat();
        properFractionFormat42.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat65.getNumeratorFormat();
        java.lang.Object obj71 = numberFormat69.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        java.text.NumberFormat numberFormat73 = properFractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction75 = properFractionFormat72.parse("10");
        java.lang.String str76 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction75);
        java.lang.String str77 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction75);
        java.lang.StringBuffer stringBuffer78 = null;
        java.text.FieldPosition fieldPosition79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer80 = properFractionFormat40.format((java.lang.Object) fraction75, stringBuffer78, fieldPosition79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1L + "'", obj71, 1L);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "10 / 1" + "'", str76, "10 / 1");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "10 / 1" + "'", str77, "10 / 1");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        properFractionFormat28.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        fractionFormat40.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        fractionFormat40.setDenominatorFormat(numberFormat50);
        java.lang.Object obj53 = numberFormat50.parseObject("1 / 1");
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat57.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj62 = properFractionFormat57.clone();
        java.lang.Object obj63 = properFractionFormat57.clone();
        java.text.NumberFormat numberFormat64 = properFractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat54, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat39, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        properFractionFormat25.setWholeFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat76.getNumeratorFormat();
        properFractionFormat73.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat84 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        properFractionFormat25.setWholeFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.lang.String str91 = properFractionFormat89.format((java.lang.Object) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator92 = properFractionFormat25.formatToCharacterIterator((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1L + "'", obj53, 1L);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1 0 / 1" + "'", str91, "-1 0 / 1");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.lang.Object obj15 = properFractionFormat4.clone();
        java.text.NumberFormat numberFormat16 = properFractionFormat4.getNumeratorFormat();
        java.lang.Class<?> wildcardClass17 = numberFormat16.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat43, numberFormat45);
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat46.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat56, numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getDenominatorFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat77.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat29.getWholeFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat26.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat37);
        java.lang.Class<?> wildcardClass39 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj2 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.lang.Object obj19 = numberFormat18.clone();
        fractionFormat15.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj43 = properFractionFormat38.clone();
        java.lang.Object obj44 = properFractionFormat38.clone();
        java.text.NumberFormat numberFormat45 = properFractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31, numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat31);
        fractionFormat0.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat49.parse("hi!", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getNumeratorFormat();
        java.lang.Object obj20 = numberFormat18.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = properFractionFormat21.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat32.getNumeratorFormat();
        properFractionFormat29.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        properFractionFormat21.setWholeFormat(numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = properFractionFormat11.format((java.lang.Object) properFractionFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1L + "'", obj20, 1L);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.lang.Object obj10 = properFractionFormat2.parseObject("1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getWholeFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = properFractionFormat2.parse("1 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        fractionFormat37.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48, numberFormat50, numberFormat52);
        java.text.NumberFormat numberFormat54 = properFractionFormat53.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat58.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat63);
        properFractionFormat36.setNumeratorFormat(numberFormat63);
        java.lang.Class<?> wildcardClass66 = numberFormat63.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getWholeFormat();
        properFractionFormat33.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        fractionFormat50.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.Object obj60 = numberFormat56.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getDenominatorFormat();
        java.lang.Object obj63 = properFractionFormat61.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getWholeFormat();
        properFractionFormat61.setDenominatorFormat(numberFormat68);
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = properFractionFormat33.format((java.lang.Object) properFractionFormat61, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat16.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = properFractionFormat32.getWholeFormat();
        fractionFormat14.setNumeratorFormat(numberFormat33);
        properFractionFormat13.setWholeFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat38.getDenominatorFormat();
        properFractionFormat13.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        properFractionFormat50.setWholeFormat(numberFormat52);
        fractionFormat46.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat46.parse("-1 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat46.getDenominatorFormat();
        java.lang.Object obj58 = numberFormat57.clone();
        properFractionFormat13.setNumeratorFormat(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.lang.Class<?> wildcardClass11 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = properFractionFormat3.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat3.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat3.parse("10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat68.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj73 = properFractionFormat68.clone();
        java.lang.Object obj74 = properFractionFormat68.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat76.getWholeFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = properFractionFormat82.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.text.NumberFormat numberFormat85 = properFractionFormat84.getWholeFormat();
        properFractionFormat40.setWholeFormat(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat68.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj73 = properFractionFormat68.clone();
        java.lang.Object obj74 = properFractionFormat68.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat76.getWholeFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.lang.String str84 = properFractionFormat82.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = properFractionFormat82.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat87 = properFractionFormat82.getWholeFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        properFractionFormat40.setNumeratorFormat(numberFormat88);
        java.text.ParsePosition parsePosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = properFractionFormat40.parseObject("hi!", parsePosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 0 / 1" + "'", str84, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("-1 / 1");
        java.lang.Object obj4 = fractionFormat0.clone();
        java.lang.Class<?> wildcardClass5 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.lang.Class<?> wildcardClass18 = properFractionFormat0.getClass();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat3.getWholeFormat();
        java.lang.Object obj11 = numberFormat9.parseObject("1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        java.lang.Object obj6 = null;
        java.lang.StringBuffer stringBuffer7 = null;
        java.text.FieldPosition fieldPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer9 = properFractionFormat4.format(obj6, stringBuffer7, fieldPosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat34);
        java.lang.Object obj36 = properFractionFormat25.clone();
        java.text.NumberFormat numberFormat37 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction46 = properFractionFormat40.parse("10");
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        properFractionFormat15.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        java.lang.Object obj40 = numberFormat37.parseObject("1 / 1");
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = properFractionFormat44.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj49 = properFractionFormat44.clone();
        java.lang.Object obj50 = properFractionFormat44.clone();
        java.text.NumberFormat numberFormat51 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat41, numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21, numberFormat26, numberFormat51);
        java.lang.Object obj54 = properFractionFormat53.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getNumeratorFormat();
        java.lang.Object obj57 = properFractionFormat55.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat58.getNumeratorFormat();
        properFractionFormat55.setDenominatorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = properFractionFormat55.getNumeratorFormat();
        properFractionFormat53.setDenominatorFormat(numberFormat73);
        fractionFormat11.setNumeratorFormat(numberFormat73);
        properFractionFormat2.setWholeFormat(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1L + "'", obj40, 1L);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1 / 1" + "'", str13, "1 / 1");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.Object obj59 = properFractionFormat57.parseObject("1 / 1");
        java.lang.Object obj60 = properFractionFormat57.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat68.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj73 = properFractionFormat68.clone();
        java.lang.Object obj74 = properFractionFormat68.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat76.getWholeFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat78);
        java.text.NumberFormat numberFormat80 = properFractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat40.getWholeFormat();
        java.lang.Object obj82 = numberFormat81.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.lang.Object obj67 = numberFormat66.clone();
        fractionFormat63.setDenominatorFormat(numberFormat66);
        properFractionFormat61.setWholeFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.lang.Object obj78 = numberFormat77.clone();
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75, numberFormat77, numberFormat79);
        java.text.NumberFormat numberFormat81 = properFractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat66, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        properFractionFormat2.setNumeratorFormat(numberFormat81);
        java.text.NumberFormat numberFormat85 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj58 = properFractionFormat56.parseObject("-1 / 1");
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat56.parse("-1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.lang.Object obj15 = properFractionFormat4.clone();
        java.text.NumberFormat numberFormat16 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.lang.Object obj30 = numberFormat27.parseObject("1 / 1");
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat34.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj39 = properFractionFormat34.clone();
        java.lang.Object obj40 = properFractionFormat34.clone();
        java.text.NumberFormat numberFormat41 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat45.getWholeFormat();
        java.lang.Object obj53 = numberFormat51.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat56.getWholeFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat51, numberFormat62);
        java.text.NumberFormat numberFormat66 = properFractionFormat65.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat4.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        properFractionFormat15.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        properFractionFormat28.setWholeFormat(numberFormat30);
        properFractionFormat15.setWholeFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat33.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getWholeFormat();
        properFractionFormat49.setDenominatorFormat(numberFormat58);
        properFractionFormat15.setWholeFormat(numberFormat58);
        java.text.NumberFormat numberFormat61 = properFractionFormat15.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat64.getWholeFormat();
        properFractionFormat15.setNumeratorFormat(numberFormat70);
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = properFractionFormat12.format((java.lang.Object) properFractionFormat15, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat48, numberFormat57);
        java.lang.Object obj61 = numberFormat48.clone();
        fractionFormat36.setDenominatorFormat(numberFormat48);
        properFractionFormat23.setNumeratorFormat(numberFormat48);
        java.lang.Object obj64 = properFractionFormat23.clone();
        java.text.ParsePosition parsePosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = properFractionFormat23.parseObject("1", parsePosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.lang.Class<?> wildcardClass2 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.lang.Object obj37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = properFractionFormat33.format(obj37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.lang.Object obj22 = numberFormat21.clone();
        fractionFormat18.setDenominatorFormat(numberFormat21);
        properFractionFormat0.setWholeFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = properFractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("1 / 1");
        properFractionFormat28.setWholeFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        properFractionFormat44.setWholeFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        fractionFormat56.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        fractionFormat56.setDenominatorFormat(numberFormat66);
        java.lang.Object obj69 = numberFormat66.parseObject("1 / 1");
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = properFractionFormat73.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj78 = properFractionFormat73.clone();
        java.lang.Object obj79 = properFractionFormat73.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66, numberFormat70, numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat55, numberFormat80);
        properFractionFormat28.setWholeFormat(numberFormat55);
        java.text.NumberFormat numberFormat84 = properFractionFormat28.getWholeFormat();
        properFractionFormat0.setNumeratorFormat(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1L + "'", obj40, 1L);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1L + "'", obj69, 1L);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.String str6 = properFractionFormat4.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = properFractionFormat4.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat9 = properFractionFormat4.getDenominatorFormat();
        java.lang.Object obj11 = properFractionFormat4.parseObject("1 / 1");
        java.text.NumberFormat numberFormat12 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat32, numberFormat48);
        java.text.NumberFormat numberFormat50 = properFractionFormat49.getNumeratorFormat();
        properFractionFormat4.setNumeratorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = properFractionFormat4.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat4.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat4.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat57.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj62 = properFractionFormat57.clone();
        java.lang.Object obj63 = properFractionFormat57.clone();
        java.text.NumberFormat numberFormat64 = properFractionFormat57.getDenominatorFormat();
        java.lang.Object obj66 = numberFormat64.parseObject("1");
        properFractionFormat4.setDenominatorFormat(numberFormat64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat0, numberFormat1, numberFormat64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: whole format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 0 / 1" + "'", str6, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1L + "'", obj66, 1L);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.Fraction fraction44 = properFractionFormat16.parse("-1");
        org.apache.commons.math.fraction.Fraction fraction46 = properFractionFormat16.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = properFractionFormat12.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj17 = properFractionFormat12.clone();
        java.lang.Object obj18 = properFractionFormat12.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.lang.Object obj42 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat57.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat39, numberFormat75);
        fractionFormat0.setDenominatorFormat(numberFormat75);
        java.text.ParsePosition parsePosition79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = fractionFormat0.parseObject("10 / 1", parsePosition79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1L + "'", obj42, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        java.lang.Object obj26 = numberFormat11.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat27.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat48.clone();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getDenominatorFormat();
        properFractionFormat46.setWholeFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat52);
        java.text.NumberFormat numberFormat54 = properFractionFormat53.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat54);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.Object obj51 = properFractionFormat49.parseObject("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.Object obj58 = numberFormat53.parseObject("1");
        properFractionFormat49.setWholeFormat(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        properFractionFormat14.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.Object obj35 = numberFormat30.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat44);
        properFractionFormat36.setWholeFormat(numberFormat44);
        java.text.NumberFormat numberFormat47 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        java.lang.Object obj53 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        properFractionFormat58.setWholeFormat(numberFormat60);
        fractionFormat54.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.Object obj64 = numberFormat60.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat66 = properFractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat50, numberFormat66);
        java.lang.Object obj69 = numberFormat50.parseObject("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        java.text.NumberFormat numberFormat3 = properFractionFormat0.getWholeFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = properFractionFormat0.parseObject("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        properFractionFormat74.setWholeFormat(numberFormat76);
        java.text.NumberFormat numberFormat82 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        java.lang.String str87 = properFractionFormat85.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat88 = properFractionFormat85.getWholeFormat();
        java.text.NumberFormat numberFormat89 = properFractionFormat85.getDenominatorFormat();
        java.lang.Object obj90 = numberFormat89.clone();
        java.lang.Object obj91 = numberFormat89.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator92 = numberFormat82.formatToCharacterIterator(obj91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "-1 0 / 1" + "'", str87, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat12.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat18);
        java.lang.Class<?> wildcardClass20 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        properFractionFormat21.setWholeFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        properFractionFormat34.setWholeFormat(numberFormat36);
        properFractionFormat21.setWholeFormat(numberFormat36);
        java.lang.String str40 = numberFormat36.format((java.lang.Object) (short) 10);
        properFractionFormat16.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = properFractionFormat16.getWholeFormat();
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction54 = properFractionFormat16.parse("1 / 1", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10" + "'", str40, "10");
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat26.getNumeratorFormat();
        java.lang.String str40 = numberFormat38.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat43.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        properFractionFormat56.setWholeFormat(numberFormat58);
        properFractionFormat43.setWholeFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        fractionFormat61.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        fractionFormat61.setDenominatorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat61.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat86 = properFractionFormat80.getWholeFormat();
        properFractionFormat77.setDenominatorFormat(numberFormat86);
        properFractionFormat43.setWholeFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23, numberFormat38, numberFormat86);
        java.lang.Object obj91 = numberFormat86.parseObject("10 / 1");
        properFractionFormat16.setDenominatorFormat(numberFormat86);
        java.text.NumberFormat numberFormat93 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1" + "'", str40, "1");
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10L + "'", obj91, 10L);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj8 = properFractionFormat6.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        fractionFormat9.setDenominatorFormat(numberFormat16);
        properFractionFormat6.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj23 = numberFormat22.clone();
        fractionFormat19.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.lang.Object obj33 = numberFormat32.clone();
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30, numberFormat32, numberFormat34);
        java.text.NumberFormat numberFormat36 = properFractionFormat35.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat19.getDenominatorFormat();
        properFractionFormat6.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat59 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat6.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.Fraction fraction62 = properFractionFormat6.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1L + "'", obj57, 1L);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction62);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat4);
        java.lang.String str7 = properFractionFormat5.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat8 = properFractionFormat5.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        properFractionFormat5.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        properFractionFormat18.setWholeFormat(numberFormat20);
        properFractionFormat5.setWholeFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat23.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat42.getWholeFormat();
        properFractionFormat39.setDenominatorFormat(numberFormat48);
        properFractionFormat5.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat51.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getWholeFormat();
        java.lang.Object obj69 = properFractionFormat67.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        properFractionFormat72.setWholeFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        properFractionFormat85.setWholeFormat(numberFormat87);
        properFractionFormat72.setWholeFormat(numberFormat87);
        java.lang.String str91 = numberFormat87.format((java.lang.Object) (short) 10);
        properFractionFormat67.setNumeratorFormat(numberFormat87);
        properFractionFormat5.setNumeratorFormat(numberFormat87);
        java.text.NumberFormat numberFormat94 = properFractionFormat5.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat5.getDenominatorFormat();
        java.lang.Object obj96 = numberFormat95.clone();
        fractionFormat0.setNumeratorFormat(numberFormat95);
        java.lang.Object obj98 = numberFormat95.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1 0 / 1" + "'", str7, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "10" + "'", str91, "10");
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        java.text.NumberFormat numberFormat33 = properFractionFormat32.getNumeratorFormat();
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = properFractionFormat32.parseObject("10 0 / 1", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat27 = properFractionFormat26.getNumeratorFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.lang.Object obj46 = numberFormat44.parseObject("1 / 1");
        properFractionFormat34.setWholeFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat50.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        fractionFormat62.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        fractionFormat62.setDenominatorFormat(numberFormat72);
        java.lang.Object obj75 = numberFormat72.parseObject("1 / 1");
        java.text.NumberFormat numberFormat76 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = properFractionFormat79.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj84 = properFractionFormat79.clone();
        java.lang.Object obj85 = properFractionFormat79.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72, numberFormat76, numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat61, numberFormat86);
        properFractionFormat34.setWholeFormat(numberFormat61);
        java.text.NumberFormat numberFormat90 = properFractionFormat34.getWholeFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat90);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat93 = fractionFormat92.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        java.text.NumberFormat numberFormat95 = properFractionFormat94.getWholeFormat();
        java.lang.String str97 = properFractionFormat94.format((java.lang.Object) (-1.0f));
        java.text.NumberFormat numberFormat98 = properFractionFormat94.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator99 = numberFormat90.formatToCharacterIterator((java.lang.Object) numberFormat98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1L + "'", obj75, 1L);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "-1 0 / 1" + "'", str97, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat98);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.lang.Object obj58 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        properFractionFormat64.setWholeFormat(numberFormat66);
        fractionFormat60.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        properFractionFormat59.setDenominatorFormat(numberFormat66);
        properFractionFormat2.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat72 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = properFractionFormat75.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj80 = properFractionFormat75.clone();
        java.lang.Object obj81 = properFractionFormat75.clone();
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat75.parse("-1 0 / 1");
        java.lang.String str84 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction83);
        java.lang.String str85 = numberFormat72.format((java.lang.Object) fraction83);
        java.lang.String str86 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction83);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 / 1" + "'", str84, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1" + "'", str85, "-1");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 / 1" + "'", str86, "-1 / 1");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat53, numberFormat62);
        java.lang.Object obj66 = numberFormat53.clone();
        java.lang.Object obj68 = numberFormat53.parseObject("-1 0 / 1");
        java.lang.Object obj69 = numberFormat53.clone();
        properFractionFormat40.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat71 = properFractionFormat40.getDenominatorFormat();
        java.lang.Object obj72 = properFractionFormat40.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction74 = properFractionFormat40.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1L) + "'", obj68, (-1L));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj33 = numberFormat32.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        properFractionFormat28.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        fractionFormat40.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        fractionFormat40.setDenominatorFormat(numberFormat50);
        java.lang.Object obj53 = numberFormat50.parseObject("1 / 1");
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat57.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj62 = properFractionFormat57.clone();
        java.lang.Object obj63 = properFractionFormat57.clone();
        java.text.NumberFormat numberFormat64 = properFractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat54, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat39, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        properFractionFormat25.setWholeFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat76.getNumeratorFormat();
        properFractionFormat73.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat84 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        properFractionFormat25.setWholeFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.lang.String str91 = properFractionFormat89.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator93 = properFractionFormat89.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj94 = properFractionFormat89.clone();
        java.lang.Object obj96 = properFractionFormat89.parseObject("10 / 1");
        java.lang.Object obj97 = properFractionFormat89.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator98 = properFractionFormat25.formatToCharacterIterator((java.lang.Object) properFractionFormat89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1L + "'", obj53, 1L);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1 0 / 1" + "'", str91, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        properFractionFormat18.setWholeFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        java.lang.Object obj43 = numberFormat40.parseObject("1 / 1");
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = properFractionFormat47.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj52 = properFractionFormat47.clone();
        java.lang.Object obj53 = properFractionFormat47.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat44, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat29, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = properFractionFormat59.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj64 = properFractionFormat59.clone();
        java.text.NumberFormat numberFormat65 = properFractionFormat59.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12, numberFormat24, numberFormat65);
        org.apache.commons.math.fraction.Fraction fraction68 = properFractionFormat66.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getNumeratorFormat();
        java.lang.Object obj84 = numberFormat82.parseObject("1 / 1");
        properFractionFormat72.setWholeFormat(numberFormat82);
        java.text.NumberFormat numberFormat86 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat69, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat90 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat90);
        java.text.NumberFormat numberFormat92 = properFractionFormat91.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction94 = properFractionFormat91.parse("-1 0 / 1");
        java.lang.StringBuffer stringBuffer95 = null;
        java.text.FieldPosition fieldPosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer97 = properFractionFormat88.format(fraction94, stringBuffer95, fieldPosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1L + "'", obj43, 1L);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(fraction94);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = properFractionFormat9.parse("1");
        java.lang.Class<?> wildcardClass35 = properFractionFormat9.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat2.parse("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getNumeratorFormat();
        java.lang.Object obj38 = numberFormat36.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.text.NumberFormat numberFormat40 = properFractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.Object obj42 = properFractionFormat41.clone();
        java.lang.Object obj43 = properFractionFormat41.clone();
        java.lang.StringBuffer stringBuffer44 = null;
        java.text.FieldPosition fieldPosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer46 = properFractionFormat2.format((java.lang.Object) properFractionFormat41, stringBuffer44, fieldPosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1L + "'", obj38, 1L);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat21.clone();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getDenominatorFormat();
        properFractionFormat19.setWholeFormat(numberFormat23);
        java.text.ParsePosition parsePosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction27 = properFractionFormat19.parse("", parsePosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("10 / 1");
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction9);
        java.lang.Class<?> wildcardClass11 = fraction9.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "10 / 1" + "'", str10, "10 / 1");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        properFractionFormat2.setWholeFormat(numberFormat38);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat2.parse("-1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        properFractionFormat67.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat77 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat74.getDenominatorFormat();
        fractionFormat71.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63, numberFormat69, numberFormat78);
        java.lang.Object obj82 = numberFormat69.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        java.text.NumberFormat numberFormat84 = properFractionFormat83.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.String str89 = properFractionFormat87.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = properFractionFormat87.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat92 = properFractionFormat87.getDenominatorFormat();
        properFractionFormat83.setWholeFormat(numberFormat92);
        org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat83.parse("10 0 / 1");
        java.lang.String str96 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction95);
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = properFractionFormat2.format(fraction95, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 0 / 1" + "'", str89, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "10 / 1" + "'", str96, "10 / 1");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = properFractionFormat11.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj16 = properFractionFormat11.clone();
        java.lang.Object obj17 = properFractionFormat11.clone();
        java.text.NumberFormat numberFormat18 = properFractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getWholeFormat();
        properFractionFormat8.setWholeFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        java.lang.Object obj16 = properFractionFormat9.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat26.getNumeratorFormat();
        java.lang.String str40 = numberFormat38.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat43.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        properFractionFormat56.setWholeFormat(numberFormat58);
        properFractionFormat43.setWholeFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        fractionFormat61.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        fractionFormat61.setDenominatorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat61.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat86 = properFractionFormat80.getWholeFormat();
        properFractionFormat77.setDenominatorFormat(numberFormat86);
        properFractionFormat43.setWholeFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23, numberFormat38, numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat91 = fractionFormat90.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat91);
        java.lang.String str94 = properFractionFormat92.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat95 = properFractionFormat92.getWholeFormat();
        java.text.NumberFormat numberFormat96 = properFractionFormat92.getDenominatorFormat();
        properFractionFormat89.setDenominatorFormat(numberFormat96);
        properFractionFormat9.setWholeFormat(numberFormat96);
        properFractionFormat4.setDenominatorFormat(numberFormat96);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1" + "'", str40, "1");
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "-1 0 / 1" + "'", str94, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.lang.Object obj58 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        properFractionFormat64.setWholeFormat(numberFormat66);
        fractionFormat60.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        properFractionFormat59.setDenominatorFormat(numberFormat66);
        properFractionFormat2.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat72 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj73 = properFractionFormat2.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat56, numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.text.NumberFormat numberFormat80 = properFractionFormat79.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        java.lang.Object obj18 = numberFormat15.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = properFractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.Object obj28 = properFractionFormat26.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getDenominatorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat36);
        properFractionFormat26.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        fractionFormat39.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat52, numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat39.getDenominatorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat71.getNumeratorFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat79 = properFractionFormat78.getDenominatorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12, numberFormat15, numberFormat79);
        java.text.ParsePosition parsePosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction84 = properFractionFormat81.parse("", parsePosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1L + "'", obj77, 1L);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.lang.Object obj12 = fractionFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.lang.Object obj29 = numberFormat28.clone();
        fractionFormat25.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.lang.Object obj44 = numberFormat41.parseObject("1 / 1");
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.lang.Object obj54 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat55 = properFractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat45, numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23, numberFormat28, numberFormat41);
        fractionFormat10.setDenominatorFormat(numberFormat41);
        properFractionFormat2.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat2.parse("-1 0 / 1");
        java.lang.Object obj63 = properFractionFormat2.parseObject("1 0 / 1");
        java.text.NumberFormat numberFormat64 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.lang.Object obj22 = numberFormat21.clone();
        fractionFormat18.setDenominatorFormat(numberFormat21);
        properFractionFormat0.setWholeFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = properFractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat26.clone();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = numberFormat25.format((java.lang.Object) numberFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.lang.Object obj2 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.Object obj5 = properFractionFormat4.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        properFractionFormat17.setNumeratorFormat(numberFormat34);
        properFractionFormat8.setDenominatorFormat(numberFormat34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = properFractionFormat4.format((java.lang.Object) properFractionFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat3.clone();
        java.text.NumberFormat numberFormat10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properFractionFormat3.setNumeratorFormat(numberFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.lang.Object obj9 = fractionFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        fractionFormat7.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        properFractionFormat6.setDenominatorFormat(numberFormat38);
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = properFractionFormat6.parse("hi!", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = properFractionFormat40.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat52);
        properFractionFormat36.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat55 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat36.getNumeratorFormat();
        java.lang.Object obj58 = properFractionFormat36.parseObject("1 / 1");
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat41);
        java.text.ParsePosition parsePosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction45 = properFractionFormat16.parse("-1 0 / 1", parsePosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat12.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        properFractionFormat23.setWholeFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        properFractionFormat36.setWholeFormat(numberFormat38);
        properFractionFormat23.setWholeFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat41.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getWholeFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        properFractionFormat23.setWholeFormat(numberFormat66);
        java.text.NumberFormat numberFormat69 = properFractionFormat23.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat69.parseObject("10 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat20, numberFormat69);
        java.lang.Object obj74 = numberFormat69.parseObject("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat2.parse("10 0 / 1");
        java.lang.String str17 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction16);
        java.lang.String str18 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction16);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10 / 1" + "'", str17, "10 / 1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10 / 1" + "'", str18, "10 / 1");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat35.getDenominatorFormat();
        properFractionFormat30.setDenominatorFormat(numberFormat41);
        properFractionFormat2.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat47.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj63 = numberFormat62.clone();
        java.text.NumberFormat numberFormat64 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60, numberFormat62, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        fractionFormat66.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        fractionFormat66.setDenominatorFormat(numberFormat76);
        java.text.NumberFormat numberFormat78 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat66.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = properFractionFormat82.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat82.getNumeratorFormat();
        java.lang.Object obj85 = numberFormat84.clone();
        properFractionFormat65.setDenominatorFormat(numberFormat84);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) properFractionFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getNumeratorFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52, numberFormat68, numberFormat74);
        org.apache.commons.math.fraction.Fraction fraction77 = properFractionFormat75.parse("1 / 1");
        java.text.ParsePosition parsePosition79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction80 = properFractionFormat75.parse("-1 0 / 1", parsePosition79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fraction77);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat4 = properFractionFormat3.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = properFractionFormat7.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj12 = properFractionFormat7.clone();
        java.lang.Object obj13 = properFractionFormat7.clone();
        java.text.NumberFormat numberFormat14 = properFractionFormat7.getDenominatorFormat();
        properFractionFormat3.setDenominatorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = properFractionFormat3.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat2.parse("1 / 1");
        java.text.NumberFormat numberFormat94 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat96 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction98 = properFractionFormat2.parse("10 0 / 1");
        java.lang.String str99 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction98);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(fraction98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "10 / 1" + "'", str99, "10 / 1");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat26.parseObject("10");
        fractionFormat10.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat51.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getDenominatorFormat();
        properFractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.Object obj65 = numberFormat60.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat56, numberFormat60);
        fractionFormat10.setNumeratorFormat(numberFormat60);
        java.text.NumberFormat numberFormat68 = fractionFormat10.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat68);
        java.lang.Object obj71 = properFractionFormat2.parseObject("1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10L + "'", obj28, 10L);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1L + "'", obj65, 1L);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = properFractionFormat2.parse("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        fractionFormat42.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat42.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = properFractionFormat58.getWholeFormat();
        java.lang.Object obj60 = properFractionFormat58.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        properFractionFormat63.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        properFractionFormat76.setWholeFormat(numberFormat78);
        properFractionFormat63.setWholeFormat(numberFormat78);
        java.lang.String str82 = numberFormat78.format((java.lang.Object) (short) 10);
        properFractionFormat58.setNumeratorFormat(numberFormat78);
        properFractionFormat40.setNumeratorFormat(numberFormat78);
        java.text.ParsePosition parsePosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = properFractionFormat40.parseObject("hi!", parsePosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "10" + "'", str82, "10");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.lang.Object obj22 = numberFormat21.clone();
        fractionFormat18.setDenominatorFormat(numberFormat21);
        properFractionFormat0.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj32 = properFractionFormat27.clone();
        java.lang.Object obj33 = properFractionFormat27.clone();
        java.text.NumberFormat numberFormat34 = properFractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction37 = properFractionFormat35.parse("-1");
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getNumeratorFormat();
        properFractionFormat0.setNumeratorFormat(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        java.lang.Object obj27 = properFractionFormat21.clone();
        java.lang.Object obj29 = properFractionFormat21.parseObject("1");
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat18.formatToCharacterIterator((java.lang.Object) properFractionFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        fractionFormat35.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        fractionFormat35.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat31, numberFormat47);
        java.lang.Object obj49 = numberFormat47.clone();
        properFractionFormat2.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat51.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat67.getDenominatorFormat();
        properFractionFormat2.setWholeFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = properFractionFormat8.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat25.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        properFractionFormat41.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat61.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getDenominatorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat63, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        java.lang.Object obj84 = numberFormat83.clone();
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81, numberFormat83, numberFormat85);
        properFractionFormat75.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat90 = properFractionFormat89.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = properFractionFormat0.parse("10", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat9.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat34.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat50.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator53 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) properFractionFormat50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction7 = properFractionFormat4.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        java.lang.Object obj16 = numberFormat14.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getWholeFormat();
        properFractionFormat4.setNumeratorFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1L + "'", obj16, 1L);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        java.text.NumberFormat numberFormat6 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("1 / 1");
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj32 = properFractionFormat27.clone();
        java.lang.Object obj33 = properFractionFormat27.clone();
        java.text.NumberFormat numberFormat34 = properFractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat24, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat38.getWholeFormat();
        java.lang.Object obj46 = numberFormat44.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat49.getWholeFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat44, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = properFractionFormat61.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj66 = properFractionFormat61.clone();
        java.lang.Object obj67 = properFractionFormat61.clone();
        java.text.NumberFormat numberFormat68 = properFractionFormat61.getDenominatorFormat();
        java.lang.Object obj70 = numberFormat68.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat44, numberFormat68);
        java.lang.Class<?> wildcardClass72 = numberFormat44.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1L) + "'", obj46, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1L) + "'", obj57, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1L + "'", obj70, 1L);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getNumeratorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("1 / 1");
        properFractionFormat12.setWholeFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = properFractionFormat12.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat12.setNumeratorFormat(numberFormat36);
        org.apache.commons.math.fraction.Fraction fraction39 = properFractionFormat12.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = properFractionFormat2.format(fraction39, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1L + "'", obj24, 1L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fraction39);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        java.text.NumberFormat numberFormat31 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj5 = numberFormat1.clone();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getNumeratorFormat();
        properFractionFormat19.setDenominatorFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = properFractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        fractionFormat32.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        fractionFormat32.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = properFractionFormat53.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getDenominatorFormat();
        properFractionFormat46.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.Object obj67 = numberFormat62.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30, numberFormat58, numberFormat75);
        java.lang.Object obj78 = numberFormat58.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        properFractionFormat10.setWholeFormat(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1L + "'", obj67, 1L);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1L + "'", obj78, 1L);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = properFractionFormat28.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj33 = properFractionFormat28.clone();
        java.lang.Object obj34 = properFractionFormat28.clone();
        java.text.NumberFormat numberFormat35 = properFractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat36.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat21.setNumeratorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.lang.Object obj49 = numberFormat46.parseObject("1 / 1");
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = properFractionFormat53.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj58 = properFractionFormat53.clone();
        java.lang.Object obj59 = properFractionFormat53.clone();
        java.text.NumberFormat numberFormat60 = properFractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat50, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj72 = numberFormat70.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat75.getWholeFormat();
        java.lang.Object obj83 = numberFormat81.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60, numberFormat70, numberFormat81);
        properFractionFormat21.setNumeratorFormat(numberFormat70);
        properFractionFormat16.setDenominatorFormat(numberFormat70);
        java.lang.Object obj87 = properFractionFormat16.clone();
        java.text.NumberFormat numberFormat88 = properFractionFormat16.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1L + "'", obj49, 1L);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1L) + "'", obj83, (-1L));
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Class<?> wildcardClass12 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.lang.Object obj67 = numberFormat66.clone();
        fractionFormat63.setDenominatorFormat(numberFormat66);
        properFractionFormat61.setWholeFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.lang.Object obj78 = numberFormat77.clone();
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75, numberFormat77, numberFormat79);
        java.text.NumberFormat numberFormat81 = properFractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat66, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        properFractionFormat2.setNumeratorFormat(numberFormat81);
        java.text.NumberFormat numberFormat85 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj14 = properFractionFormat2.parseObject("-1");
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = properFractionFormat2.parseObject("10 0 / 1", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getNumeratorFormat();
        java.text.ParsePosition parsePosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction68 = properFractionFormat64.parse("-1 0 / 1", parsePosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = properFractionFormat11.format((java.lang.Object) numberFormat18, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction9 = null;
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = properFractionFormat2.format(fraction9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        properFractionFormat8.setWholeFormat(numberFormat10);
        fractionFormat4.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.Object obj14 = numberFormat10.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat16 = properFractionFormat15.getDenominatorFormat();
        java.lang.Object obj18 = properFractionFormat15.parseObject("1");
        org.apache.commons.math.fraction.Fraction fraction20 = properFractionFormat15.parse("10 / 1");
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat15.parse("10 / 1");
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = properFractionFormat3.format(fraction22, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.parseObject("-1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (-1L) + "'", obj32, (-1L));
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = properFractionFormat37.parseObject("-1", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = properFractionFormat20.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        properFractionFormat20.setWholeFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat36, numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat25, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        properFractionFormat56.setWholeFormat(numberFormat58);
        fractionFormat52.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        properFractionFormat51.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.lang.Object obj71 = properFractionFormat65.clone();
        java.text.NumberFormat numberFormat72 = properFractionFormat65.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat51.getNumeratorFormat();
        properFractionFormat41.setNumeratorFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat41.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = properFractionFormat33.parse("1 / 1", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        properFractionFormat28.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        fractionFormat40.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        fractionFormat40.setDenominatorFormat(numberFormat50);
        java.lang.Object obj53 = numberFormat50.parseObject("1 / 1");
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat57.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj62 = properFractionFormat57.clone();
        java.lang.Object obj63 = properFractionFormat57.clone();
        java.text.NumberFormat numberFormat64 = properFractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat54, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat39, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        properFractionFormat25.setWholeFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat76.getNumeratorFormat();
        properFractionFormat73.setDenominatorFormat(numberFormat82);
        java.text.NumberFormat numberFormat84 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        properFractionFormat25.setWholeFormat(numberFormat84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = properFractionFormat25.parseObject("-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1L + "'", obj53, 1L);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        properFractionFormat33.setWholeFormat(numberFormat35);
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = properFractionFormat50.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.lang.Object obj56 = numberFormat55.clone();
        fractionFormat52.setDenominatorFormat(numberFormat55);
        properFractionFormat50.setWholeFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.lang.Object obj67 = numberFormat66.clone();
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64, numberFormat66, numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat55, numberFormat70);
        properFractionFormat38.setNumeratorFormat(numberFormat70);
        properFractionFormat16.setNumeratorFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat3.clone();
        java.lang.Class<?> wildcardClass9 = properFractionFormat3.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat2.parse("-1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.Object obj18 = properFractionFormat16.parseObject("10 / 1");
        java.lang.Object obj19 = properFractionFormat16.clone();
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = properFractionFormat16.parseObject("hi!", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        java.lang.Object obj45 = numberFormat10.clone();
        java.lang.Object obj47 = numberFormat10.parseObject("-1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat51.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj56 = properFractionFormat51.clone();
        java.lang.Object obj57 = properFractionFormat51.clone();
        java.text.NumberFormat numberFormat58 = properFractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat59.parse("-1");
        java.lang.String str62 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.String str63 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = properFractionFormat48.format(fraction61, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 / 1" + "'", str62, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 / 1" + "'", str63, "-1 / 1");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat43.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.lang.Object obj68 = numberFormat65.parseObject("1 / 1");
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = properFractionFormat72.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj77 = properFractionFormat72.clone();
        java.lang.Object obj78 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat79 = properFractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat69, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = properFractionFormat84.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj89 = properFractionFormat84.clone();
        java.text.NumberFormat numberFormat90 = properFractionFormat84.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat49, numberFormat90);
        properFractionFormat23.setNumeratorFormat(numberFormat37);
        java.lang.Class<?> wildcardClass93 = properFractionFormat23.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1L + "'", obj68, 1L);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat43, numberFormat45);
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.lang.Object obj61 = numberFormat58.parseObject("1 / 1");
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.lang.Object obj71 = properFractionFormat65.clone();
        java.text.NumberFormat numberFormat72 = properFractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat62, numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getDenominatorFormat();
        properFractionFormat46.setDenominatorFormat(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1L + "'", obj61, 1L);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat15.getDenominatorFormat();
        properFractionFormat10.setDenominatorFormat(numberFormat21);
        java.lang.Object obj24 = properFractionFormat10.parseObject("-1 / 1");
        java.lang.Object obj26 = properFractionFormat10.parseObject("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getWholeFormat();
        fractionFormat27.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat67);
        java.lang.StringBuffer stringBuffer69 = null;
        java.text.FieldPosition fieldPosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer71 = properFractionFormat10.format((java.lang.Object) fractionFormat27, stringBuffer69, fieldPosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat32, numberFormat48);
        java.lang.Object obj50 = numberFormat48.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = properFractionFormat54.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat59 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat54.getDenominatorFormat();
        properFractionFormat51.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat63);
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = properFractionFormat9.format((java.lang.Object) properFractionFormat51, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = properFractionFormat13.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj18 = properFractionFormat13.clone();
        java.lang.Object obj19 = properFractionFormat13.clone();
        org.apache.commons.math.fraction.Fraction fraction21 = properFractionFormat13.parse("-1 0 / 1");
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = properFractionFormat10.format(fraction21, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 / 1" + "'", str22, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 / 1" + "'", str23, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 / 1" + "'", str24, "-1 / 1");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        fractionFormat31.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        fractionFormat37.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.parseObject("1 / 1");
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = properFractionFormat54.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj59 = properFractionFormat54.clone();
        java.lang.Object obj60 = properFractionFormat54.clone();
        java.text.NumberFormat numberFormat61 = properFractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat51, numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat34, numberFormat47);
        properFractionFormat0.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat65 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.lang.Object obj30 = numberFormat27.parseObject("1 / 1");
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat34.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj39 = properFractionFormat34.clone();
        java.lang.Object obj40 = properFractionFormat34.clone();
        java.text.NumberFormat numberFormat41 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat45.getWholeFormat();
        java.lang.Object obj53 = numberFormat51.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat56.getWholeFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat51, numberFormat62);
        properFractionFormat16.setWholeFormat(numberFormat51);
        java.lang.Class<?> wildcardClass67 = properFractionFormat16.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj19 = numberFormat18.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat20.parse("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fraction22);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat28.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        java.lang.Object obj16 = numberFormat15.clone();
        fractionFormat12.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.lang.Object obj31 = numberFormat28.parseObject("1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = properFractionFormat35.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj40 = properFractionFormat35.clone();
        java.lang.Object obj41 = properFractionFormat35.clone();
        java.text.NumberFormat numberFormat42 = properFractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction46 = properFractionFormat44.parse("10 0 / 1");
        java.lang.String str47 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1L + "'", obj31, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10 / 1" + "'", str47, "10 / 1");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        properFractionFormat8.setWholeFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        properFractionFormat21.setWholeFormat(numberFormat23);
        properFractionFormat8.setWholeFormat(numberFormat23);
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = properFractionFormat5.format((java.lang.Object) numberFormat23, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        properFractionFormat22.setWholeFormat(numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator28 = numberFormat18.formatToCharacterIterator((java.lang.Object) numberFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.lang.Object obj38 = properFractionFormat36.parseObject("10");
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = properFractionFormat36.format((java.lang.Object) numberFormat46, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat10.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("1 / 1");
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat39.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj44 = properFractionFormat39.clone();
        java.lang.Object obj45 = properFractionFormat39.clone();
        java.text.NumberFormat numberFormat46 = properFractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat36, numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat21, numberFormat46);
        java.lang.Object obj49 = properFractionFormat48.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat50.getNumeratorFormat();
        java.lang.Object obj52 = properFractionFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        fractionFormat53.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        fractionFormat53.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat53.getNumeratorFormat();
        properFractionFormat50.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat48.setDenominatorFormat(numberFormat68);
        fractionFormat6.setNumeratorFormat(numberFormat68);
        java.lang.Object obj71 = numberFormat68.clone();
        properFractionFormat2.setWholeFormat(numberFormat68);
        java.text.NumberFormat numberFormat73 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("1");
        java.lang.Object obj10 = numberFormat7.clone();
        java.lang.Class<?> wildcardClass11 = numberFormat7.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj63 = numberFormat62.clone();
        fractionFormat59.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        java.lang.Object obj73 = numberFormat72.clone();
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70, numberFormat72, numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat75.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getDenominatorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        fractionFormat59.setDenominatorFormat(numberFormat85);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        properFractionFormat55.setDenominatorFormat(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        properFractionFormat19.setWholeFormat(numberFormat21);
        fractionFormat15.setNumeratorFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.lang.Object obj42 = numberFormat41.clone();
        fractionFormat38.setDenominatorFormat(numberFormat41);
        properFractionFormat36.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat52, numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat41, numberFormat56);
        properFractionFormat24.setNumeratorFormat(numberFormat56);
        properFractionFormat2.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat43.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.lang.Object obj68 = numberFormat65.parseObject("1 / 1");
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = properFractionFormat72.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj77 = properFractionFormat72.clone();
        java.lang.Object obj78 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat79 = properFractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat69, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = properFractionFormat84.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj89 = properFractionFormat84.clone();
        java.text.NumberFormat numberFormat90 = properFractionFormat84.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat49, numberFormat90);
        properFractionFormat23.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat93 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat94 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat23.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1L + "'", obj68, 1L);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getWholeFormat();
        properFractionFormat11.setNumeratorFormat(numberFormat28);
        properFractionFormat2.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat31.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        fractionFormat50.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        fractionFormat50.setDenominatorFormat(numberFormat60);
        java.lang.Object obj63 = numberFormat60.parseObject("1 / 1");
        java.text.NumberFormat numberFormat64 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = properFractionFormat67.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj72 = properFractionFormat67.clone();
        java.lang.Object obj73 = properFractionFormat67.clone();
        java.text.NumberFormat numberFormat74 = properFractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60, numberFormat64, numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        properFractionFormat47.setDenominatorFormat(numberFormat76);
        java.lang.Class<?> wildcardClass79 = numberFormat76.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = properFractionFormat2.format((java.lang.Object) wildcardClass79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1L + "'", obj63, 1L);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat64);
        java.text.ParsePosition parsePosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = properFractionFormat40.parseObject("hi!", parsePosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat4);
        java.lang.String str7 = properFractionFormat5.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat8 = properFractionFormat5.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        properFractionFormat5.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        properFractionFormat18.setWholeFormat(numberFormat20);
        properFractionFormat5.setWholeFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat23.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat42.getWholeFormat();
        properFractionFormat39.setDenominatorFormat(numberFormat48);
        properFractionFormat5.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat51.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getWholeFormat();
        java.lang.Object obj69 = properFractionFormat67.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        properFractionFormat72.setWholeFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        properFractionFormat85.setWholeFormat(numberFormat87);
        properFractionFormat72.setWholeFormat(numberFormat87);
        java.lang.String str91 = numberFormat87.format((java.lang.Object) (short) 10);
        properFractionFormat67.setNumeratorFormat(numberFormat87);
        properFractionFormat5.setNumeratorFormat(numberFormat87);
        java.text.NumberFormat numberFormat94 = properFractionFormat5.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat5.getDenominatorFormat();
        java.lang.Object obj96 = numberFormat95.clone();
        fractionFormat0.setNumeratorFormat(numberFormat95);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat98 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat95);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1 0 / 1" + "'", str7, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "10" + "'", str91, "10");
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.lang.Object obj12 = properFractionFormat10.clone();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator14 = properFractionFormat5.formatToCharacterIterator((java.lang.Object) numberFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = properFractionFormat9.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = properFractionFormat37.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat46.getWholeFormat();
        properFractionFormat37.setNumeratorFormat(numberFormat52);
        properFractionFormat9.setDenominatorFormat(numberFormat52);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = properFractionFormat9.parseObject("", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        java.lang.Object obj29 = properFractionFormat2.parseObject("1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction31 = properFractionFormat2.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fraction31);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        properFractionFormat24.setWholeFormat(numberFormat26);
        properFractionFormat11.setWholeFormat(numberFormat26);
        java.lang.Object obj30 = properFractionFormat11.parseObject("10");
        java.text.NumberFormat numberFormat31 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        fractionFormat32.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        fractionFormat32.setDenominatorFormat(numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat32.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat32.getNumeratorFormat();
        properFractionFormat11.setDenominatorFormat(numberFormat47);
        properFractionFormat2.setWholeFormat(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getWholeFormat();
        java.lang.Object obj27 = properFractionFormat16.parseObject("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj10 = numberFormat8.parseObject("-1 / 1");
        java.lang.Object obj12 = numberFormat8.parseObject("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat42.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj61 = properFractionFormat56.clone();
        java.lang.Object obj62 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat63 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat32.setNumeratorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = properFractionFormat32.getDenominatorFormat();
        java.lang.Object obj69 = numberFormat67.parseObject("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat13);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat18.getNumeratorFormat();
        java.lang.Object obj24 = numberFormat22.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        java.lang.String str39 = numberFormat37.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        properFractionFormat42.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        properFractionFormat55.setWholeFormat(numberFormat57);
        properFractionFormat42.setWholeFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction74 = fractionFormat60.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat82 = properFractionFormat79.getWholeFormat();
        java.text.NumberFormat numberFormat83 = properFractionFormat79.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat79.getWholeFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat79.getWholeFormat();
        properFractionFormat76.setDenominatorFormat(numberFormat85);
        properFractionFormat42.setWholeFormat(numberFormat85);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat37, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat90 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat92 = fractionFormat91.getDenominatorFormat();
        java.lang.Object obj93 = numberFormat92.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat90, numberFormat92);
        java.lang.Object obj95 = numberFormat90.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat96 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14, numberFormat15, numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1L + "'", obj24, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1" + "'", str39, "1");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        java.lang.Object obj5 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        fractionFormat6.setDenominatorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        fractionFormat6.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat6.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat23 = properFractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat22.getDenominatorFormat();
        java.lang.Object obj25 = numberFormat24.clone();
        fractionFormat0.setNumeratorFormat(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.Object obj5 = numberFormat3.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = properFractionFormat9.parseObject("-1 0 / 1", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction37 = properFractionFormat25.parse("10 0 / 1");
        java.text.NumberFormat numberFormat38 = properFractionFormat25.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getNumeratorFormat();
        java.lang.Object obj19 = numberFormat17.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        java.lang.String str34 = numberFormat32.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        properFractionFormat37.setWholeFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        properFractionFormat50.setWholeFormat(numberFormat52);
        properFractionFormat37.setWholeFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat77 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        properFractionFormat71.setDenominatorFormat(numberFormat80);
        properFractionFormat37.setWholeFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat32, numberFormat80);
        properFractionFormat10.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat85 = properFractionFormat10.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1L + "'", obj19, 1L);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        properFractionFormat73.setNumeratorFormat(numberFormat75);
        java.lang.Class<?> wildcardClass77 = numberFormat75.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat53, numberFormat62);
        java.lang.Object obj66 = numberFormat53.clone();
        java.lang.Object obj68 = numberFormat53.parseObject("-1 0 / 1");
        java.lang.Object obj69 = numberFormat53.clone();
        properFractionFormat40.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat71 = properFractionFormat40.getDenominatorFormat();
        java.text.ParsePosition parsePosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction74 = properFractionFormat40.parse("hi!", parsePosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1L) + "'", obj68, (-1L));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat16.parse("10 0 / 1");
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10 / 1" + "'", str30, "10 / 1");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.lang.Object obj10 = properFractionFormat2.parseObject("1");
        java.lang.Object obj12 = properFractionFormat2.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat53, numberFormat62);
        java.lang.Object obj66 = numberFormat53.clone();
        java.lang.Object obj68 = numberFormat53.parseObject("-1 0 / 1");
        java.lang.Object obj69 = numberFormat53.clone();
        properFractionFormat40.setDenominatorFormat(numberFormat53);
        java.text.ParsePosition parsePosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction73 = properFractionFormat40.parse("-1 / 1", parsePosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1L) + "'", obj68, (-1L));
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat16.parse("10 0 / 1");
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = properFractionFormat16.parseObject("hi!", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat21.clone();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getDenominatorFormat();
        properFractionFormat19.setWholeFormat(numberFormat23);
        java.lang.Class<?> wildcardClass25 = numberFormat23.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction4);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10 / 1" + "'", str5, "10 / 1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "10 / 1" + "'", str6, "10 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "10 / 1" + "'", str7, "10 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "10 / 1" + "'", str8, "10 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "10 / 1" + "'", str9, "10 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "10 / 1" + "'", str10, "10 / 1");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("-1 / 1");
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction8);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 / 1" + "'", str9, "-1 / 1");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat2.parse("-1");
        java.text.ParsePosition parsePosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction25 = properFractionFormat2.parse("-1 0 / 1", parsePosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fraction22);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.lang.Object obj67 = numberFormat66.clone();
        fractionFormat63.setDenominatorFormat(numberFormat66);
        properFractionFormat61.setWholeFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.lang.Object obj78 = numberFormat77.clone();
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75, numberFormat77, numberFormat79);
        java.text.NumberFormat numberFormat81 = properFractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat66, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        properFractionFormat2.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.String str89 = properFractionFormat87.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = properFractionFormat87.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj92 = properFractionFormat87.clone();
        java.lang.Object obj93 = properFractionFormat87.clone();
        org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat87.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat96 = properFractionFormat87.getWholeFormat();
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = properFractionFormat2.format((java.lang.Object) numberFormat96, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 0 / 1" + "'", str89, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat9.parse("-1");
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = properFractionFormat9.parseObject("10 0 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        properFractionFormat31.setWholeFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.lang.Object obj56 = numberFormat53.parseObject("1 / 1");
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = properFractionFormat60.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj65 = properFractionFormat60.clone();
        java.lang.Object obj66 = properFractionFormat60.clone();
        java.text.NumberFormat numberFormat67 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53, numberFormat57, numberFormat67);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat42, numberFormat67);
        java.lang.Object obj70 = properFractionFormat69.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        java.lang.Object obj73 = properFractionFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        fractionFormat74.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getWholeFormat();
        fractionFormat74.setDenominatorFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = fractionFormat74.getNumeratorFormat();
        properFractionFormat71.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat89 = properFractionFormat71.getNumeratorFormat();
        properFractionFormat69.setDenominatorFormat(numberFormat89);
        java.text.NumberFormat numberFormat91 = properFractionFormat69.getDenominatorFormat();
        properFractionFormat28.setDenominatorFormat(numberFormat91);
        java.text.ParsePosition parsePosition94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = properFractionFormat28.parseObject("10", parsePosition94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1L + "'", obj56, 1L);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        fractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator19 = numberFormat6.formatToCharacterIterator((java.lang.Object) properFractionFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction18 = properFractionFormat2.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat52);
        properFractionFormat36.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat55 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat36.getNumeratorFormat();
        java.lang.Object obj58 = properFractionFormat36.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        fractionFormat59.setDenominatorFormat(numberFormat61);
        properFractionFormat36.setDenominatorFormat(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        properFractionFormat8.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = properFractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat8.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = properFractionFormat4.format((java.lang.Object) numberFormat24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat17.getDenominatorFormat();
        java.lang.Object obj23 = numberFormat22.clone();
        java.lang.StringBuffer stringBuffer24 = null;
        java.text.FieldPosition fieldPosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer26 = properFractionFormat2.format((java.lang.Object) numberFormat22, stringBuffer24, fieldPosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        properFractionFormat12.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat12.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = properFractionFormat9.format(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat15.getDenominatorFormat();
        properFractionFormat10.setDenominatorFormat(numberFormat21);
        java.lang.Object obj24 = properFractionFormat10.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat25 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        properFractionFormat29.setWholeFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat44);
        properFractionFormat29.setWholeFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat66.getWholeFormat();
        properFractionFormat63.setDenominatorFormat(numberFormat72);
        properFractionFormat29.setWholeFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getDenominatorFormat();
        fractionFormat75.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.String str89 = properFractionFormat87.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat90 = properFractionFormat87.getWholeFormat();
        java.text.NumberFormat numberFormat91 = properFractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72, numberFormat82, numberFormat91);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.text.NumberFormat numberFormat95 = properFractionFormat94.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator96 = properFractionFormat10.formatToCharacterIterator((java.lang.Object) numberFormat95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 0 / 1" + "'", str89, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = properFractionFormat2.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat18 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        properFractionFormat41.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction48 = properFractionFormat41.parse("10");
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = properFractionFormat37.format(fraction48, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "10 / 1" + "'", str49, "10 / 1");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = properFractionFormat26.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj31 = properFractionFormat26.clone();
        java.lang.Object obj32 = properFractionFormat26.clone();
        java.text.NumberFormat numberFormat33 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat23, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getWholeFormat();
        java.lang.Object obj45 = numberFormat43.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat43, numberFormat54);
        properFractionFormat2.setWholeFormat(numberFormat54);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = properFractionFormat2.parseObject("-1 0 / 1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("1 / 1");
        properFractionFormat38.setWholeFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        fractionFormat66.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        fractionFormat66.setDenominatorFormat(numberFormat76);
        java.lang.Object obj79 = numberFormat76.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        fractionFormat80.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.String str89 = properFractionFormat87.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat90 = properFractionFormat87.getWholeFormat();
        fractionFormat80.setDenominatorFormat(numberFormat90);
        java.text.NumberFormat numberFormat92 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64, numberFormat76, numberFormat92);
        properFractionFormat54.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat95 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat48, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat96 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1L + "'", obj79, 1L);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 0 / 1" + "'", str89, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = properFractionFormat50.parseObject("10 / 1", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat22 = properFractionFormat17.getDenominatorFormat();
        java.lang.Object obj24 = properFractionFormat17.parseObject("1 / 1");
        java.text.NumberFormat numberFormat25 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction27 = properFractionFormat17.parse("1");
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = properFractionFormat2.format(fraction27, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1 / 1" + "'", str28, "1 / 1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1 / 1" + "'", str29, "1 / 1");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat12.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat31.getNumeratorFormat();
        properFractionFormat28.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat53.getNumeratorFormat();
        properFractionFormat50.setDenominatorFormat(numberFormat59);
        properFractionFormat28.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.String str67 = properFractionFormat64.format((java.lang.Object) (-1.0f));
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getNumeratorFormat();
        properFractionFormat28.setDenominatorFormat(numberFormat68);
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = properFractionFormat11.format((java.lang.Object) numberFormat68, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat51.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat66.getNumeratorFormat();
        java.lang.Object obj72 = numberFormat70.parseObject("1 / 1");
        properFractionFormat60.setWholeFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = properFractionFormat76.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat70, numberFormat81);
        properFractionFormat2.setNumeratorFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1L + "'", obj72, 1L);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat43.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat62.getWholeFormat();
        properFractionFormat59.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat42, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = properFractionFormat76.parse("10 / 1");
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3, numberFormat72, numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.lang.String str33 = numberFormat31.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        properFractionFormat36.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat51);
        properFractionFormat36.setWholeFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat54.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat73.getWholeFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat79);
        properFractionFormat36.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat31, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        properFractionFormat84.setWholeFormat(numberFormat86);
        fractionFormat0.setDenominatorFormat(numberFormat86);
        java.text.ParsePosition parsePosition94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = fractionFormat0.parseObject("", parsePosition94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        properFractionFormat40.setWholeFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = properFractionFormat50.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat68.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj73 = properFractionFormat68.clone();
        java.lang.Object obj74 = properFractionFormat68.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat76.getWholeFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.lang.String str84 = properFractionFormat82.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = properFractionFormat82.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat87 = properFractionFormat82.getWholeFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        properFractionFormat40.setNumeratorFormat(numberFormat88);
        java.lang.Object obj91 = properFractionFormat40.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 0 / 1" + "'", str84, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat55.parse("10 / 1");
        java.lang.Object obj61 = properFractionFormat55.parseObject("1");
        java.text.ParsePosition parsePosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction64 = properFractionFormat55.parse("10 / 1", parsePosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = numberFormat6.clone();
        java.lang.Object obj8 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat16.parse("10 0 / 1");
        java.text.NumberFormat numberFormat30 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj31 = numberFormat30.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj5 = properFractionFormat4.clone();
        java.text.NumberFormat numberFormat6 = properFractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.lang.Object obj15 = numberFormat14.clone();
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12, numberFormat14, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        fractionFormat18.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        fractionFormat18.setDenominatorFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction32 = fractionFormat18.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat34.getNumeratorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        properFractionFormat17.setDenominatorFormat(numberFormat36);
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = properFractionFormat4.format((java.lang.Object) properFractionFormat17, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat46.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        properFractionFormat62.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat45.setNumeratorFormat(numberFormat70);
        properFractionFormat25.setNumeratorFormat(numberFormat70);
        java.text.NumberFormat numberFormat73 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj74 = properFractionFormat25.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat78.getNumeratorFormat();
        java.lang.Object obj84 = numberFormat82.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.text.NumberFormat numberFormat86 = properFractionFormat85.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat85.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat85.getWholeFormat();
        properFractionFormat25.setWholeFormat(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat13.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = properFractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction35 = properFractionFormat33.parse("-1 0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator36 = numberFormat12.formatToCharacterIterator((java.lang.Object) properFractionFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction35);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat15.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3, numberFormat12, numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        fractionFormat50.setDenominatorFormat(numberFormat52);
        properFractionFormat49.setWholeFormat(numberFormat52);
        java.text.NumberFormat numberFormat56 = properFractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getDenominatorFormat();
        properFractionFormat59.setNumeratorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = properFractionFormat59.getDenominatorFormat();
        properFractionFormat49.setNumeratorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = properFractionFormat77.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj82 = properFractionFormat77.clone();
        java.lang.Object obj83 = properFractionFormat77.clone();
        java.text.NumberFormat numberFormat84 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat85.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat85.getWholeFormat();
        properFractionFormat49.setDenominatorFormat(numberFormat87);
        properFractionFormat3.setWholeFormat(numberFormat87);
        java.text.ParsePosition parsePosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = properFractionFormat3.parseObject("10 / 1", parsePosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat24.getWholeFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat0.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat0.parse("-1 / 1");
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 / 1" + "'", str37, "-1 / 1");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat42.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj61 = properFractionFormat56.clone();
        java.lang.Object obj62 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat63 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat32.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat80 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat77.getDenominatorFormat();
        properFractionFormat69.setNumeratorFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = properFractionFormat69.getWholeFormat();
        properFractionFormat32.setWholeFormat(numberFormat83);
        java.text.ParsePosition parsePosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = properFractionFormat32.parseObject("10 0 / 1", parsePosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj8 = properFractionFormat6.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        fractionFormat9.setDenominatorFormat(numberFormat16);
        properFractionFormat6.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getDenominatorFormat();
        properFractionFormat33.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.Object obj54 = numberFormat49.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat49, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.Fraction fraction71 = properFractionFormat69.parse("10 0 / 1");
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat83 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.String str89 = properFractionFormat87.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat90 = properFractionFormat87.getWholeFormat();
        java.text.NumberFormat numberFormat91 = properFractionFormat87.getDenominatorFormat();
        java.text.NumberFormat numberFormat92 = properFractionFormat87.getWholeFormat();
        java.text.NumberFormat numberFormat93 = properFractionFormat87.getWholeFormat();
        properFractionFormat76.setNumeratorFormat(numberFormat93);
        java.text.NumberFormat numberFormat95 = properFractionFormat76.getDenominatorFormat();
        properFractionFormat73.setWholeFormat(numberFormat95);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = numberFormat16.format((java.lang.Object) properFractionFormat73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1L + "'", obj54, 1L);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "-1 0 / 1" + "'", str89, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("10 / 1");
        java.lang.Object obj51 = numberFormat48.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = numberFormat1.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat4.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat4.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 10L + "'", obj3, 10L);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = properFractionFormat11.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = properFractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat18.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction30 = properFractionFormat28.parse("10 / 1");
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getDenominatorFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.Object obj52 = numberFormat47.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat43, numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 0.0f);
        java.text.NumberFormat numberFormat73 = properFractionFormat65.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = numberFormat60.format((java.lang.Object) properFractionFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getWholeFormat();
        properFractionFormat33.setWholeFormat(numberFormat48);
        java.lang.Class<?> wildcardClass50 = numberFormat48.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("10");
        java.lang.Object obj10 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat21.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat37.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat66.getWholeFormat();
        properFractionFormat63.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat46, numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction78 = properFractionFormat75.parse("1 0 / 1");
        java.lang.String str79 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction78);
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = properFractionFormat2.format(fraction78, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1 / 1" + "'", str79, "1 / 1");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("-1", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat74 = properFractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat80 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat77.parse("-1 / 1");
        java.lang.String str84 = numberFormat74.format((java.lang.Object) fraction83);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1" + "'", str84, "-1");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        properFractionFormat35.setWholeFormat(numberFormat37);
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.Object obj41 = numberFormat37.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getDenominatorFormat();
        properFractionFormat9.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.String str8 = properFractionFormat6.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat9 = properFractionFormat6.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat10.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat13.getNumeratorFormat();
        java.lang.String str27 = numberFormat25.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        properFractionFormat30.setWholeFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        properFractionFormat43.setWholeFormat(numberFormat45);
        properFractionFormat30.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat67.getWholeFormat();
        properFractionFormat64.setDenominatorFormat(numberFormat73);
        properFractionFormat30.setWholeFormat(numberFormat73);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat25, numberFormat73);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.Object obj84 = numberFormat80.clone();
        properFractionFormat78.setWholeFormat(numberFormat80);
        properFractionFormat3.setDenominatorFormat(numberFormat80);
        java.text.NumberFormat numberFormat87 = properFractionFormat3.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1 0 / 1" + "'", str8, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        fractionFormat39.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat39.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat58.getWholeFormat();
        properFractionFormat55.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = properFractionFormat55.getWholeFormat();
        properFractionFormat31.setWholeFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat31.getWholeFormat();
        properFractionFormat28.setWholeFormat(numberFormat69);
        java.text.ParsePosition parsePosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = properFractionFormat28.parseObject("10 0 / 1", parsePosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction54 = properFractionFormat49.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = properFractionFormat28.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj33 = properFractionFormat28.clone();
        java.lang.Object obj34 = properFractionFormat28.clone();
        java.text.NumberFormat numberFormat35 = properFractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat36.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        fractionFormat40.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        fractionFormat40.setDenominatorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat40.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat57 = properFractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        fractionFormat59.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        fractionFormat59.setDenominatorFormat(numberFormat69);
        java.lang.Object obj72 = numberFormat69.parseObject("1 / 1");
        java.text.NumberFormat numberFormat73 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = properFractionFormat76.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj81 = properFractionFormat76.clone();
        java.lang.Object obj82 = properFractionFormat76.clone();
        java.text.NumberFormat numberFormat83 = properFractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69, numberFormat73, numberFormat83);
        java.text.NumberFormat numberFormat85 = properFractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        properFractionFormat56.setDenominatorFormat(numberFormat85);
        java.text.NumberFormat numberFormat88 = properFractionFormat56.getNumeratorFormat();
        properFractionFormat25.setNumeratorFormat(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1L + "'", obj72, 1L);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = properFractionFormat28.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj33 = properFractionFormat28.clone();
        java.lang.Object obj34 = properFractionFormat28.clone();
        java.text.NumberFormat numberFormat35 = properFractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat36.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction18 = properFractionFormat16.parse("-1");
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = properFractionFormat2.format(fraction18, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        properFractionFormat37.setWholeFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getDenominatorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = properFractionFormat33.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat2.parse("1 / 1");
        java.text.NumberFormat numberFormat94 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat2.getWholeFormat();
        java.text.ParsePosition parsePosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction98 = properFractionFormat2.parse("10 0 / 1", parsePosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction57 = properFractionFormat55.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.lang.Object obj77 = numberFormat76.clone();
        fractionFormat73.setDenominatorFormat(numberFormat76);
        properFractionFormat71.setWholeFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.lang.String str84 = properFractionFormat82.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat85 = properFractionFormat82.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.lang.Object obj88 = numberFormat87.clone();
        java.text.NumberFormat numberFormat89 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85, numberFormat87, numberFormat89);
        java.text.NumberFormat numberFormat91 = properFractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68, numberFormat76, numberFormat91);
        java.text.NumberFormat numberFormat93 = properFractionFormat92.getNumeratorFormat();
        properFractionFormat59.setWholeFormat(numberFormat93);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 0 / 1" + "'", str84, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        properFractionFormat23.setWholeFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        fractionFormat35.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        fractionFormat35.setDenominatorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("1 / 1");
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = properFractionFormat52.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj57 = properFractionFormat52.clone();
        java.lang.Object obj58 = properFractionFormat52.clone();
        java.text.NumberFormat numberFormat59 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat49, numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat34, numberFormat59);
        properFractionFormat15.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.Fraction fraction64 = properFractionFormat15.parse("1");
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = properFractionFormat2.format(fraction64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1L + "'", obj48, 1L);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction64);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat28.parseObject("1 / 1");
        properFractionFormat18.setWholeFormat(numberFormat28);
        properFractionFormat2.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat51.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction60 = properFractionFormat2.parse("-1 0 / 1");
        java.lang.Object obj61 = properFractionFormat2.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat0.getWholeFormat();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat2.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        properFractionFormat16.setWholeFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat27, numberFormat52);
        java.lang.Object obj55 = properFractionFormat54.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat56.getNumeratorFormat();
        java.lang.Object obj58 = properFractionFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        fractionFormat59.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        fractionFormat59.setDenominatorFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat59.getNumeratorFormat();
        properFractionFormat56.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat56.getNumeratorFormat();
        properFractionFormat54.setDenominatorFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat54.getWholeFormat();
        java.lang.Class<?> wildcardClass77 = properFractionFormat54.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) properFractionFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        fractionFormat15.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        fractionFormat15.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat15.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat31.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getDenominatorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.lang.Object obj57 = numberFormat54.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat54, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat83.getDenominatorFormat();
        properFractionFormat75.setNumeratorFormat(numberFormat87);
        properFractionFormat71.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat90 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat33, numberFormat90);
        java.lang.Class<?> wildcardClass92 = properFractionFormat91.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1L + "'", obj57, 1L);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getNumeratorFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52, numberFormat68, numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat49.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat66 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        fractionFormat67.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat77 = properFractionFormat74.getWholeFormat();
        fractionFormat67.setDenominatorFormat(numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction81 = fractionFormat67.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.text.NumberFormat numberFormat84 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat83.getNumeratorFormat();
        java.lang.Object obj86 = numberFormat85.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        properFractionFormat49.setNumeratorFormat(numberFormat85);
        java.text.NumberFormat numberFormat89 = properFractionFormat49.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getDenominatorFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.Object obj52 = numberFormat47.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat43, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        fractionFormat62.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        fractionFormat62.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction76 = fractionFormat62.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.text.NumberFormat numberFormat79 = properFractionFormat78.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.text.NumberFormat numberFormat82 = properFractionFormat81.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = properFractionFormat61.format((java.lang.Object) properFractionFormat81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.lang.Object obj13 = properFractionFormat10.clone();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat10.parse("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction16);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("-1");
        java.lang.Class<?> wildcardClass27 = numberFormat24.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getDenominatorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.lang.Object obj60 = numberFormat57.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        fractionFormat61.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        fractionFormat61.setDenominatorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat57, numberFormat73);
        java.lang.Object obj75 = numberFormat57.clone();
        properFractionFormat36.setWholeFormat(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1L + "'", obj60, 1L);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat10.parse("1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat15.getDenominatorFormat();
        properFractionFormat10.setDenominatorFormat(numberFormat21);
        java.lang.Object obj24 = properFractionFormat10.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat25 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat10.getDenominatorFormat();
        java.lang.Class<?> wildcardClass27 = properFractionFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getNumeratorFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("1 / 1");
        properFractionFormat35.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10L + "'", obj32, 10L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1L + "'", obj47, 1L);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat52.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat49.formatToCharacterIterator((java.lang.Object) properFractionFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat2.parse("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        properFractionFormat16.setWholeFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = properFractionFormat16.parse("10");
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = properFractionFormat2.format(fraction24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        properFractionFormat2.setWholeFormat(numberFormat38);
        java.lang.Object obj56 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.Fraction fraction62 = properFractionFormat60.parse("10 0 / 1");
        java.lang.String str63 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str64 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str65 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str66 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction62);
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = properFractionFormat2.format(fraction62, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "10 / 1" + "'", str63, "10 / 1");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "10 / 1" + "'", str64, "10 / 1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "10 / 1" + "'", str65, "10 / 1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "10 / 1" + "'", str66, "10 / 1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "10 / 1" + "'", str67, "10 / 1");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = properFractionFormat13.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj18 = properFractionFormat13.clone();
        java.lang.Object obj19 = properFractionFormat13.clone();
        java.text.NumberFormat numberFormat20 = properFractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        java.lang.Object obj43 = numberFormat40.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28, numberFormat40, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat40, numberFormat76);
        properFractionFormat2.setWholeFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.lang.Object obj88 = properFractionFormat81.parseObject("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = properFractionFormat2.format((java.lang.Object) properFractionFormat81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1L + "'", obj43, 1L);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat16.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = properFractionFormat32.getWholeFormat();
        fractionFormat14.setNumeratorFormat(numberFormat33);
        properFractionFormat13.setWholeFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getDenominatorFormat();
        java.lang.Object obj45 = properFractionFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat46 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj48 = properFractionFormat38.parseObject("1");
        java.text.NumberFormat numberFormat49 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat13.setNumeratorFormat(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        properFractionFormat11.setWholeFormat(numberFormat13);
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = properFractionFormat2.format((java.lang.Object) numberFormat13, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        properFractionFormat59.setWholeFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        fractionFormat71.setDenominatorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        fractionFormat71.setDenominatorFormat(numberFormat81);
        java.lang.Object obj84 = numberFormat81.parseObject("1 / 1");
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat87);
        java.lang.String str90 = properFractionFormat88.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = properFractionFormat88.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj93 = properFractionFormat88.clone();
        java.lang.Object obj94 = properFractionFormat88.clone();
        java.text.NumberFormat numberFormat95 = properFractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat96 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81, numberFormat85, numberFormat95);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat97 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat70, numberFormat95);
        properFractionFormat55.setWholeFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "-1 0 / 1" + "'", str90, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator10 = numberFormat5.formatToCharacterIterator(obj9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.text.NumberFormat numberFormat41 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = properFractionFormat40.parse("1 / 1");
        org.apache.commons.math.fraction.Fraction fraction45 = properFractionFormat40.parse("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction45);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat9.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        properFractionFormat25.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.lang.Object obj52 = numberFormat51.clone();
        fractionFormat48.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.lang.Object obj67 = numberFormat64.parseObject("1 / 1");
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = properFractionFormat71.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj76 = properFractionFormat71.clone();
        java.lang.Object obj77 = properFractionFormat71.clone();
        java.text.NumberFormat numberFormat78 = properFractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64, numberFormat68, numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat51, numberFormat64);
        java.lang.Object obj81 = numberFormat46.clone();
        properFractionFormat25.setWholeFormat(numberFormat46);
        java.lang.Object obj83 = numberFormat46.clone();
        java.lang.Object obj84 = numberFormat46.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator85 = numberFormat8.formatToCharacterIterator(obj84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1L + "'", obj67, 1L);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        properFractionFormat8.setWholeFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        properFractionFormat21.setWholeFormat(numberFormat23);
        properFractionFormat8.setWholeFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat26.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat45.getWholeFormat();
        properFractionFormat42.setDenominatorFormat(numberFormat51);
        properFractionFormat8.setWholeFormat(numberFormat51);
        java.text.NumberFormat numberFormat54 = properFractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.text.NumberFormat numberFormat60 = properFractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        java.lang.String str72 = properFractionFormat70.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat73 = properFractionFormat70.getWholeFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat70.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat70.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat70.getNumeratorFormat();
        properFractionFormat67.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54, numberFormat60, numberFormat76);
        org.apache.commons.math.fraction.Fraction fraction80 = properFractionFormat78.parse("1");
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = properFractionFormat5.format(fraction80, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1 0 / 1" + "'", str72, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fraction80);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        properFractionFormat74.setWholeFormat(numberFormat76);
        java.text.NumberFormat numberFormat82 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        fractionFormat83.setDenominatorFormat(numberFormat85);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator88 = numberFormat82.formatToCharacterIterator((java.lang.Object) numberFormat85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat56, numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.Object obj80 = numberFormat78.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = properFractionFormat13.getWholeFormat();
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = properFractionFormat13.format((java.lang.Object) 100.0f, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        fractionFormat39.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat39.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = numberFormat54.clone();
        fractionFormat51.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.lang.Object obj70 = numberFormat67.parseObject("1 / 1");
        java.text.NumberFormat numberFormat71 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.lang.Object obj80 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat81 = properFractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67, numberFormat71, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat67);
        properFractionFormat31.setWholeFormat(numberFormat67);
        java.lang.Object obj85 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat28.setDenominatorFormat(numberFormat86);
        java.text.ParsePosition parsePosition89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = properFractionFormat28.parseObject("", parsePosition89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1L + "'", obj70, 1L);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat12.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        properFractionFormat23.setWholeFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        properFractionFormat36.setWholeFormat(numberFormat38);
        properFractionFormat23.setWholeFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat41.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getWholeFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        properFractionFormat23.setWholeFormat(numberFormat66);
        java.text.NumberFormat numberFormat69 = properFractionFormat23.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat69.parseObject("10 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat20, numberFormat69);
        java.lang.Object obj74 = numberFormat8.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat49.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        org.apache.commons.math.fraction.Fraction fraction70 = properFractionFormat68.parse("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        properFractionFormat73.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        properFractionFormat86.setWholeFormat(numberFormat88);
        properFractionFormat73.setWholeFormat(numberFormat88);
        properFractionFormat68.setDenominatorFormat(numberFormat88);
        properFractionFormat49.setDenominatorFormat(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat50 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getDenominatorFormat();
        properFractionFormat10.setDenominatorFormat(numberFormat13);
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = properFractionFormat10.parseObject("hi!", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat0.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        properFractionFormat21.setWholeFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.lang.Object obj46 = numberFormat43.parseObject("1 / 1");
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = properFractionFormat50.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj55 = properFractionFormat50.clone();
        java.lang.Object obj56 = properFractionFormat50.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43, numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat32, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat68 = properFractionFormat62.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat27, numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat70.getNumeratorFormat();
        java.lang.Object obj72 = properFractionFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        fractionFormat73.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        fractionFormat73.setDenominatorFormat(numberFormat83);
        java.text.NumberFormat numberFormat85 = fractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat86 = fractionFormat73.getNumeratorFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat86);
        properFractionFormat69.setWholeFormat(numberFormat86);
        fractionFormat0.setNumeratorFormat(numberFormat86);
        java.lang.Class<?> wildcardClass90 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat40, numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = properFractionFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat44.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.Fraction fraction68 = properFractionFormat66.parse("-1 0 / 1");
        java.lang.String str69 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction68);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 / 1" + "'", str69, "-1 / 1");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        java.text.ParsePosition parsePosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction55 = properFractionFormat49.parse("1", parsePosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat37.clone();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getDenominatorFormat();
        properFractionFormat36.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.lang.Object obj54 = numberFormat51.parseObject("1 / 1");
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = properFractionFormat58.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj63 = properFractionFormat58.clone();
        java.lang.Object obj64 = properFractionFormat58.clone();
        java.text.NumberFormat numberFormat65 = properFractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51, numberFormat55, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat69.getWholeFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat86 = properFractionFormat80.getWholeFormat();
        java.lang.Object obj88 = numberFormat86.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat75, numberFormat86);
        java.text.NumberFormat numberFormat90 = properFractionFormat89.getNumeratorFormat();
        java.lang.Object obj91 = properFractionFormat89.clone();
        java.text.NumberFormat numberFormat92 = properFractionFormat89.getWholeFormat();
        properFractionFormat36.setWholeFormat(numberFormat92);
        java.text.ParsePosition parsePosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = properFractionFormat36.parseObject("-1", parsePosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1L + "'", obj54, 1L);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (-1L) + "'", obj77, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (-1L) + "'", obj88, (-1L));
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        java.text.NumberFormat numberFormat56 = properFractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.Object obj59 = properFractionFormat57.parseObject("1 / 1");
        org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat57.parse("1 0 / 1");
        java.lang.String str62 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction61);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1 / 1" + "'", str62, "1 / 1");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        java.lang.Object obj87 = properFractionFormat85.parseObject("10 / 1");
        java.text.NumberFormat numberFormat88 = properFractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = properFractionFormat85.parse("10 / 1");
        java.lang.Class<?> wildcardClass91 = fraction90.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.Class<?> wildcardClass67 = numberFormat55.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        properFractionFormat16.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj49 = null;
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = properFractionFormat16.format(obj49, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.Object obj10 = numberFormat6.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getDenominatorFormat();
        java.lang.Object obj14 = properFractionFormat11.parseObject("1");
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat11.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat26.getNumeratorFormat();
        properFractionFormat23.setDenominatorFormat(numberFormat32);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator34 = properFractionFormat11.formatToCharacterIterator((java.lang.Object) numberFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction88 = properFractionFormat25.parse("-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(fraction88);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj1 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(fraction5);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat56.getNumeratorFormat();
        java.lang.Object obj58 = properFractionFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        fractionFormat59.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        fractionFormat59.setDenominatorFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat59.getNumeratorFormat();
        properFractionFormat56.setDenominatorFormat(numberFormat72);
        properFractionFormat55.setWholeFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.lang.Object obj78 = numberFormat76.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.text.NumberFormat numberFormat80 = properFractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction82 = properFractionFormat79.parse("-1 0 / 1");
        java.lang.String str83 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction82);
        java.lang.String str84 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction82);
        java.lang.StringBuffer stringBuffer85 = null;
        java.text.FieldPosition fieldPosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer87 = properFractionFormat55.format(fraction82, stringBuffer85, fieldPosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10L + "'", obj78, 10L);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 / 1" + "'", str83, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 / 1" + "'", str84, "-1 / 1");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj2 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.lang.Object obj19 = numberFormat18.clone();
        fractionFormat15.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj43 = properFractionFormat38.clone();
        java.lang.Object obj44 = properFractionFormat38.clone();
        java.text.NumberFormat numberFormat45 = properFractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31, numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat31);
        fractionFormat0.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat50 = properFractionFormat49.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat49.getWholeFormat();
        java.lang.Object obj52 = numberFormat51.clone();
        java.lang.Object obj54 = numberFormat51.parseObject("-1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1L) + "'", obj54, (-1L));
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat28.parseObject("1 / 1");
        properFractionFormat18.setWholeFormat(numberFormat28);
        properFractionFormat2.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.Object obj35 = properFractionFormat33.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        properFractionFormat2.setWholeFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        java.lang.Object obj39 = numberFormat36.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        fractionFormat40.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        fractionFormat40.setDenominatorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat36, numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = properFractionFormat58.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat63 = properFractionFormat58.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat58.getDenominatorFormat();
        properFractionFormat55.setNumeratorFormat(numberFormat64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = numberFormat15.format((java.lang.Object) properFractionFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1L + "'", obj39, 1L);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat28.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getWholeFormat();
        fractionFormat26.setNumeratorFormat(numberFormat45);
        properFractionFormat25.setWholeFormat(numberFormat45);
        properFractionFormat9.setNumeratorFormat(numberFormat45);
        java.lang.Class<?> wildcardClass49 = properFractionFormat9.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        fractionFormat15.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        fractionFormat15.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat15.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat31.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getDenominatorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.lang.Object obj57 = numberFormat54.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat54, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat83.getDenominatorFormat();
        properFractionFormat75.setNumeratorFormat(numberFormat87);
        properFractionFormat71.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat90 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat33, numberFormat90);
        java.text.NumberFormat numberFormat92 = properFractionFormat91.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1L + "'", obj57, 1L);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        properFractionFormat17.setWholeFormat(numberFormat19);
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.Object obj23 = numberFormat19.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat25 = properFractionFormat24.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat24.parseObject("1");
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat24.parse("10 / 1");
        java.lang.Class<?> wildcardClass30 = fraction29.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator31 = numberFormat10.formatToCharacterIterator((java.lang.Object) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getWholeFormat();
        properFractionFormat13.setWholeFormat(numberFormat22);
        org.apache.commons.math.fraction.Fraction fraction25 = properFractionFormat13.parse("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction25);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat16.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = properFractionFormat32.getWholeFormat();
        fractionFormat14.setNumeratorFormat(numberFormat33);
        properFractionFormat13.setWholeFormat(numberFormat33);
        java.lang.Class<?> wildcardClass36 = numberFormat33.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj27 = numberFormat25.parseObject("10 0 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat28, numberFormat46);
        java.text.NumberFormat numberFormat49 = properFractionFormat48.getDenominatorFormat();
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat48.parse("-1", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = properFractionFormat20.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        properFractionFormat20.setWholeFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat36, numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat25, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat48.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        properFractionFormat56.setWholeFormat(numberFormat58);
        fractionFormat52.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        properFractionFormat51.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = properFractionFormat65.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj70 = properFractionFormat65.clone();
        java.lang.Object obj71 = properFractionFormat65.clone();
        java.text.NumberFormat numberFormat72 = properFractionFormat65.getDenominatorFormat();
        properFractionFormat51.setWholeFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat51.getNumeratorFormat();
        properFractionFormat41.setNumeratorFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = properFractionFormat41.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 0.0f);
        java.text.NumberFormat numberFormat89 = properFractionFormat81.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer90 = null;
        java.text.FieldPosition fieldPosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer92 = properFractionFormat2.format((java.lang.Object) properFractionFormat81, stringBuffer90, fieldPosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getDenominatorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        fractionFormat38.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        fractionFormat38.setDenominatorFormat(numberFormat48);
        java.lang.Object obj51 = numberFormat48.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat48, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat66.clone();
        java.text.NumberFormat numberFormat68 = fractionFormat66.getDenominatorFormat();
        properFractionFormat65.setNumeratorFormat(numberFormat68);
        properFractionFormat28.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = properFractionFormat80.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getDenominatorFormat();
        properFractionFormat73.setNumeratorFormat(numberFormat85);
        java.lang.StringBuffer stringBuffer87 = null;
        java.text.FieldPosition fieldPosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer89 = properFractionFormat28.format((java.lang.Object) properFractionFormat73, stringBuffer87, fieldPosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1L + "'", obj51, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        properFractionFormat29.setWholeFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getDenominatorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat31, numberFormat40);
        java.lang.Object obj44 = numberFormat31.clone();
        fractionFormat19.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat46.getNumeratorFormat();
        java.lang.Object obj48 = properFractionFormat46.clone();
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        fractionFormat19.setNumeratorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.lang.Object obj15 = properFractionFormat4.clone();
        java.lang.Class<?> wildcardClass16 = properFractionFormat4.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        properFractionFormat23.setNumeratorFormat(numberFormat35);
        properFractionFormat14.setDenominatorFormat(numberFormat35);
        fractionFormat0.setDenominatorFormat(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat42.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj61 = properFractionFormat56.clone();
        java.lang.Object obj62 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat63 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat32.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        properFractionFormat70.setWholeFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat80 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat77.getNumeratorFormat();
        java.lang.Object obj83 = numberFormat81.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat74, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.lang.Object obj88 = numberFormat87.clone();
        java.lang.Object obj90 = numberFormat87.parseObject("1 / 1");
        java.lang.String str91 = numberFormat81.format(obj90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1L + "'", obj90, 1L);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "1" + "'", str91, "1");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.text.NumberFormat numberFormat87 = properFractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat88.clone();
        java.text.NumberFormat numberFormat90 = fractionFormat88.getDenominatorFormat();
        properFractionFormat86.setDenominatorFormat(numberFormat90);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj8 = properFractionFormat6.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        java.lang.Object obj50 = properFractionFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat51.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getWholeFormat();
        java.lang.Object obj69 = properFractionFormat67.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        properFractionFormat72.setWholeFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        properFractionFormat85.setWholeFormat(numberFormat87);
        properFractionFormat72.setWholeFormat(numberFormat87);
        java.lang.String str91 = numberFormat87.format((java.lang.Object) (short) 10);
        properFractionFormat67.setNumeratorFormat(numberFormat87);
        properFractionFormat49.setNumeratorFormat(numberFormat87);
        org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat49.parse("10 0 / 1");
        java.lang.StringBuffer stringBuffer96 = null;
        java.text.FieldPosition fieldPosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer98 = properFractionFormat6.format(fraction95, stringBuffer96, fieldPosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "10" + "'", str91, "10");
        org.junit.Assert.assertNotNull(fraction95);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat26.parseObject("10");
        fractionFormat10.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat51.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getDenominatorFormat();
        properFractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.Object obj65 = numberFormat60.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat56, numberFormat60);
        fractionFormat10.setNumeratorFormat(numberFormat60);
        java.text.NumberFormat numberFormat68 = fractionFormat10.getNumeratorFormat();
        properFractionFormat2.setWholeFormat(numberFormat68);
        java.lang.Object obj71 = numberFormat68.parseObject("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10L + "'", obj28, 10L);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1L + "'", obj65, 1L);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = properFractionFormat9.parseObject("1 0 / 1", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = properFractionFormat9.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = properFractionFormat37.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat46.getWholeFormat();
        properFractionFormat37.setNumeratorFormat(numberFormat52);
        properFractionFormat9.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = properFractionFormat55.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = properFractionFormat26.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj31 = properFractionFormat26.clone();
        java.lang.Object obj32 = properFractionFormat26.clone();
        java.text.NumberFormat numberFormat33 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat23, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getWholeFormat();
        java.lang.Object obj45 = numberFormat43.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat43, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat57.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat62.getWholeFormat();
        properFractionFormat57.setNumeratorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = properFractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat57.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = numberFormat70.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14, numberFormat26, numberFormat42);
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat45 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat10.parse("-1 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.Fraction fraction17 = properFractionFormat2.parse("1 0 / 1");
        java.lang.Class<?> wildcardClass18 = fraction17.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        properFractionFormat13.setWholeFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat13.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        properFractionFormat21.setWholeFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        java.lang.Object obj46 = numberFormat43.parseObject("1 / 1");
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = properFractionFormat50.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj55 = properFractionFormat50.clone();
        java.lang.Object obj56 = properFractionFormat50.clone();
        java.text.NumberFormat numberFormat57 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43, numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat32, numberFormat57);
        properFractionFormat13.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.Fraction fraction62 = properFractionFormat13.parse("1");
        java.lang.StringBuffer stringBuffer63 = null;
        java.text.FieldPosition fieldPosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer65 = properFractionFormat2.format(fraction62, stringBuffer63, fieldPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1L + "'", obj46, 1L);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction62);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat31.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        java.lang.Object obj52 = numberFormat50.parseObject("1 / 1");
        properFractionFormat40.setWholeFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat50, numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat22.setWholeFormat(numberFormat63);
        properFractionFormat16.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.Object obj67 = properFractionFormat66.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = properFractionFormat25.parseObject("-1 0 / 1", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.Object obj12 = numberFormat10.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj5 = properFractionFormat4.clone();
        java.text.NumberFormat numberFormat6 = properFractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj14 = properFractionFormat9.clone();
        java.lang.Object obj15 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = properFractionFormat9.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat18 = properFractionFormat9.getDenominatorFormat();
        java.lang.String str20 = properFractionFormat9.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat21 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction23 = properFractionFormat9.parse("10 0 / 1");
        java.lang.Object obj25 = properFractionFormat9.parseObject("1 0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = numberFormat6.format((java.lang.Object) properFractionFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10 0 / 1" + "'", str20, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.lang.Object obj30 = numberFormat27.parseObject("1 / 1");
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat34.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj39 = properFractionFormat34.clone();
        java.lang.Object obj40 = properFractionFormat34.clone();
        java.text.NumberFormat numberFormat41 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat45.getWholeFormat();
        java.lang.Object obj53 = numberFormat51.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat56.getWholeFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat51, numberFormat62);
        properFractionFormat2.setNumeratorFormat(numberFormat51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = properFractionFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj9 = numberFormat5.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.lang.Object obj15 = properFractionFormat4.clone();
        java.text.NumberFormat numberFormat16 = properFractionFormat4.getNumeratorFormat();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat4.parse("10 0 / 1", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.String str8 = properFractionFormat6.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat9 = properFractionFormat6.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        properFractionFormat6.setWholeFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        properFractionFormat19.setWholeFormat(numberFormat21);
        properFractionFormat6.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        fractionFormat24.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        fractionFormat24.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat24.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat43.getWholeFormat();
        properFractionFormat40.setDenominatorFormat(numberFormat49);
        properFractionFormat6.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat52.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = properFractionFormat68.getWholeFormat();
        java.lang.Object obj70 = properFractionFormat68.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        properFractionFormat73.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        properFractionFormat86.setWholeFormat(numberFormat88);
        properFractionFormat73.setWholeFormat(numberFormat88);
        java.lang.String str92 = numberFormat88.format((java.lang.Object) (short) 10);
        properFractionFormat68.setNumeratorFormat(numberFormat88);
        properFractionFormat6.setNumeratorFormat(numberFormat88);
        fractionFormat3.setDenominatorFormat(numberFormat88);
        properFractionFormat0.setDenominatorFormat(numberFormat88);
        java.text.NumberFormat numberFormat97 = properFractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1 0 / 1" + "'", str8, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "10" + "'", str92, "10");
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat2.parse("-1");
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 / 1" + "'", str23, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 / 1" + "'", str24, "-1 / 1");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat50 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getDenominatorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat59);
        properFractionFormat2.setWholeFormat(numberFormat59);
        java.lang.String str63 = numberFormat59.format((java.lang.Object) 100);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "100" + "'", str63, "100");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.lang.Class<?> wildcardClass34 = numberFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat2.parse("10");
        java.lang.Class<?> wildcardClass9 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        java.lang.Object obj86 = numberFormat81.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        java.text.NumberFormat numberFormat31 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.Object obj40 = properFractionFormat38.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getDenominatorFormat();
        fractionFormat41.setDenominatorFormat(numberFormat48);
        properFractionFormat38.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = properFractionFormat72.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat77 = properFractionFormat72.getDenominatorFormat();
        properFractionFormat65.setNumeratorFormat(numberFormat77);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        java.lang.Object obj86 = numberFormat81.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61, numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat89 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat89);
        java.lang.String str92 = properFractionFormat90.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat93 = properFractionFormat90.getWholeFormat();
        java.text.NumberFormat numberFormat94 = properFractionFormat90.getNumeratorFormat();
        java.text.NumberFormat numberFormat95 = properFractionFormat90.getWholeFormat();
        java.text.NumberFormat numberFormat96 = properFractionFormat90.getNumeratorFormat();
        java.text.NumberFormat numberFormat97 = properFractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat98 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48, numberFormat81, numberFormat97);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator99 = numberFormat31.formatToCharacterIterator((java.lang.Object) numberFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1L + "'", obj86, 1L);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "-1 0 / 1" + "'", str92, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertNotNull(numberFormat95);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.lang.Object obj25 = numberFormat24.clone();
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.Object obj37 = properFractionFormat35.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat41.getDenominatorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat45);
        properFractionFormat35.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.lang.Object obj52 = numberFormat51.clone();
        fractionFormat48.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.lang.Object obj62 = numberFormat61.clone();
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59, numberFormat61, numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getNumeratorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat48.getDenominatorFormat();
        properFractionFormat35.setDenominatorFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.lang.Object obj86 = numberFormat84.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        java.text.NumberFormat numberFormat88 = properFractionFormat87.getDenominatorFormat();
        properFractionFormat35.setDenominatorFormat(numberFormat88);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21, numberFormat24, numberFormat88);
        properFractionFormat2.setWholeFormat(numberFormat21);
        java.lang.Object obj92 = numberFormat21.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1L + "'", obj86, 1L);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        properFractionFormat3.setWholeFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        properFractionFormat16.setWholeFormat(numberFormat18);
        properFractionFormat3.setWholeFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat21.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        properFractionFormat37.setDenominatorFormat(numberFormat46);
        properFractionFormat3.setWholeFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        fractionFormat49.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        fractionFormat49.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat49.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = properFractionFormat65.getWholeFormat();
        java.lang.Object obj67 = properFractionFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        java.lang.String str72 = properFractionFormat70.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat73 = properFractionFormat70.getWholeFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        properFractionFormat70.setWholeFormat(numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        properFractionFormat83.setWholeFormat(numberFormat85);
        properFractionFormat70.setWholeFormat(numberFormat85);
        java.lang.String str89 = numberFormat85.format((java.lang.Object) (short) 10);
        properFractionFormat65.setNumeratorFormat(numberFormat85);
        properFractionFormat3.setNumeratorFormat(numberFormat85);
        fractionFormat0.setDenominatorFormat(numberFormat85);
        java.text.NumberFormat numberFormat93 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setDenominatorFormat(numberFormat93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1 0 / 1" + "'", str72, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "10" + "'", str89, "10");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        properFractionFormat16.setDenominatorFormat(numberFormat45);
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = properFractionFormat16.parseObject("10", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat21.getDenominatorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) numberFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("-1 / 1");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 / 1" + "'", str13, "-1 / 1");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.text.NumberFormat numberFormat67 = properFractionFormat66.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat23.clone();
        fractionFormat20.setDenominatorFormat(numberFormat23);
        properFractionFormat18.setWholeFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat34, numberFormat36);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat23, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat46.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        fractionFormat50.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat49.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat49.getNumeratorFormat();
        properFractionFormat39.setNumeratorFormat(numberFormat72);
        properFractionFormat4.setNumeratorFormat(numberFormat72);
        java.text.NumberFormat numberFormat75 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = properFractionFormat78.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj83 = properFractionFormat78.clone();
        org.apache.commons.math.fraction.Fraction fraction85 = properFractionFormat78.parse("10 / 1");
        java.lang.String str86 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction85);
        java.lang.StringBuffer stringBuffer87 = null;
        java.text.FieldPosition fieldPosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer89 = properFractionFormat4.format(fraction85, stringBuffer87, fieldPosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1L + "'", obj48, 1L);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "10 / 1" + "'", str86, "10 / 1");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.Object obj11 = properFractionFormat9.parseObject("-1 0 / 1");
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        fractionFormat13.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        fractionFormat13.setDenominatorFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat13.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = properFractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        fractionFormat32.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        fractionFormat32.setDenominatorFormat(numberFormat42);
        java.lang.Object obj45 = numberFormat42.parseObject("1 / 1");
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = properFractionFormat49.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj54 = properFractionFormat49.clone();
        java.lang.Object obj55 = properFractionFormat49.clone();
        java.text.NumberFormat numberFormat56 = properFractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat46, numberFormat56);
        java.text.NumberFormat numberFormat58 = properFractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        properFractionFormat29.setDenominatorFormat(numberFormat58);
        java.lang.StringBuffer stringBuffer61 = null;
        java.text.FieldPosition fieldPosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer63 = properFractionFormat9.format((java.lang.Object) properFractionFormat29, stringBuffer61, fieldPosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1L + "'", obj45, 1L);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("1 / 1");
        properFractionFormat32.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        properFractionFormat48.setWholeFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        fractionFormat60.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        fractionFormat60.setDenominatorFormat(numberFormat70);
        java.lang.Object obj73 = numberFormat70.parseObject("1 / 1");
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = properFractionFormat77.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj82 = properFractionFormat77.clone();
        java.lang.Object obj83 = properFractionFormat77.clone();
        java.text.NumberFormat numberFormat84 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70, numberFormat74, numberFormat84);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54, numberFormat59, numberFormat84);
        properFractionFormat32.setWholeFormat(numberFormat59);
        java.text.NumberFormat numberFormat88 = properFractionFormat32.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat88);
        java.text.NumberFormat numberFormat90 = properFractionFormat16.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1L + "'", obj73, 1L);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.lang.Object obj25 = numberFormat22.parseObject("1 / 1");
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat26, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        java.lang.Object obj48 = numberFormat46.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat51.getWholeFormat();
        java.lang.Object obj59 = numberFormat57.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat46, numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.Fraction fraction63 = properFractionFormat61.parse("10");
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        properFractionFormat69.setWholeFormat(numberFormat71);
        fractionFormat65.setNumeratorFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.Object obj75 = numberFormat71.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        properFractionFormat61.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = numberFormat9.format((java.lang.Object) properFractionFormat78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat2.parseObject("-1 0 / 1");
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = properFractionFormat2.parse("10 0 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat42.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj61 = properFractionFormat56.clone();
        java.lang.Object obj62 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat63 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat32.setNumeratorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = properFractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat32.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14, numberFormat26, numberFormat42);
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat61.getDenominatorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat56, numberFormat65);
        java.lang.Object obj69 = numberFormat56.clone();
        java.lang.Object obj71 = numberFormat56.parseObject("-1 0 / 1");
        properFractionFormat2.setNumeratorFormat(numberFormat56);
        java.lang.Class<?> wildcardClass73 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        properFractionFormat17.setWholeFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat19, numberFormat28);
        java.lang.Object obj32 = numberFormat19.clone();
        java.lang.Object obj34 = numberFormat19.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        fractionFormat35.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        fractionFormat35.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat35.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = properFractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = properFractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat56.clone();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat58, numberFormat60);
        // The following exception was thrown during execution in test generation
        try {
            properFractionFormat2.setDenominatorFormat(numberFormat60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat92 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat93 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction95 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat96 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        fractionFormat35.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        fractionFormat35.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat31, numberFormat47);
        java.lang.Object obj49 = numberFormat47.clone();
        properFractionFormat2.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat51.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat67.getDenominatorFormat();
        properFractionFormat2.setWholeFormat(numberFormat69);
        java.lang.Class<?> wildcardClass71 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat22.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.lang.Object obj41 = numberFormat38.parseObject("1 / 1");
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = properFractionFormat45.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj50 = properFractionFormat45.clone();
        java.lang.Object obj51 = properFractionFormat45.clone();
        java.text.NumberFormat numberFormat52 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat25, numberFormat38);
        properFractionFormat2.setWholeFormat(numberFormat38);
        java.text.NumberFormat numberFormat56 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.lang.Object obj43 = numberFormat42.clone();
        fractionFormat39.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat42, numberFormat55);
        java.lang.Object obj72 = numberFormat37.clone();
        properFractionFormat16.setWholeFormat(numberFormat37);
        java.text.ParsePosition parsePosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = properFractionFormat16.parseObject("-1 / 1", parsePosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj4 = numberFormat3.clone();
        fractionFormat0.setDenominatorFormat(numberFormat3);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.lang.Object obj14 = numberFormat13.clone();
        java.text.NumberFormat numberFormat15 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat13, numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat0.parse("10 0 / 1");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"10 0 / 1\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj26 = properFractionFormat21.clone();
        java.lang.Object obj27 = properFractionFormat21.clone();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat21.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat30 = properFractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        properFractionFormat34.setWholeFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.lang.Object obj59 = numberFormat56.parseObject("1 / 1");
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat60, numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat45, numberFormat70);
        java.lang.Object obj73 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat74 = properFractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat31, numberFormat75);
        org.apache.commons.math.fraction.Fraction fraction78 = properFractionFormat76.parse("1 / 1");
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1L + "'", obj59, 1L);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction78);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat12.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.lang.Object obj22 = fractionFormat20.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.lang.Object obj39 = numberFormat38.clone();
        fractionFormat35.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.lang.Object obj54 = numberFormat51.parseObject("1 / 1");
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = properFractionFormat58.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj63 = properFractionFormat58.clone();
        java.lang.Object obj64 = properFractionFormat58.clone();
        java.text.NumberFormat numberFormat65 = properFractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51, numberFormat55, numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat38, numberFormat51);
        fractionFormat20.setDenominatorFormat(numberFormat51);
        properFractionFormat12.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.Fraction fraction71 = properFractionFormat12.parse("-1 0 / 1");
        java.lang.Object obj73 = properFractionFormat12.parseObject("1 0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator74 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) "1 0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1L + "'", obj54, 1L);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getDenominatorFormat();
        properFractionFormat14.setNumeratorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat14.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.lang.Object obj42 = numberFormat39.parseObject("1 / 1");
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = properFractionFormat46.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj51 = properFractionFormat46.clone();
        java.lang.Object obj52 = properFractionFormat46.clone();
        java.text.NumberFormat numberFormat53 = properFractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat43, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat57.getWholeFormat();
        java.lang.Object obj65 = numberFormat63.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat68.getWholeFormat();
        java.lang.Object obj76 = numberFormat74.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53, numberFormat63, numberFormat74);
        properFractionFormat14.setNumeratorFormat(numberFormat63);
        properFractionFormat9.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properFractionFormat9.setWholeFormat(numberFormat80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: whole format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1L + "'", obj42, 1L);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (-1L) + "'", obj76, (-1L));
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat34 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat43 = properFractionFormat38.getDenominatorFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.Object obj52 = numberFormat47.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat43, numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = numberFormat60.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.lang.Object obj11 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat28.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getWholeFormat();
        fractionFormat26.setNumeratorFormat(numberFormat45);
        properFractionFormat25.setWholeFormat(numberFormat45);
        properFractionFormat9.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat9.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getDenominatorFormat();
        java.lang.Object obj55 = properFractionFormat3.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat4 = properFractionFormat3.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat3.parse("10 / 1");
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "10 / 1" + "'", str7, "10 / 1");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat21.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.text.NumberFormat numberFormat43 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat37.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat45 = properFractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat47.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        java.lang.String str68 = properFractionFormat66.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat66.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat66.getWholeFormat();
        properFractionFormat63.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat46, numberFormat74);
        properFractionFormat2.setNumeratorFormat(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1 0 / 1" + "'", str68, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.lang.Object obj25 = numberFormat22.parseObject("1 / 1");
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        java.text.NumberFormat numberFormat36 = properFractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22, numberFormat26, numberFormat36);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getDenominatorFormat();
        java.lang.Object obj39 = properFractionFormat37.clone();
        java.lang.Object obj40 = properFractionFormat37.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat41.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.text.NumberFormat numberFormat80 = properFractionFormat79.getNumeratorFormat();
        properFractionFormat74.setDenominatorFormat(numberFormat80);
        java.text.NumberFormat numberFormat82 = properFractionFormat74.getDenominatorFormat();
        properFractionFormat57.setNumeratorFormat(numberFormat82);
        properFractionFormat37.setNumeratorFormat(numberFormat82);
        java.text.NumberFormat numberFormat85 = properFractionFormat37.getDenominatorFormat();
        java.lang.Object obj86 = properFractionFormat37.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator87 = numberFormat11.formatToCharacterIterator(obj86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1L + "'", obj25, 1L);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = properFractionFormat6.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj34 = properFractionFormat29.clone();
        java.lang.Object obj35 = properFractionFormat29.clone();
        org.apache.commons.math.fraction.Fraction fraction37 = properFractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat38 = properFractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat29.getWholeFormat();
        properFractionFormat25.setWholeFormat(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.Class<?> wildcardClass6 = properFractionFormat5.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat9.parse("10");
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        java.lang.String str25 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "10 / 1" + "'", str23, "10 / 1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "10 / 1" + "'", str24, "10 / 1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10 / 1" + "'", str25, "10 / 1");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat9.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj26 = properFractionFormat21.clone();
        java.lang.Object obj27 = properFractionFormat21.clone();
        java.text.NumberFormat numberFormat28 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction31 = properFractionFormat29.parse("-1");
        java.lang.String str32 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction31);
        java.lang.String str33 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction31);
        java.lang.StringBuffer stringBuffer34 = null;
        java.text.FieldPosition fieldPosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer36 = properFractionFormat18.format(fraction31, stringBuffer34, fieldPosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 / 1" + "'", str32, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 / 1" + "'", str33, "-1 / 1");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat10.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getNumeratorFormat();
        java.lang.Object obj21 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat22.getNumeratorFormat();
        java.lang.String str36 = numberFormat34.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        properFractionFormat39.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        properFractionFormat52.setWholeFormat(numberFormat54);
        properFractionFormat39.setWholeFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        fractionFormat57.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        fractionFormat57.setDenominatorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat57.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.lang.String str78 = properFractionFormat76.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat79 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat76.getNumeratorFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat76.getWholeFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat76.getWholeFormat();
        properFractionFormat73.setDenominatorFormat(numberFormat82);
        properFractionFormat39.setWholeFormat(numberFormat82);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat34, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat89 = fractionFormat88.getDenominatorFormat();
        java.lang.Object obj90 = numberFormat89.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat87, numberFormat89);
        java.lang.Object obj92 = numberFormat89.clone();
        properFractionFormat10.setDenominatorFormat(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1L + "'", obj21, 1L);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1" + "'", str36, "1");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1 0 / 1" + "'", str78, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat9 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat8.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        properFractionFormat22.setWholeFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getDenominatorFormat();
        fractionFormat26.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat24, numberFormat33);
        java.lang.Object obj37 = numberFormat24.clone();
        fractionFormat12.setDenominatorFormat(numberFormat24);
        fractionFormat0.setNumeratorFormat(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat25.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        properFractionFormat41.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat61.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getDenominatorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat63, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        java.lang.Object obj84 = numberFormat83.clone();
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81, numberFormat83, numberFormat85);
        properFractionFormat75.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat81);
        java.text.NumberFormat numberFormat89 = properFractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        properFractionFormat33.setWholeFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        fractionFormat45.setDenominatorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        fractionFormat45.setDenominatorFormat(numberFormat55);
        java.lang.Object obj58 = numberFormat55.parseObject("1 / 1");
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = properFractionFormat62.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj67 = properFractionFormat62.clone();
        java.lang.Object obj68 = properFractionFormat62.clone();
        java.text.NumberFormat numberFormat69 = properFractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55, numberFormat59, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat44, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj79 = properFractionFormat74.clone();
        java.text.NumberFormat numberFormat80 = properFractionFormat74.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat39, numberFormat80);
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat81.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat84 = properFractionFormat81.getNumeratorFormat();
        properFractionFormat25.setWholeFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat25.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat54 = properFractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat64.getNumeratorFormat();
        properFractionFormat61.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48, numberFormat54, numberFormat70);
        java.lang.Object obj74 = numberFormat48.parseObject("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1L + "'", obj74, 1L);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.Object obj12 = properFractionFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = properFractionFormat15.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getDenominatorFormat();
        java.lang.Object obj22 = properFractionFormat15.parseObject("1");
        java.lang.String str23 = properFractionFormat11.format(obj22);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat11.formatToCharacterIterator((java.lang.Object) "10");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1 0 / 1" + "'", str23, "1 0 / 1");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat15.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat23 = properFractionFormat15.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = numberFormat12.format((java.lang.Object) numberFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        java.text.NumberFormat numberFormat33 = properFractionFormat32.getNumeratorFormat();
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction36 = properFractionFormat32.parse("-1", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = properFractionFormat29.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat34 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat25.setWholeFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        fractionFormat53.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        fractionFormat53.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat53.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getNumeratorFormat();
        properFractionFormat69.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = properFractionFormat69.getDenominatorFormat();
        properFractionFormat52.setNumeratorFormat(numberFormat77);
        org.apache.commons.math.fraction.Fraction fraction80 = properFractionFormat52.parse("-1");
        java.lang.String str81 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction80);
        java.lang.StringBuffer stringBuffer82 = null;
        java.text.FieldPosition fieldPosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer84 = properFractionFormat25.format(fraction80, stringBuffer82, fieldPosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 / 1" + "'", str81, "-1 / 1");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        properFractionFormat2.setWholeFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat19.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat26);
        java.lang.Object obj29 = properFractionFormat2.parseObject("-1 0 / 1");
        java.lang.Object obj31 = properFractionFormat2.parseObject("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        properFractionFormat17.setWholeFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getDenominatorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat19, numberFormat28);
        java.lang.Object obj32 = numberFormat19.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        java.lang.Object obj62 = numberFormat60.parseObject("1 / 1");
        properFractionFormat50.setWholeFormat(numberFormat60);
        properFractionFormat39.setNumeratorFormat(numberFormat60);
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat39.parse("-1");
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = properFractionFormat36.format(fraction66, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1L + "'", obj62, 1L);
        org.junit.Assert.assertNotNull(fraction66);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.String str6 = properFractionFormat4.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat7 = properFractionFormat4.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        properFractionFormat4.setWholeFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj38 = properFractionFormat33.clone();
        java.lang.Object obj39 = properFractionFormat33.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat40);
        java.lang.Object obj43 = properFractionFormat42.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj46 = properFractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat47.getNumeratorFormat();
        properFractionFormat44.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat44.getNumeratorFormat();
        properFractionFormat42.setDenominatorFormat(numberFormat62);
        fractionFormat0.setNumeratorFormat(numberFormat62);
        java.lang.Object obj65 = numberFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        fractionFormat66.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        fractionFormat66.setDenominatorFormat(numberFormat76);
        java.text.NumberFormat numberFormat78 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat66.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat84);
        java.text.NumberFormat numberFormat88 = properFractionFormat87.getNumeratorFormat();
        properFractionFormat82.setDenominatorFormat(numberFormat88);
        java.text.NumberFormat numberFormat90 = properFractionFormat82.getDenominatorFormat();
        java.text.NumberFormat numberFormat91 = properFractionFormat82.getWholeFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = numberFormat62.format((java.lang.Object) properFractionFormat82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 0 / 1" + "'", str6, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getNumeratorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = numberFormat20.format(obj27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        java.lang.Object obj13 = properFractionFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj22 = numberFormat20.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        java.lang.String str37 = numberFormat35.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        properFractionFormat40.setWholeFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        properFractionFormat53.setWholeFormat(numberFormat55);
        properFractionFormat40.setWholeFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat80 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat77.getNumeratorFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat83 = properFractionFormat77.getWholeFormat();
        properFractionFormat74.setDenominatorFormat(numberFormat83);
        properFractionFormat40.setWholeFormat(numberFormat83);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20, numberFormat35, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat88 = fractionFormat87.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        java.lang.String str91 = properFractionFormat89.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat92 = properFractionFormat89.getWholeFormat();
        java.text.NumberFormat numberFormat93 = properFractionFormat89.getDenominatorFormat();
        properFractionFormat86.setDenominatorFormat(numberFormat93);
        properFractionFormat9.setNumeratorFormat(numberFormat93);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1" + "'", str37, "1");
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1 0 / 1" + "'", str91, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        fractionFormat15.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        fractionFormat15.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat15.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat31.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getDenominatorFormat();
        fractionFormat35.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.lang.Object obj57 = numberFormat54.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42, numberFormat54, numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat83.getDenominatorFormat();
        properFractionFormat75.setNumeratorFormat(numberFormat87);
        properFractionFormat71.setDenominatorFormat(numberFormat87);
        java.text.NumberFormat numberFormat90 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat33, numberFormat90);
        java.text.ParsePosition parsePosition93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = properFractionFormat91.parseObject("1 0 / 1", parsePosition93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1L + "'", obj57, 1L);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj2 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.lang.Object obj19 = numberFormat18.clone();
        fractionFormat15.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        fractionFormat21.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        fractionFormat21.setDenominatorFormat(numberFormat31);
        java.lang.Object obj34 = numberFormat31.parseObject("1 / 1");
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = properFractionFormat38.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj43 = properFractionFormat38.clone();
        java.lang.Object obj44 = properFractionFormat38.clone();
        java.text.NumberFormat numberFormat45 = properFractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31, numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat31);
        fractionFormat0.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1L + "'", obj34, 1L);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = properFractionFormat3.parse("10 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction68 = properFractionFormat66.parse("10 / 1");
        java.text.NumberFormat numberFormat69 = properFractionFormat66.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("-1 / 1", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat3.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = properFractionFormat3.format(fraction24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat24.getNumeratorFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat30);
        properFractionFormat16.setNumeratorFormat(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj33 = numberFormat30.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        fractionFormat34.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        fractionFormat34.setDenominatorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18, numberFormat30, numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getNumeratorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.lang.String str54 = properFractionFormat52.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat55 = properFractionFormat52.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat52.getNumeratorFormat();
        java.lang.Object obj58 = numberFormat56.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        properFractionFormat64.setWholeFormat(numberFormat66);
        fractionFormat60.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        properFractionFormat59.setDenominatorFormat(numberFormat66);
        properFractionFormat2.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat72 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = properFractionFormat75.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj80 = properFractionFormat75.clone();
        java.lang.Object obj81 = properFractionFormat75.clone();
        org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat75.parse("-1 0 / 1");
        java.lang.String str84 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction83);
        java.lang.String str85 = numberFormat72.format((java.lang.Object) fraction83);
        java.lang.Class<?> wildcardClass86 = fraction83.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1L + "'", obj33, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1 0 / 1" + "'", str54, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1L + "'", obj58, 1L);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1 / 1" + "'", str84, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1" + "'", str85, "-1");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction9 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.Object obj19 = properFractionFormat17.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat27);
        properFractionFormat17.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat30.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        fractionFormat30.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = properFractionFormat51.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getDenominatorFormat();
        properFractionFormat44.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.Object obj65 = numberFormat60.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat60, numberFormat76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = properFractionFormat2.format((java.lang.Object) properFractionFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1L + "'", obj65, 1L);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj22 = numberFormat20.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        properFractionFormat28.setWholeFormat(numberFormat30);
        fractionFormat24.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        properFractionFormat23.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = properFractionFormat37.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj42 = properFractionFormat37.clone();
        java.lang.Object obj43 = properFractionFormat37.clone();
        java.text.NumberFormat numberFormat44 = properFractionFormat37.getDenominatorFormat();
        properFractionFormat23.setWholeFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = properFractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat23.getWholeFormat();
        properFractionFormat7.setWholeFormat(numberFormat47);
        fractionFormat0.setNumeratorFormat(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction3 = fractionFormat0.parse("-1 / 1");
        java.lang.Object obj4 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        properFractionFormat20.setWholeFormat(numberFormat22);
        properFractionFormat7.setWholeFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat25.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        properFractionFormat41.setDenominatorFormat(numberFormat50);
        properFractionFormat7.setWholeFormat(numberFormat50);
        java.text.NumberFormat numberFormat53 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = numberFormat1.parseObject("10");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 10L + "'", obj3, 10L);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("10");
        fractionFormat0.setNumeratorFormat(numberFormat16);
        java.text.NumberFormat numberFormat20 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat0.parse("1");
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction22);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10L + "'", obj18, 10L);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1 / 1" + "'", str23, "1 / 1");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat28.parseObject("1 / 1");
        properFractionFormat18.setWholeFormat(numberFormat28);
        properFractionFormat2.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.lang.Object obj37 = numberFormat36.clone();
        fractionFormat33.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat44 = properFractionFormat41.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.lang.Object obj47 = numberFormat46.clone();
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44, numberFormat46, numberFormat48);
        java.text.NumberFormat numberFormat50 = properFractionFormat49.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat54.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        fractionFormat61.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        fractionFormat61.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.Fraction fraction74 = fractionFormat61.parse("1");
        java.lang.String str75 = numberFormat59.format((java.lang.Object) fraction74);
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = properFractionFormat2.format(fraction74, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1" + "'", str75, "1");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        properFractionFormat14.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.Object obj35 = numberFormat30.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.Object obj38 = properFractionFormat37.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj8 = properFractionFormat6.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        fractionFormat9.setDenominatorFormat(numberFormat16);
        properFractionFormat6.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat26.getNumeratorFormat();
        properFractionFormat23.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = properFractionFormat57.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat62 = properFractionFormat57.getDenominatorFormat();
        properFractionFormat50.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.Object obj71 = numberFormat66.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34, numberFormat62, numberFormat79);
        properFractionFormat6.setDenominatorFormat(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1L + "'", obj71, 1L);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        fractionFormat5.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        fractionFormat5.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat5.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat24.getWholeFormat();
        properFractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        fractionFormat0.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        fractionFormat27.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        fractionFormat27.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat27.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.text.NumberFormat numberFormat66 = properFractionFormat65.getNumeratorFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat60.getDenominatorFormat();
        properFractionFormat43.setNumeratorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68, numberFormat70, numberFormat72);
        properFractionFormat25.setWholeFormat(numberFormat68);
        java.text.ParsePosition parsePosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction77 = properFractionFormat25.parse("1 0 / 1", parsePosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.lang.Object obj13 = properFractionFormat10.clone();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        fractionFormat15.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        fractionFormat15.setDenominatorFormat(numberFormat25);
        java.lang.Object obj28 = numberFormat25.parseObject("1 / 1");
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = properFractionFormat32.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj37 = properFractionFormat32.clone();
        java.lang.Object obj38 = properFractionFormat32.clone();
        java.text.NumberFormat numberFormat39 = properFractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat43.getWholeFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat54.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat54.getWholeFormat();
        java.lang.Object obj62 = numberFormat60.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39, numberFormat49, numberFormat60);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat64.parse("10");
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getDenominatorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat75.getNumeratorFormat();
        properFractionFormat72.setDenominatorFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = properFractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        java.lang.String str88 = properFractionFormat86.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat89 = properFractionFormat86.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67, numberFormat83, numberFormat89);
        org.apache.commons.math.fraction.Fraction fraction92 = properFractionFormat90.parse("1 / 1");
        java.lang.StringBuffer stringBuffer93 = null;
        java.text.FieldPosition fieldPosition94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer95 = properFractionFormat10.format(fraction92, stringBuffer93, fieldPosition94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (-1L) + "'", obj62, (-1L));
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "-1 0 / 1" + "'", str88, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(fraction92);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat48.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator51 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat50.getWholeFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        fractionFormat58.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        fractionFormat58.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat58.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.text.NumberFormat numberFormat75 = properFractionFormat74.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat56, numberFormat76);
        java.text.NumberFormat numberFormat78 = properFractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        java.lang.String str83 = properFractionFormat81.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = properFractionFormat81.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj86 = properFractionFormat81.clone();
        java.lang.Object obj87 = properFractionFormat81.clone();
        java.text.NumberFormat numberFormat88 = properFractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88);
        org.apache.commons.math.fraction.Fraction fraction91 = properFractionFormat89.parse("1 / 1");
        java.lang.StringBuffer stringBuffer92 = null;
        java.text.FieldPosition fieldPosition93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer94 = properFractionFormat77.format(fraction91, stringBuffer92, fieldPosition93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1 0 / 1" + "'", str83, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction91);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        java.text.NumberFormat numberFormat49 = properFractionFormat48.getNumeratorFormat();
        java.lang.Object obj50 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.text.NumberFormat numberFormat57 = properFractionFormat56.getNumeratorFormat();
        java.lang.Object obj58 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat48.setWholeFormat(numberFormat59);
        org.apache.commons.math.fraction.Fraction fraction62 = properFractionFormat48.parse("10 / 1");
        org.apache.commons.math.fraction.Fraction fraction63 = null;
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = properFractionFormat48.format(fraction63, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fraction62);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        java.lang.String str6 = properFractionFormat4.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat7 = properFractionFormat4.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        properFractionFormat4.setWholeFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj38 = properFractionFormat33.clone();
        java.lang.Object obj39 = properFractionFormat33.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat15, numberFormat40);
        java.lang.Object obj43 = properFractionFormat42.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat44.getNumeratorFormat();
        java.lang.Object obj46 = properFractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        fractionFormat47.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        fractionFormat47.setDenominatorFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat47.getNumeratorFormat();
        properFractionFormat44.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = properFractionFormat44.getNumeratorFormat();
        properFractionFormat42.setDenominatorFormat(numberFormat62);
        fractionFormat0.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        java.lang.String str69 = properFractionFormat67.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat70 = properFractionFormat67.getWholeFormat();
        java.text.NumberFormat numberFormat71 = properFractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getDenominatorFormat();
        properFractionFormat67.setNumeratorFormat(numberFormat79);
        java.text.NumberFormat numberFormat81 = properFractionFormat67.getDenominatorFormat();
        java.text.NumberFormat numberFormat82 = properFractionFormat67.getDenominatorFormat();
        fractionFormat0.setNumeratorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1 0 / 1" + "'", str6, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1 0 / 1" + "'", str69, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("1 / 1");
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.Fraction fraction52 = properFractionFormat3.parse("1");
        java.text.NumberFormat numberFormat53 = properFractionFormat3.getWholeFormat();
        java.lang.Object obj55 = numberFormat53.parseObject("10 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        java.text.NumberFormat numberFormat63 = properFractionFormat59.getDenominatorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat63);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.Object obj67 = properFractionFormat65.parseObject("-1 0 / 1");
        org.apache.commons.math.fraction.Fraction fraction69 = properFractionFormat65.parse("10 0 / 1");
        java.text.NumberFormat numberFormat70 = properFractionFormat65.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator71 = numberFormat53.formatToCharacterIterator((java.lang.Object) properFractionFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10L + "'", obj55, 10L);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat7, numberFormat9);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        fractionFormat12.setDenominatorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        fractionFormat12.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat22, numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = properFractionFormat23.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj28 = properFractionFormat23.clone();
        java.lang.Object obj29 = properFractionFormat23.clone();
        java.text.NumberFormat numberFormat30 = properFractionFormat23.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        fractionFormat33.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        fractionFormat33.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat48.clone();
        fractionFormat45.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        fractionFormat51.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat61 = properFractionFormat58.getWholeFormat();
        fractionFormat51.setDenominatorFormat(numberFormat61);
        java.lang.Object obj64 = numberFormat61.parseObject("1 / 1");
        java.text.NumberFormat numberFormat65 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = properFractionFormat68.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj73 = properFractionFormat68.clone();
        java.lang.Object obj74 = properFractionFormat68.clone();
        java.text.NumberFormat numberFormat75 = properFractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61, numberFormat65, numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43, numberFormat48, numberFormat61);
        properFractionFormat9.setWholeFormat(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1L + "'", obj64, 1L);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat48.parse("1");
        java.lang.String str51 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.String str52 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.String str53 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        java.lang.String str54 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1 / 1" + "'", str51, "1 / 1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1 / 1" + "'", str52, "1 / 1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1 / 1" + "'", str53, "1 / 1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1 / 1" + "'", str54, "1 / 1");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat0.setDenominatorFormat(numberFormat11);
        java.lang.Object obj15 = fractionFormat0.parseObject("1");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.lang.String str18 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction17);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100 / 1" + "'", str18, "100 / 1");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj50 = properFractionFormat2.parseObject("100");
        java.text.NumberFormat numberFormat51 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        fractionFormat13.setDenominatorFormat(numberFormat16);
        properFractionFormat11.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.lang.Object obj28 = numberFormat27.clone();
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat27, numberFormat29);
        java.text.NumberFormat numberFormat31 = properFractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat16, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        java.text.NumberFormat numberFormat39 = properFractionFormat35.getNumeratorFormat();
        java.lang.Object obj41 = numberFormat39.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        properFractionFormat47.setWholeFormat(numberFormat49);
        fractionFormat43.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat42.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = properFractionFormat56.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj61 = properFractionFormat56.clone();
        java.lang.Object obj62 = properFractionFormat56.clone();
        java.text.NumberFormat numberFormat63 = properFractionFormat56.getDenominatorFormat();
        properFractionFormat42.setWholeFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat42.getNumeratorFormat();
        properFractionFormat32.setNumeratorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        properFractionFormat70.setWholeFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = properFractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.String str79 = properFractionFormat77.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat80 = properFractionFormat77.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat77.getNumeratorFormat();
        java.lang.Object obj83 = numberFormat81.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat74, numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1 0 / 1" + "'", str79, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat23.clone();
        fractionFormat20.setDenominatorFormat(numberFormat23);
        properFractionFormat18.setWholeFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat34, numberFormat36);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat23, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat46.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        fractionFormat50.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat49.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat49.getNumeratorFormat();
        properFractionFormat39.setNumeratorFormat(numberFormat72);
        properFractionFormat4.setNumeratorFormat(numberFormat72);
        java.lang.Object obj75 = properFractionFormat4.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1L + "'", obj48, 1L);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat40, numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = properFractionFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat44.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat44);
        java.lang.Object obj66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = numberFormat44.format(obj66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat3 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat3);
        org.apache.commons.math.fraction.Fraction fraction6 = properFractionFormat4.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat12 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.lang.Object obj24 = numberFormat23.clone();
        fractionFormat20.setDenominatorFormat(numberFormat23);
        properFractionFormat18.setWholeFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat34, numberFormat36);
        java.text.NumberFormat numberFormat38 = properFractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15, numberFormat23, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        java.lang.String str44 = properFractionFormat42.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat45 = properFractionFormat42.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat42.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat46.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        fractionFormat50.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        properFractionFormat49.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = properFractionFormat63.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj68 = properFractionFormat63.clone();
        java.lang.Object obj69 = properFractionFormat63.clone();
        java.text.NumberFormat numberFormat70 = properFractionFormat63.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat70);
        java.text.NumberFormat numberFormat72 = properFractionFormat49.getNumeratorFormat();
        properFractionFormat39.setNumeratorFormat(numberFormat72);
        properFractionFormat4.setNumeratorFormat(numberFormat72);
        java.text.NumberFormat numberFormat75 = properFractionFormat4.getNumeratorFormat();
        java.lang.Class<?> wildcardClass76 = numberFormat75.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1 0 / 1" + "'", str44, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1L + "'", obj48, 1L);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj2 = numberFormat1.clone();
        java.lang.Object obj4 = numberFormat1.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat5 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        java.lang.String str10 = properFractionFormat8.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat11 = properFractionFormat8.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat8.getNumeratorFormat();
        java.lang.Object obj14 = numberFormat12.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat16 = properFractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat15.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = numberFormat1.format((java.lang.Object) numberFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1 0 / 1" + "'", str10, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1L + "'", obj14, 1L);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getDenominatorFormat();
        properFractionFormat2.setWholeFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat9.parse("1 0 / 1");
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = properFractionFormat9.parse("hi!", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7, numberFormat19, numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        java.lang.String str43 = properFractionFormat41.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = properFractionFormat41.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat46 = properFractionFormat41.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat41.getDenominatorFormat();
        properFractionFormat38.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        properFractionFormat38.setWholeFormat(numberFormat50);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = properFractionFormat38.parseObject("100", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1 0 / 1" + "'", str43, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getDenominatorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        fractionFormat38.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        fractionFormat38.setDenominatorFormat(numberFormat48);
        java.lang.Object obj51 = numberFormat48.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat48, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat66.clone();
        java.text.NumberFormat numberFormat68 = fractionFormat66.getDenominatorFormat();
        properFractionFormat65.setNumeratorFormat(numberFormat68);
        properFractionFormat28.setDenominatorFormat(numberFormat68);
        org.apache.commons.math.fraction.Fraction fraction72 = properFractionFormat28.parse("-1");
        java.lang.Object obj74 = properFractionFormat28.parseObject("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1L + "'", obj51, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat0 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat1 = properFractionFormat0.getNumeratorFormat();
        java.lang.Object obj2 = properFractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        fractionFormat3.setDenominatorFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        fractionFormat3.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat3.getNumeratorFormat();
        properFractionFormat0.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = properFractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        fractionFormat31.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        fractionFormat37.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        fractionFormat37.setDenominatorFormat(numberFormat47);
        java.lang.Object obj50 = numberFormat47.parseObject("1 / 1");
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = properFractionFormat54.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj59 = properFractionFormat54.clone();
        java.lang.Object obj60 = properFractionFormat54.clone();
        java.text.NumberFormat numberFormat61 = properFractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47, numberFormat51, numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat34, numberFormat47);
        properFractionFormat0.setDenominatorFormat(numberFormat34);
        java.text.NumberFormat numberFormat65 = properFractionFormat0.getWholeFormat();
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.lang.Object obj10 = properFractionFormat2.parseObject("1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat19 = properFractionFormat15.getDenominatorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getWholeFormat();
        java.lang.Object obj23 = properFractionFormat21.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat37 = properFractionFormat34.getWholeFormat();
        java.text.NumberFormat numberFormat38 = properFractionFormat34.getDenominatorFormat();
        properFractionFormat26.setNumeratorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.lang.Object obj54 = numberFormat51.parseObject("1 / 1");
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.lang.String str60 = properFractionFormat58.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = properFractionFormat58.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj63 = properFractionFormat58.clone();
        java.lang.Object obj64 = properFractionFormat58.clone();
        java.text.NumberFormat numberFormat65 = properFractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51, numberFormat55, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat75 = properFractionFormat69.getWholeFormat();
        java.lang.Object obj77 = numberFormat75.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat86 = properFractionFormat80.getWholeFormat();
        java.lang.Object obj88 = numberFormat86.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat75, numberFormat86);
        properFractionFormat26.setNumeratorFormat(numberFormat75);
        properFractionFormat21.setDenominatorFormat(numberFormat75);
        properFractionFormat2.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.Fraction fraction94 = properFractionFormat2.parse("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1L + "'", obj54, 1L);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1 0 / 1" + "'", str60, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (-1L) + "'", obj77, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (-1L) + "'", obj88, (-1L));
        org.junit.Assert.assertNotNull(fraction94);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        fractionFormat16.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        fractionFormat16.setDenominatorFormat(numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("1 / 1");
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = properFractionFormat33.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj38 = properFractionFormat33.clone();
        java.lang.Object obj39 = properFractionFormat33.clone();
        java.text.NumberFormat numberFormat40 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        java.lang.Object obj52 = numberFormat50.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        java.lang.Object obj63 = numberFormat61.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40, numberFormat50, numberFormat61);
        org.apache.commons.math.fraction.Fraction fraction66 = properFractionFormat64.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getWholeFormat();
        properFractionFormat64.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        properFractionFormat2.setWholeFormat(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1L) + "'", obj52, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        java.text.NumberFormat numberFormat15 = properFractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        properFractionFormat11.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        fractionFormat23.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        java.lang.String str32 = properFractionFormat30.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat33 = properFractionFormat30.getWholeFormat();
        fractionFormat23.setDenominatorFormat(numberFormat33);
        java.lang.Object obj36 = numberFormat33.parseObject("1 / 1");
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = properFractionFormat40.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj45 = properFractionFormat40.clone();
        java.lang.Object obj46 = properFractionFormat40.clone();
        java.text.NumberFormat numberFormat47 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17, numberFormat22, numberFormat47);
        properFractionFormat3.setDenominatorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        properFractionFormat55.setWholeFormat(numberFormat57);
        fractionFormat51.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat60.getNumeratorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat61);
        properFractionFormat3.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat64 = properFractionFormat3.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1 0 / 1" + "'", str32, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getNumeratorFormat();
        java.lang.Object obj18 = numberFormat16.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat19.getNumeratorFormat();
        java.lang.String str33 = numberFormat31.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        java.text.NumberFormat numberFormat40 = properFractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        properFractionFormat36.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        properFractionFormat49.setWholeFormat(numberFormat51);
        properFractionFormat36.setWholeFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        fractionFormat54.setDenominatorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        fractionFormat54.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat54.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        java.lang.String str75 = properFractionFormat73.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat76 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat73.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat73.getWholeFormat();
        properFractionFormat70.setDenominatorFormat(numberFormat79);
        properFractionFormat36.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat31, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat89 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj90 = numberFormat86.clone();
        properFractionFormat84.setWholeFormat(numberFormat86);
        fractionFormat0.setDenominatorFormat(numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat86);
        java.lang.Object obj94 = numberFormat86.clone();
        java.lang.Class<?> wildcardClass95 = numberFormat86.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1 0 / 1" + "'", str75, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat49.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat66 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = properFractionFormat69.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat74 = properFractionFormat69.getDenominatorFormat();
        java.lang.Object obj76 = properFractionFormat69.parseObject("1 / 1");
        java.text.NumberFormat numberFormat77 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction79 = properFractionFormat69.parse("1 / 1");
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = properFractionFormat49.format((java.lang.Object) "1 / 1", stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fraction79);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str15 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 / 1" + "'", str13, "10 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10 / 1" + "'", str14, "10 / 1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10 / 1" + "'", str15, "10 / 1");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        properFractionFormat74.setWholeFormat(numberFormat76);
        java.lang.Class<?> wildcardClass82 = properFractionFormat74.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        properFractionFormat14.setWholeFormat(numberFormat16);
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat9.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat21 = properFractionFormat9.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        fractionFormat6.setDenominatorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        java.lang.String str15 = properFractionFormat13.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat16 = properFractionFormat13.getWholeFormat();
        fractionFormat6.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat6.parse("-1 0 / 1");
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction20);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = properFractionFormat4.format(fraction20, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "-1 0 / 1" + "'", str15, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 / 1" + "'", str21, "-1 / 1");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat0.parse("-1 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        java.lang.String str27 = properFractionFormat25.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat28 = properFractionFormat25.getWholeFormat();
        java.text.NumberFormat numberFormat29 = properFractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat25.setNumeratorFormat(numberFormat37);
        properFractionFormat16.setDenominatorFormat(numberFormat37);
        properFractionFormat13.setNumeratorFormat(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 0 / 1" + "'", str27, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat92 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj94 = properFractionFormat2.parseObject("1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat51.getWholeFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat57);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = properFractionFormat2.parseObject("hi!", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getWholeFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat29.getDenominatorFormat();
        properFractionFormat21.setNumeratorFormat(numberFormat33);
        java.text.NumberFormat numberFormat35 = properFractionFormat21.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.lang.Object obj49 = numberFormat46.parseObject("1 / 1");
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = properFractionFormat53.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj58 = properFractionFormat53.clone();
        java.lang.Object obj59 = properFractionFormat53.clone();
        java.text.NumberFormat numberFormat60 = properFractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46, numberFormat50, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj72 = numberFormat70.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat81 = properFractionFormat75.getWholeFormat();
        java.lang.Object obj83 = numberFormat81.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60, numberFormat70, numberFormat81);
        properFractionFormat21.setNumeratorFormat(numberFormat70);
        properFractionFormat16.setDenominatorFormat(numberFormat70);
        java.lang.Object obj87 = numberFormat70.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1L + "'", obj49, 1L);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1L) + "'", obj83, (-1L));
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        java.text.NumberFormat numberFormat47 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        properFractionFormat43.setWholeFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        fractionFormat55.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.lang.String str64 = properFractionFormat62.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat65 = properFractionFormat62.getWholeFormat();
        fractionFormat55.setDenominatorFormat(numberFormat65);
        java.lang.Object obj68 = numberFormat65.parseObject("1 / 1");
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = properFractionFormat72.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj77 = properFractionFormat72.clone();
        java.lang.Object obj78 = properFractionFormat72.clone();
        java.text.NumberFormat numberFormat79 = properFractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65, numberFormat69, numberFormat79);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49, numberFormat54, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat83);
        java.lang.String str86 = properFractionFormat84.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = properFractionFormat84.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj89 = properFractionFormat84.clone();
        java.text.NumberFormat numberFormat90 = properFractionFormat84.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat91 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat49, numberFormat90);
        properFractionFormat23.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.Fraction fraction94 = properFractionFormat23.parse("-1 / 1");
        java.lang.String str95 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction94);
        java.lang.String str96 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction94);
        java.lang.String str97 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction94);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1 0 / 1" + "'", str64, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1L + "'", obj68, 1L);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "-1 0 / 1" + "'", str86, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "-1 / 1" + "'", str95, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "-1 / 1" + "'", str96, "-1 / 1");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "-1 / 1" + "'", str97, "-1 / 1");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        java.lang.Object obj41 = properFractionFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        fractionFormat42.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        java.lang.String str51 = properFractionFormat49.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        fractionFormat42.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat42.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        java.text.NumberFormat numberFormat59 = properFractionFormat58.getWholeFormat();
        java.lang.Object obj60 = properFractionFormat58.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        properFractionFormat63.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        properFractionFormat76.setWholeFormat(numberFormat78);
        properFractionFormat63.setWholeFormat(numberFormat78);
        java.lang.String str82 = numberFormat78.format((java.lang.Object) (short) 10);
        properFractionFormat58.setNumeratorFormat(numberFormat78);
        properFractionFormat40.setNumeratorFormat(numberFormat78);
        java.lang.Object obj85 = numberFormat78.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1 0 / 1" + "'", str51, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "10" + "'", str82, "10");
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat48.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getWholeFormat();
        java.lang.Object obj66 = properFractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        java.text.NumberFormat numberFormat73 = properFractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        properFractionFormat69.setWholeFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat81 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        properFractionFormat82.setWholeFormat(numberFormat84);
        properFractionFormat69.setWholeFormat(numberFormat84);
        java.lang.String str88 = numberFormat84.format((java.lang.Object) (short) 10);
        properFractionFormat64.setNumeratorFormat(numberFormat84);
        properFractionFormat2.setNumeratorFormat(numberFormat84);
        java.text.NumberFormat numberFormat91 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj92 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat93 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "10" + "'", str88, "10");
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("1 / 1");
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getWholeFormat();
        java.text.ParsePosition parsePosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction23 = properFractionFormat16.parse("", parsePosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        properFractionFormat14.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.Object obj35 = numberFormat30.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat26, numberFormat30);
        java.lang.Class<?> wildcardClass37 = numberFormat10.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        java.lang.Object obj77 = numberFormat76.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat74, numberFormat76);
        java.text.NumberFormat numberFormat79 = properFractionFormat78.getNumeratorFormat();
        java.text.ParsePosition parsePosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction82 = properFractionFormat78.parse("10 0 / 1", parsePosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        org.apache.commons.math.fraction.Fraction fraction15 = properFractionFormat13.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = properFractionFormat18.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj23 = properFractionFormat18.clone();
        java.lang.Object obj24 = properFractionFormat18.clone();
        org.apache.commons.math.fraction.Fraction fraction26 = properFractionFormat18.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat27 = properFractionFormat18.getDenominatorFormat();
        properFractionFormat13.setNumeratorFormat(numberFormat27);
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = properFractionFormat2.format((java.lang.Object) numberFormat27, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat3.parse("10");
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction10);
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "10 / 1" + "'", str11, "10 / 1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10 / 1" + "'", str12, "10 / 1");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat11.parse("1 / 1");
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction13);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1 / 1" + "'", str14, "1 / 1");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat24.parseObject("-1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat27.parse("10");
        java.lang.String str30 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10 / 1" + "'", str30, "10 / 1");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction29 = properFractionFormat16.parse("10 0 / 1");
        java.text.NumberFormat numberFormat30 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        fractionFormat31.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        fractionFormat31.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat31.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.text.NumberFormat numberFormat53 = properFractionFormat52.getNumeratorFormat();
        properFractionFormat47.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = properFractionFormat47.getDenominatorFormat();
        java.lang.Object obj57 = numberFormat55.parseObject("-1");
        properFractionFormat16.setWholeFormat(numberFormat55);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat16.parse("100 / 1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1L) + "'", obj57, (-1L));
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        java.text.NumberFormat numberFormat26 = properFractionFormat25.getDenominatorFormat();
        java.lang.Object obj27 = properFractionFormat25.clone();
        java.lang.Object obj28 = properFractionFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat29.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48);
        fractionFormat46.setDenominatorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        fractionFormat46.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat46.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat68 = properFractionFormat67.getNumeratorFormat();
        properFractionFormat62.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = properFractionFormat62.getDenominatorFormat();
        properFractionFormat45.setNumeratorFormat(numberFormat70);
        properFractionFormat25.setNumeratorFormat(numberFormat70);
        java.text.NumberFormat numberFormat73 = properFractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction75 = properFractionFormat25.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fraction75);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        java.lang.String str5 = properFractionFormat3.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat6 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat12);
        fractionFormat10.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        fractionFormat10.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction24 = fractionFormat10.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = properFractionFormat31.getNumeratorFormat();
        properFractionFormat26.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat59 = properFractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat55.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat55.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat63 = properFractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9, numberFormat35, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        fractionFormat65.setDenominatorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        fractionFormat65.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat82 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat84 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat85 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35, numberFormat79, numberFormat81);
        java.lang.Object obj87 = properFractionFormat85.parseObject("10 / 1");
        java.text.NumberFormat numberFormat88 = properFractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = properFractionFormat85.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat92 = fractionFormat91.getDenominatorFormat();
        properFractionFormat85.setDenominatorFormat(numberFormat92);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1 0 / 1" + "'", str5, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fractionFormat91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat9.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        java.lang.String str22 = properFractionFormat20.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat23 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat20.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat20.getNumeratorFormat();
        properFractionFormat17.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = properFractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        properFractionFormat9.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        properFractionFormat40.setWholeFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat42, numberFormat51);
        properFractionFormat9.setDenominatorFormat(numberFormat51);
        java.lang.Object obj57 = numberFormat51.parseObject("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1 0 / 1" + "'", str22, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10L + "'", obj57, 10L);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat31, numberFormat33);
        properFractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        fractionFormat36.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.lang.String str45 = properFractionFormat43.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat46 = properFractionFormat43.getWholeFormat();
        fractionFormat36.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat36.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = properFractionFormat52.getWholeFormat();
        java.lang.Object obj54 = properFractionFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.String str59 = properFractionFormat57.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat60 = properFractionFormat57.getWholeFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        properFractionFormat57.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        properFractionFormat70.setWholeFormat(numberFormat72);
        properFractionFormat57.setWholeFormat(numberFormat72);
        java.lang.String str76 = numberFormat72.format((java.lang.Object) (short) 10);
        properFractionFormat52.setNumeratorFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat79 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        java.lang.String str82 = properFractionFormat80.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat83 = properFractionFormat80.getWholeFormat();
        java.text.NumberFormat numberFormat84 = properFractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = properFractionFormat80.getWholeFormat();
        properFractionFormat52.setDenominatorFormat(numberFormat85);
        properFractionFormat23.setWholeFormat(numberFormat85);
        java.text.NumberFormat numberFormat88 = properFractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat89 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat90 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat91 = properFractionFormat90.getNumeratorFormat();
        java.lang.Object obj92 = properFractionFormat90.clone();
        java.text.NumberFormat numberFormat93 = properFractionFormat90.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat88, numberFormat89, numberFormat93);
        java.text.NumberFormat numberFormat95 = properFractionFormat94.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "-1 0 / 1" + "'", str45, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1 0 / 1" + "'", str59, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "10" + "'", str76, "10");
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1 0 / 1" + "'", str82, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNull(numberFormat95);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.text.NumberFormat numberFormat5 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat6 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5);
        java.lang.Object obj8 = properFractionFormat6.parseObject("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat13 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat22 = properFractionFormat16.getNumeratorFormat();
        properFractionFormat13.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        fractionFormat26.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        java.lang.String str35 = properFractionFormat33.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat36 = properFractionFormat33.getWholeFormat();
        fractionFormat26.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = properFractionFormat47.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat52 = properFractionFormat47.getDenominatorFormat();
        properFractionFormat40.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.lang.Object obj61 = numberFormat56.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        java.lang.String str67 = properFractionFormat65.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat68 = properFractionFormat65.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat52, numberFormat69);
        java.text.NumberFormat numberFormat71 = properFractionFormat70.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = properFractionFormat6.format((java.lang.Object) numberFormat71, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1 0 / 1" + "'", str35, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1L + "'", obj61, 1L);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1 0 / 1" + "'", str67, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat69);
        org.apache.commons.math.fraction.Fraction fraction72 = properFractionFormat70.parse("10 0 / 1");
        java.text.NumberFormat numberFormat73 = properFractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat76 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat77 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75);
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73, numberFormat75, numberFormat79);
        properFractionFormat67.setNumeratorFormat(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = properFractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat21.clone();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getDenominatorFormat();
        properFractionFormat19.setWholeFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        properFractionFormat29.setWholeFormat(numberFormat31);
        fractionFormat25.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat34.getNumeratorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        fractionFormat43.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat49);
        java.lang.String str52 = properFractionFormat50.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat53 = properFractionFormat50.getWholeFormat();
        fractionFormat43.setDenominatorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat43.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat61);
        java.text.NumberFormat numberFormat65 = properFractionFormat64.getNumeratorFormat();
        properFractionFormat59.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = properFractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat59.getNumeratorFormat();
        properFractionFormat40.setWholeFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        properFractionFormat79.setWholeFormat(numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat85);
        java.lang.String str88 = properFractionFormat86.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat89 = properFractionFormat86.getWholeFormat();
        java.text.NumberFormat numberFormat90 = properFractionFormat86.getDenominatorFormat();
        fractionFormat83.setDenominatorFormat(numberFormat90);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat90);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat75, numberFormat81, numberFormat90);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat94 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37, numberFormat68, numberFormat81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = numberFormat23.format((java.lang.Object) numberFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1 0 / 1" + "'", str52, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "-1 0 / 1" + "'", str88, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat90);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = properFractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = properFractionFormat16.parseObject("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat17.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat39 = properFractionFormat38.getNumeratorFormat();
        properFractionFormat33.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = properFractionFormat33.getDenominatorFormat();
        properFractionFormat16.setNumeratorFormat(numberFormat41);
        org.apache.commons.math.fraction.Fraction fraction44 = properFractionFormat16.parse("-1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        properFractionFormat54.setWholeFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat60);
        java.lang.String str63 = properFractionFormat61.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat64 = properFractionFormat61.getWholeFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat61.getDenominatorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat65);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50, numberFormat56, numberFormat65);
        java.lang.Object obj69 = numberFormat56.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat70 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        java.text.NumberFormat numberFormat71 = properFractionFormat70.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat73);
        java.lang.String str76 = properFractionFormat74.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = properFractionFormat74.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat79 = properFractionFormat74.getDenominatorFormat();
        properFractionFormat70.setWholeFormat(numberFormat79);
        org.apache.commons.math.fraction.Fraction fraction82 = properFractionFormat70.parse("10 0 / 1");
        java.lang.String str83 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction82);
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = properFractionFormat16.format(fraction82, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1 0 / 1" + "'", str63, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1 0 / 1" + "'", str76, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "10 / 1" + "'", str83, "10 / 1");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat9.getNumeratorFormat();
        java.lang.String str23 = numberFormat21.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32);
        properFractionFormat26.setWholeFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        properFractionFormat39.setWholeFormat(numberFormat41);
        properFractionFormat26.setWholeFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat44.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.String str65 = properFractionFormat63.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat66 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat67 = properFractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat63.getWholeFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat63.getWholeFormat();
        properFractionFormat60.setDenominatorFormat(numberFormat69);
        properFractionFormat26.setWholeFormat(numberFormat69);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6, numberFormat21, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat74);
        java.lang.String str77 = properFractionFormat75.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat78 = properFractionFormat75.getWholeFormat();
        java.text.NumberFormat numberFormat79 = properFractionFormat75.getDenominatorFormat();
        properFractionFormat72.setDenominatorFormat(numberFormat79);
        java.text.ParsePosition parsePosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction83 = properFractionFormat72.parse("1 0 / 1", parsePosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1 0 / 1" + "'", str65, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1 0 / 1" + "'", str77, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        fractionFormat9.setDenominatorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        fractionFormat9.setDenominatorFormat(numberFormat19);
        java.lang.Object obj22 = numberFormat19.parseObject("1 / 1");
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = properFractionFormat26.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj31 = properFractionFormat26.clone();
        java.lang.Object obj32 = properFractionFormat26.clone();
        java.text.NumberFormat numberFormat33 = properFractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19, numberFormat23, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat37 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36);
        java.lang.String str39 = properFractionFormat37.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat40 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat41 = properFractionFormat37.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat37.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat37.getWholeFormat();
        java.lang.Object obj45 = numberFormat43.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat48.getWholeFormat();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        java.lang.Object obj56 = numberFormat54.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33, numberFormat43, numberFormat54);
        org.apache.commons.math.fraction.Fraction fraction59 = properFractionFormat57.parse("1");
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = properFractionFormat2.format(fraction59, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1 0 / 1" + "'", str39, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertNotNull(fraction59);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat22 = properFractionFormat21.getNumeratorFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat24 = properFractionFormat16.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj27 = numberFormat25.parseObject("10 0 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat36 = properFractionFormat31.getWholeFormat();
        java.text.NumberFormat numberFormat37 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat40.getWholeFormat();
        properFractionFormat31.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25, numberFormat28, numberFormat46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = properFractionFormat48.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        properFractionFormat57.setWholeFormat(numberFormat59);
        fractionFormat53.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat62 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        properFractionFormat49.setDenominatorFormat(numberFormat59);
        java.text.NumberFormat numberFormat66 = properFractionFormat49.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat66);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.Object obj50 = properFractionFormat49.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.Fraction fraction4 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat10.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24);
        fractionFormat22.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        fractionFormat22.setDenominatorFormat(numberFormat32);
        java.lang.Object obj35 = numberFormat32.parseObject("1 / 1");
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat39.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj44 = properFractionFormat39.clone();
        java.lang.Object obj45 = properFractionFormat39.clone();
        java.text.NumberFormat numberFormat46 = properFractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat36, numberFormat46);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16, numberFormat21, numberFormat46);
        java.lang.Object obj49 = properFractionFormat48.clone();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat50 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat50.getNumeratorFormat();
        java.lang.Object obj52 = properFractionFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        fractionFormat53.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        fractionFormat53.setDenominatorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat53.getNumeratorFormat();
        properFractionFormat50.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat50.getNumeratorFormat();
        properFractionFormat48.setDenominatorFormat(numberFormat68);
        fractionFormat6.setNumeratorFormat(numberFormat68);
        java.lang.Object obj71 = numberFormat68.clone();
        properFractionFormat2.setWholeFormat(numberFormat68);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat73 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat40, numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = properFractionFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat44.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat67 = properFractionFormat66.getWholeFormat();
        java.lang.Object obj68 = properFractionFormat66.clone();
        java.text.NumberFormat numberFormat69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properFractionFormat66.setWholeFormat(numberFormat69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: whole format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        properFractionFormat4.setWholeFormat(numberFormat6);
        fractionFormat0.setNumeratorFormat(numberFormat6);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = fractionFormat0.parseObject("1 0 / 1", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat13 = properFractionFormat7.getNumeratorFormat();
        properFractionFormat4.setDenominatorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = properFractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat20 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat19);
        fractionFormat17.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        fractionFormat17.setDenominatorFormat(numberFormat27);
        java.lang.Object obj30 = numberFormat27.parseObject("1 / 1");
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat34 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat33);
        java.lang.String str36 = properFractionFormat34.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = properFractionFormat34.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj39 = properFractionFormat34.clone();
        java.lang.Object obj40 = properFractionFormat34.clone();
        java.text.NumberFormat numberFormat41 = properFractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat42 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27, numberFormat31, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat45.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat45.getWholeFormat();
        java.lang.Object obj53 = numberFormat51.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        java.lang.String str58 = properFractionFormat56.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat59 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat60 = properFractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = properFractionFormat56.getWholeFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat56.getWholeFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41, numberFormat51, numberFormat62);
        properFractionFormat16.setWholeFormat(numberFormat51);
        java.lang.Class<?> wildcardClass67 = numberFormat51.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1 0 / 1" + "'", str36, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1 0 / 1" + "'", str58, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.lang.String str16 = properFractionFormat14.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat17 = properFractionFormat14.getWholeFormat();
        java.text.NumberFormat numberFormat18 = properFractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = properFractionFormat21.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat26 = properFractionFormat21.getDenominatorFormat();
        properFractionFormat14.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.Object obj35 = numberFormat30.parseObject("1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat39);
        java.lang.String str42 = properFractionFormat40.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat43 = properFractionFormat40.getWholeFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat40.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat44);
        properFractionFormat36.setWholeFormat(numberFormat44);
        org.apache.commons.math.fraction.Fraction fraction48 = properFractionFormat36.parse("-1");
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1 0 / 1" + "'", str16, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1 0 / 1" + "'", str42, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 / 1" + "'", str49, "-1 / 1");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = properFractionFormat2.getWholeFormat();
        java.lang.Object obj13 = numberFormat12.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getDenominatorFormat();
        java.lang.Object obj9 = properFractionFormat2.parseObject("1 / 1");
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj12 = properFractionFormat2.parseObject("1");
        java.lang.Object obj13 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        java.lang.Object obj9 = properFractionFormat3.clone();
        java.lang.Object obj11 = properFractionFormat3.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat10 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat10.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat5 = fractionFormat4.getDenominatorFormat();
        properFractionFormat3.setWholeFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = properFractionFormat3.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat12 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11);
        java.lang.String str14 = properFractionFormat12.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat15 = properFractionFormat12.getWholeFormat();
        java.text.NumberFormat numberFormat16 = properFractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat12.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat20 = properFractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        java.lang.String str25 = properFractionFormat23.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat26 = properFractionFormat23.getWholeFormat();
        java.text.NumberFormat numberFormat27 = properFractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat30 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29);
        properFractionFormat23.setWholeFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        properFractionFormat36.setWholeFormat(numberFormat38);
        properFractionFormat23.setWholeFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        fractionFormat41.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat51 = properFractionFormat48.getWholeFormat();
        fractionFormat41.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat41.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getWholeFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        properFractionFormat23.setWholeFormat(numberFormat66);
        java.text.NumberFormat numberFormat69 = properFractionFormat23.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat69.parseObject("10 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat20, numberFormat69);
        java.text.NumberFormat numberFormat73 = properFractionFormat72.getWholeFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1 0 / 1" + "'", str14, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1 0 / 1" + "'", str25, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10L + "'", obj71, 10L);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat6.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat10 = properFractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat14);
        java.lang.String str17 = properFractionFormat15.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat18 = properFractionFormat15.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat21.getNumeratorFormat();
        java.lang.Object obj27 = numberFormat25.parseObject("1 / 1");
        properFractionFormat15.setWholeFormat(numberFormat25);
        java.text.NumberFormat numberFormat29 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat30 = properFractionFormat15.getWholeFormat();
        java.text.NumberFormat numberFormat31 = properFractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat15.getNumeratorFormat();
        properFractionFormat11.setWholeFormat(numberFormat32);
        java.lang.Object obj34 = properFractionFormat11.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1 0 / 1" + "'", str17, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        java.text.NumberFormat numberFormat55 = properFractionFormat51.getDenominatorFormat();
        fractionFormat48.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45, numberFormat55, numberFormat64);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.Object obj68 = properFractionFormat66.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat29 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        java.lang.String str31 = properFractionFormat29.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat32 = properFractionFormat29.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.lang.Object obj41 = numberFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat43 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38, numberFormat40, numberFormat42);
        java.text.NumberFormat numberFormat44 = properFractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getNumeratorFormat();
        java.lang.Object obj47 = properFractionFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        fractionFormat48.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.String str57 = properFractionFormat55.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat58 = properFractionFormat55.getWholeFormat();
        fractionFormat48.setDenominatorFormat(numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat48.getNumeratorFormat();
        properFractionFormat45.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat32, numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat44.clone();
        properFractionFormat16.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat66 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.text.NumberFormat numberFormat67 = properFractionFormat66.getWholeFormat();
        java.lang.Object obj68 = properFractionFormat66.clone();
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = properFractionFormat66.parseObject("1", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "-1 0 / 1" + "'", str31, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1 0 / 1" + "'", str57, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        java.lang.String str24 = properFractionFormat22.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat25 = properFractionFormat22.getWholeFormat();
        java.text.NumberFormat numberFormat26 = properFractionFormat22.getNumeratorFormat();
        java.lang.Object obj28 = numberFormat26.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        fractionFormat29.setDenominatorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat39 = properFractionFormat36.getWholeFormat();
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat29.getNumeratorFormat();
        java.lang.String str43 = numberFormat41.format((java.lang.Object) (byte) 1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat46 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat45);
        java.lang.String str48 = properFractionFormat46.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat49 = properFractionFormat46.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        properFractionFormat46.setWholeFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat58 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        properFractionFormat59.setWholeFormat(numberFormat61);
        properFractionFormat46.setWholeFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        fractionFormat64.setDenominatorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        fractionFormat64.setDenominatorFormat(numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat64.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat87 = properFractionFormat83.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = properFractionFormat83.getWholeFormat();
        java.text.NumberFormat numberFormat89 = properFractionFormat83.getWholeFormat();
        properFractionFormat80.setDenominatorFormat(numberFormat89);
        properFractionFormat46.setWholeFormat(numberFormat89);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26, numberFormat41, numberFormat89);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat93 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat41);
        properFractionFormat16.setWholeFormat(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1 0 / 1" + "'", str24, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1" + "'", str43, "1");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1 0 / 1" + "'", str48, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat4 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        java.text.NumberFormat numberFormat11 = properFractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        properFractionFormat7.setWholeFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        fractionFormat19.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat26 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat25);
        java.lang.String str28 = properFractionFormat26.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat29 = properFractionFormat26.getWholeFormat();
        fractionFormat19.setDenominatorFormat(numberFormat29);
        java.lang.Object obj32 = numberFormat29.parseObject("1 / 1");
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.lang.Object obj42 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat43 = properFractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat29, numberFormat33, numberFormat43);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13, numberFormat18, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat47);
        java.lang.String str50 = properFractionFormat48.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = properFractionFormat48.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj53 = properFractionFormat48.clone();
        java.text.NumberFormat numberFormat54 = properFractionFormat48.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1, numberFormat13, numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.Object obj58 = properFractionFormat56.parseObject("-1 / 1");
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = properFractionFormat56.parse("1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1 0 / 1" + "'", str28, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1L + "'", obj32, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1 0 / 1" + "'", str50, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        org.apache.commons.math.fraction.Fraction fraction10 = properFractionFormat2.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat11 = properFractionFormat2.getDenominatorFormat();
        java.lang.String str13 = properFractionFormat2.format((java.lang.Object) 10L);
        java.text.NumberFormat numberFormat14 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction16 = properFractionFormat2.parse("10 0 / 1");
        java.text.NumberFormat numberFormat17 = properFractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10 0 / 1" + "'", str13, "10 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(numberFormat17);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = properFractionFormat10.parse("-1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction14 = properFractionFormat10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = properFractionFormat48.parse("1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52);
        java.lang.String str55 = properFractionFormat53.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat56 = properFractionFormat53.getWholeFormat();
        java.text.NumberFormat numberFormat57 = properFractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = properFractionFormat53.getWholeFormat();
        properFractionFormat48.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat();
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        java.lang.Object obj68 = numberFormat65.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58, numberFormat62, numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1 0 / 1" + "'", str55, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1L + "'", obj68, 1L);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.lang.Object obj13 = numberFormat10.parseObject("1 / 1");
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = properFractionFormat17.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj22 = properFractionFormat17.clone();
        java.lang.Object obj23 = properFractionFormat17.clone();
        java.text.NumberFormat numberFormat24 = properFractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat25 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10, numberFormat14, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        java.lang.String str30 = properFractionFormat28.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat31 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat32 = properFractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = properFractionFormat28.getWholeFormat();
        java.text.NumberFormat numberFormat34 = properFractionFormat28.getWholeFormat();
        java.lang.Object obj36 = numberFormat34.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        java.lang.Object obj47 = numberFormat45.parseObject("-1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat48 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat34, numberFormat45);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat49 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = properFractionFormat49.parse("10");
        java.text.NumberFormat numberFormat52 = properFractionFormat49.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat56 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat57 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        java.lang.String str62 = properFractionFormat60.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat63 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat64 = properFractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = properFractionFormat60.getWholeFormat();
        java.text.NumberFormat numberFormat66 = properFractionFormat60.getNumeratorFormat();
        properFractionFormat57.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = properFractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat71 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat70);
        java.lang.String str73 = properFractionFormat71.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat74 = properFractionFormat71.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat52, numberFormat68, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        fractionFormat76.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat83 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat82);
        java.lang.String str85 = properFractionFormat83.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat86 = properFractionFormat83.getWholeFormat();
        fractionFormat76.setDenominatorFormat(numberFormat86);
        java.text.NumberFormat numberFormat88 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat76.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat91 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat92 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat91);
        java.text.NumberFormat numberFormat93 = properFractionFormat92.getNumeratorFormat();
        properFractionFormat75.setNumeratorFormat(numberFormat93);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat95 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat93);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1 0 / 1" + "'", str30, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1 0 / 1" + "'", str62, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1 0 / 1" + "'", str73, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1 0 / 1" + "'", str85, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj7 = properFractionFormat2.clone();
        java.lang.Object obj8 = properFractionFormat2.clone();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction11 = properFractionFormat2.parse("-1 0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        java.lang.Object obj18 = properFractionFormat16.clone();
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getDenominatorFormat();
        properFractionFormat2.setWholeFormat(numberFormat19);
        org.apache.commons.math.fraction.Fraction fraction22 = properFractionFormat2.parse("1");
        java.lang.Class<?> wildcardClass23 = properFractionFormat2.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat14 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat15 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        properFractionFormat15.setWholeFormat(numberFormat17);
        properFractionFormat2.setWholeFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat22);
        fractionFormat20.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat30 = properFractionFormat27.getWholeFormat();
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction34 = fractionFormat20.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        java.lang.String str41 = properFractionFormat39.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat42 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat43 = properFractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = properFractionFormat39.getWholeFormat();
        java.text.NumberFormat numberFormat45 = properFractionFormat39.getWholeFormat();
        properFractionFormat36.setDenominatorFormat(numberFormat45);
        properFractionFormat2.setWholeFormat(numberFormat45);
        java.text.NumberFormat numberFormat48 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat52 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat53 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat54 = properFractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        java.lang.Object obj56 = numberFormat54.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat64 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat63);
        java.lang.String str66 = properFractionFormat64.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat67 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat68 = properFractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat69 = properFractionFormat64.getWholeFormat();
        java.text.NumberFormat numberFormat70 = properFractionFormat64.getNumeratorFormat();
        properFractionFormat61.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat48, numberFormat54, numberFormat70);
        org.apache.commons.math.fraction.Fraction fraction74 = properFractionFormat72.parse("1");
        java.lang.Class<?> wildcardClass75 = fraction74.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1 0 / 1" + "'", str41, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1 0 / 1" + "'", str66, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat11 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat10);
        java.lang.String str13 = properFractionFormat11.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat14 = properFractionFormat11.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        java.lang.String str19 = properFractionFormat17.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat20 = properFractionFormat17.getWholeFormat();
        java.text.NumberFormat numberFormat21 = properFractionFormat17.getNumeratorFormat();
        java.lang.Object obj23 = numberFormat21.parseObject("1 / 1");
        properFractionFormat11.setWholeFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat27 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat26);
        java.lang.String str29 = properFractionFormat27.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = properFractionFormat27.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat32 = properFractionFormat27.getWholeFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat21, numberFormat32);
        java.text.NumberFormat numberFormat34 = properFractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = properFractionFormat33.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat38 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat37);
        java.lang.String str40 = properFractionFormat38.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat41 = properFractionFormat38.getWholeFormat();
        java.text.NumberFormat numberFormat42 = properFractionFormat38.getNumeratorFormat();
        java.lang.Object obj44 = numberFormat42.parseObject("1 / 1");
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat42);
        java.text.NumberFormat numberFormat46 = properFractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = properFractionFormat47.getWholeFormat();
        properFractionFormat33.setWholeFormat(numberFormat48);
        java.lang.Object obj50 = properFractionFormat33.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1 0 / 1" + "'", str13, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "-1 0 / 1" + "'", str19, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1 0 / 1" + "'", str29, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1 0 / 1" + "'", str40, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1L + "'", obj44, 1L);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = properFractionFormat2.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat8 = properFractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = properFractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = properFractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = properFractionFormat16.parse("1 / 1");
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1 / 1" + "'", str20, "1 / 1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1 / 1" + "'", str21, "1 / 1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1 / 1" + "'", str22, "1 / 1");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat2 = fractionFormat1.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat3 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat2);
        fractionFormat0.setDenominatorFormat(numberFormat2);
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat7 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat6);
        java.lang.String str9 = properFractionFormat7.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat10 = properFractionFormat7.getWholeFormat();
        fractionFormat0.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction14 = fractionFormat0.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat19 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat18);
        java.lang.String str21 = properFractionFormat19.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat22 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat23 = properFractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = properFractionFormat19.getWholeFormat();
        java.text.NumberFormat numberFormat25 = properFractionFormat19.getWholeFormat();
        properFractionFormat16.setDenominatorFormat(numberFormat25);
        java.text.NumberFormat numberFormat27 = properFractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        java.text.NumberFormat numberFormat36 = properFractionFormat32.getDenominatorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        fractionFormat38.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat45 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat44);
        java.lang.String str47 = properFractionFormat45.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat48 = properFractionFormat45.getWholeFormat();
        fractionFormat38.setDenominatorFormat(numberFormat48);
        java.lang.Object obj51 = numberFormat48.parseObject("1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat55 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54);
        fractionFormat52.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.lang.String str61 = properFractionFormat59.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat62 = properFractionFormat59.getWholeFormat();
        fractionFormat52.setDenominatorFormat(numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat36, numberFormat48, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat66.clone();
        java.text.NumberFormat numberFormat68 = fractionFormat66.getDenominatorFormat();
        properFractionFormat65.setNumeratorFormat(numberFormat68);
        properFractionFormat28.setDenominatorFormat(numberFormat68);
        java.lang.Object obj71 = numberFormat68.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1 0 / 1" + "'", str9, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1 0 / 1" + "'", str21, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "-1 0 / 1" + "'", str47, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1L + "'", obj51, 1L);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1 0 / 1" + "'", str61, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        properFractionFormat2.setWholeFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        fractionFormat14.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat21 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        java.lang.String str23 = properFractionFormat21.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat24 = properFractionFormat21.getWholeFormat();
        fractionFormat14.setDenominatorFormat(numberFormat24);
        java.lang.Object obj27 = numberFormat24.parseObject("1 / 1");
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        java.lang.String str33 = properFractionFormat31.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = properFractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj36 = properFractionFormat31.clone();
        java.lang.Object obj37 = properFractionFormat31.clone();
        java.text.NumberFormat numberFormat38 = properFractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat39 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat24, numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat40 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8, numberFormat13, numberFormat38);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction43 = properFractionFormat41.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1 0 / 1" + "'", str23, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1 0 / 1" + "'", str33, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat10 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat9);
        java.lang.String str12 = properFractionFormat10.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat13 = properFractionFormat10.getWholeFormat();
        java.text.NumberFormat numberFormat14 = properFractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat17 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat16);
        properFractionFormat10.setWholeFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        properFractionFormat23.setWholeFormat(numberFormat25);
        properFractionFormat10.setWholeFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat31 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat30);
        fractionFormat28.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat35 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat34);
        java.lang.String str37 = properFractionFormat35.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat38 = properFractionFormat35.getWholeFormat();
        fractionFormat28.setDenominatorFormat(numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat28.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        java.lang.String str49 = properFractionFormat47.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat50 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat51 = properFractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = properFractionFormat47.getWholeFormat();
        java.text.NumberFormat numberFormat53 = properFractionFormat47.getWholeFormat();
        properFractionFormat44.setDenominatorFormat(numberFormat53);
        properFractionFormat10.setWholeFormat(numberFormat53);
        java.text.NumberFormat numberFormat56 = properFractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat59 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat58);
        java.text.NumberFormat numberFormat62 = properFractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat63 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat62);
        java.lang.Object obj64 = numberFormat62.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat67 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat71 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat72 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat71);
        java.lang.String str74 = properFractionFormat72.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat75 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat76 = properFractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat77 = properFractionFormat72.getWholeFormat();
        java.text.NumberFormat numberFormat78 = properFractionFormat72.getNumeratorFormat();
        properFractionFormat69.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat80 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat56, numberFormat62, numberFormat78);
        properFractionFormat2.setDenominatorFormat(numberFormat62);
        java.lang.Object obj83 = properFractionFormat2.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1 0 / 1" + "'", str12, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 0 / 1" + "'", str37, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1 0 / 1" + "'", str49, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1 0 / 1" + "'", str74, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat8 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        properFractionFormat9.setWholeFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat16 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat15);
        java.lang.String str18 = properFractionFormat16.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat19 = properFractionFormat16.getWholeFormat();
        java.text.NumberFormat numberFormat20 = properFractionFormat16.getDenominatorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat22 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat20);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat23 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat5, numberFormat11, numberFormat20);
        java.lang.Object obj24 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat28 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat27);
        fractionFormat25.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat32 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat31);
        java.lang.String str34 = properFractionFormat32.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat35 = properFractionFormat32.getWholeFormat();
        fractionFormat25.setDenominatorFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat25.parse("-1 0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat41 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat44 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat43);
        java.lang.String str46 = properFractionFormat44.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat47 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat48 = properFractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = properFractionFormat44.getWholeFormat();
        java.text.NumberFormat numberFormat50 = properFractionFormat44.getWholeFormat();
        properFractionFormat41.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat54 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat53);
        java.lang.String str56 = properFractionFormat54.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat57 = properFractionFormat54.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat60 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat61 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        properFractionFormat61.setWholeFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat68 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat67);
        java.lang.String str70 = properFractionFormat68.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat71 = properFractionFormat68.getWholeFormat();
        java.text.NumberFormat numberFormat72 = properFractionFormat68.getDenominatorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat74 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat75 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat57, numberFormat63, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat78 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat77);
        java.lang.String str80 = properFractionFormat78.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat81 = properFractionFormat78.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        java.lang.Object obj84 = numberFormat83.clone();
        java.text.NumberFormat numberFormat85 = null;
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat86 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat81, numberFormat83, numberFormat85);
        properFractionFormat75.setNumeratorFormat(numberFormat81);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat11, numberFormat50, numberFormat81);
        org.apache.commons.math.fraction.Fraction fraction90 = properFractionFormat88.parse("1 / 1");
        org.apache.commons.math.fraction.Fraction fraction92 = properFractionFormat88.parse("-1 / 1");
        java.lang.Object obj94 = properFractionFormat88.parseObject("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1 0 / 1" + "'", str18, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1 0 / 1" + "'", str34, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1 0 / 1" + "'", str46, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1 0 / 1" + "'", str56, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1 0 / 1" + "'", str70, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1 0 / 1" + "'", str80, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat2 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat1);
        java.lang.String str4 = properFractionFormat2.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat5 = properFractionFormat2.getWholeFormat();
        java.text.NumberFormat numberFormat6 = properFractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat9 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat8);
        java.lang.String str11 = properFractionFormat9.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = properFractionFormat9.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.text.NumberFormat numberFormat14 = properFractionFormat9.getDenominatorFormat();
        properFractionFormat2.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat18 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat17);
        java.lang.String str20 = properFractionFormat18.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat21 = properFractionFormat18.getWholeFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat24 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat23);
        java.lang.String str26 = properFractionFormat24.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat27 = properFractionFormat24.getWholeFormat();
        java.text.NumberFormat numberFormat28 = properFractionFormat24.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat28.parseObject("1 / 1");
        properFractionFormat18.setWholeFormat(numberFormat28);
        properFractionFormat2.setWholeFormat(numberFormat28);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat33 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat36 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat35);
        java.lang.String str38 = properFractionFormat36.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj41 = properFractionFormat36.clone();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = properFractionFormat36.formatToCharacterIterator((java.lang.Object) 0.0f);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat47 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat46);
        fractionFormat44.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat51 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat50);
        java.lang.String str53 = properFractionFormat51.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat54 = properFractionFormat51.getWholeFormat();
        fractionFormat44.setDenominatorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.lang.Object obj60 = numberFormat59.clone();
        fractionFormat56.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat65 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat64);
        fractionFormat62.setDenominatorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat68 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat69 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat68);
        java.lang.String str71 = properFractionFormat69.format((java.lang.Object) (-1));
        java.text.NumberFormat numberFormat72 = properFractionFormat69.getWholeFormat();
        fractionFormat62.setDenominatorFormat(numberFormat72);
        java.lang.Object obj75 = numberFormat72.parseObject("1 / 1");
        java.text.NumberFormat numberFormat76 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat79 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat78);
        java.lang.String str81 = properFractionFormat79.format((java.lang.Object) (-1));
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = properFractionFormat79.formatToCharacterIterator((java.lang.Object) 1.0d);
        java.lang.Object obj84 = properFractionFormat79.clone();
        java.lang.Object obj85 = properFractionFormat79.clone();
        java.text.NumberFormat numberFormat86 = properFractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat87 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat72, numberFormat76, numberFormat86);
        org.apache.commons.math.fraction.ProperFractionFormat properFractionFormat88 = new org.apache.commons.math.fraction.ProperFractionFormat(numberFormat54, numberFormat59, numberFormat72);
        properFractionFormat36.setWholeFormat(numberFormat72);
        java.lang.Object obj90 = properFractionFormat36.clone();
        java.text.NumberFormat numberFormat91 = properFractionFormat36.getWholeFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = properFractionFormat36.parse("1 / 1");
        java.lang.StringBuffer stringBuffer94 = null;
        java.text.FieldPosition fieldPosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer96 = properFractionFormat33.format(fraction93, stringBuffer94, fieldPosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 0 / 1" + "'", str4, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1 0 / 1" + "'", str11, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1 0 / 1" + "'", str20, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1 0 / 1" + "'", str26, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1L + "'", obj30, 1L);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1 0 / 1" + "'", str38, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1 0 / 1" + "'", str53, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1 0 / 1" + "'", str71, "-1 0 / 1");
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1L + "'", obj75, 1L);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "-1 0 / 1" + "'", str81, "-1 0 / 1");
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
    }
}

