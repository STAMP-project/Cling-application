import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln(stringBuffer27, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.deleteFirst(strMatcher31);
        boolean boolean34 = strBuilder32.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder32.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln('t');
        java.lang.String str45 = strBuilder42.midString((int) 'r', 30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder13.appendln("true\n0.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder13.append((float) 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder13.insert((int) (short) 1, (long) 15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("true\n10\ntrue\n\n100.0\n", "100.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder50.replaceFirst(strMatcher87, "## true\n\n###\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.append((double) ' ');
        java.util.stream.IntStream intStream16 = strBuilder1.chars();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.deleteAll(strMatcher51);
        char[] charArray53 = null;
        char[] charArray54 = strBuilder52.getChars(charArray53);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "true\nclass java.lang.Object10.0-1.0\nass j#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "true\nclass java.lang.Object10.0-1.0\nass j#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[t, r, u, e, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, a, s, s,  , j, #]");
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendNull();
        int int12 = strBuilder9.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceAll(strMatcher13, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.deleteAll("\n");
        java.lang.StringBuffer stringBuffer25 = strBuilder21.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.append(stringBuffer25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder9, 100, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        boolean boolean31 = strBuilder29.contains(strMatcher30);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(stringBuffer25);
        org.junit.Assert.assertEquals(stringBuffer25.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.replace(4, 214, "trueahi!-1\n22.0true");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int21 = strBuilder9.lastIndexOf(strMatcher19, 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.reverse();
        boolean boolean9 = strBuilder4.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.appendSeparator('a', 'v');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(true);
        java.util.stream.IntStream intStream12 = strBuilder11.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setNullText("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder5.appendln((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(false);
        char[] charArray55 = strBuilder54.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "true\nclass java.lang.Object10.0-1.0\nfalse");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "true\nclass java.lang.Object10.0-1.0\nfalse");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[t, r, u, e, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, f, a, l, s, e]");
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        java.util.stream.IntStream intStream18 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        boolean boolean52 = strBuilder38.equalsIgnoreCase(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder33.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder55.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder21.appendln(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder11.appendln(strBuilder58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder11.asTokenizer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator("\ntrue\n\n", "rue\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll(strMatcher18, "\n-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((long) (byte) 10);
        java.lang.String str34 = strBuilder30.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNewLine();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str51 = strBuilder47.rightString((int) '4');
        java.lang.Object[] objArray52 = new java.lang.Object[] { strBuilder39, wildcardClass44, 10.0d, (-1.0d), str51 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder23.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("true\n10");
        int int59 = strBuilder54.indexOf('r', 39);
        java.io.Writer writer60 = strBuilder54.asWriter();
        boolean boolean61 = strBuilder17.equalsIgnoreCase(strBuilder54);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "true\n10" + "'", str34, "true\n10");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\n" + "'", str51, "\n");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln('a');
        java.lang.Class<?> wildcardClass31 = strBuilder28.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader4 = strBuilder3.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append((java.lang.CharSequence) strBuilder3);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (byte) 10);
        java.lang.String str11 = strBuilder7.rightString(10);
        boolean boolean13 = strBuilder7.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder27, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.appendFixedWidthPadLeft((java.lang.Object) strBuilder14, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        java.lang.StringBuffer stringBuffer40 = strBuilder34.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder7.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln((java.lang.Object) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder41.insert(3, (double) 14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.append(strBuilder41, 66, 70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "true\n10" + "'", str11, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln('a');
        int int5 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendPadding(2, 'v');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.replaceFirst(strMatcher16, "\nfalse\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder27, strBuilder31, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(false);
        boolean boolean45 = strBuilder38.equals(strBuilder44);
        boolean boolean47 = strBuilder38.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        int int55 = strBuilder48.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append((java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.delete((int) '\n', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln("true\n100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder15.append((java.lang.Object) strBuilder58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteCharAt(55);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 55");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        boolean boolean47 = strBuilder45.startsWith("\n");
        int int49 = strBuilder45.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendln(' ');
        boolean boolean53 = strBuilder45.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.deleteFirst("35\n");
        boolean boolean56 = strBuilder40.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.replaceFirst(strMatcher57, "");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray62 = strBuilder59.toCharArray(18, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        java.util.Iterator<java.lang.String> strItor14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendAll(strItor14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNull();
        int int22 = strBuilder19.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.replaceAll(strMatcher23, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteAll("\n");
        java.lang.StringBuffer stringBuffer35 = strBuilder31.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.append(stringBuffer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) strBuilder19, 100, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append("\n1.0 \n", 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder15.appendln(strBuilder34);
        boolean boolean39 = strBuilder34.startsWith("\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.minimizeCapacity();
        int int54 = strBuilder52.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((long) (byte) 10);
        java.lang.String str65 = strBuilder61.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendNewLine();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        java.lang.String str82 = strBuilder78.rightString((int) '4');
        java.lang.Object[] objArray83 = new java.lang.Object[] { strBuilder70, wildcardClass75, 10.0d, (-1.0d), str82 };
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder61.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder55.appendAll(objArray83);
        boolean boolean86 = strBuilder34.equalsIgnoreCase(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder34.appendFixedWidthPadRight(22, (int) (byte) 1, 'f');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "true\n10" + "'", str65, "true\n10");
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n" + "'", str82, "\n");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder55.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", 39);
        java.lang.String str87 = strBuilder84.substring(32, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.deleteCharAt(16);
        char[] charArray90 = strBuilder84.toCharArray();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".0-1.0\n" + "'", str87, ".0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "\ntrue\n\n\nclass jaa.lang.Object10.0-1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "\ntrue\n\n\nclass jaa.lang.Object10.0-1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[\n, t, r, u, e, \n, \n, \n, c, l, a, s, s,  , j, a, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n]");
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) 50);
        java.util.stream.IntStream intStream50 = strBuilder47.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln(stringBuffer27, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.deleteFirst(strMatcher31);
        boolean boolean34 = strBuilder32.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder32.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 0);
        int int42 = strBuilder40.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        java.util.stream.IntStream intStream49 = strBuilder48.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendNewLine();
        boolean boolean83 = strBuilder69.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.append((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader86 = strBuilder85.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.minimizeCapacity();
        char[] charArray90 = strBuilder85.toCharArray();
        char[] charArray91 = strBuilder69.getChars(charArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder63.appendln(charArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder48.append(charArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.append(strBuilder95);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder40.appendSeparator('v', 13);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(reader86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[ ]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.appendSeparator("true\n10############################### true\n\n", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.trim();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendSeparator("ueahi!-1\n#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert((int) (byte) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        boolean boolean45 = strBuilder39.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        java.lang.StringBuffer stringBuffer72 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendln(stringBuffer72);
        java.lang.String str75 = strBuilder73.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("");
        java.lang.String str80 = strBuilder76.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder76.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder32.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder32.appendSeparator('4', 254);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10############################### true\n\n" + "'", str75, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n" + "'", str80, "\n");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.replaceAll('r', '4');
        char[] charArray67 = strBuilder56.toCharArray(11, 170);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.append((double) 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[\000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder46.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        int int30 = strBuilder26.lastIndexOf('\n', 50);
        boolean boolean32 = strBuilder26.contains("4true\n10044444444444444444444444444444444");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer83, "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder46.appendSeparator("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceFirst('t', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.appendSeparator('\n', 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("\n ", "\n1097########");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln("\n1.0\ntrue\n10############################### true\n\n", 29, 254);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding((int) (short) 10, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        boolean boolean33 = strBuilder31.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder24.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append("0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setLength(78);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.insert(14, "t");
        boolean boolean34 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder7.appendSeparator('#', ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((long) (byte) 10);
        java.lang.String str74 = strBuilder70.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        int int78 = strBuilder70.lastIndexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.appendln(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strBuilder62, 1, '#');
        java.lang.String str84 = strBuilder82.substring(6);
        int int85 = strBuilder82.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "true\n10" + "'", str74, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t" + "'", str84, "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 80 + "'", int85 == 80);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder6.deleteFirst("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("\n-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("truetrue\n104\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.replaceFirst("", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.append(strBuilder22);
        char[] charArray25 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendln(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendSeparator("e\n10############################### true\n\n\n1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendFixedWidthPadLeft(45, (int) 'f', 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        boolean boolean19 = strBuilder17.contains(strMatcher18);
        java.util.stream.IntStream intStream20 = strBuilder17.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln('a');
        int int26 = strBuilder22.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.clear();
        boolean boolean28 = strBuilder17.equals((java.lang.Object) strBuilder22);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        java.lang.String str14 = strBuilder8.leftString(39);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.append("\ntrue\n10\n10000");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0\n" + "'", str14, "0.0\n");
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendln(stringBuffer21, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.append((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.append((java.lang.CharSequence) strBuilder17);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendln(true);
        java.util.stream.IntStream intStream88 = strBuilder82.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.appendFixedWidthPadRight((java.lang.Object) strBuilder82, 39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder81.appendSeparator('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder93.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder94.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder94.deleteFirst(strMatcher96);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        int int11 = strBuilder6.indexOf('v', (int) ' ');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setNewLineText("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        char[] charArray30 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append((java.lang.Object) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder4.append((double) 26);
        java.lang.String str37 = strBuilder4.midString((int) (short) 1, 68);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatrue\n10100.0 \n26.0" + "'", str37, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaatrue\n10100.0 \n26.0");
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        int int19 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder38, strBuilder42, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.appendln(stringBuffer56, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.deleteFirst(strMatcher60);
        boolean boolean63 = strBuilder61.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "97########");
        int int74 = strBuilder13.lastIndexOf("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder13.insert(70, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        boolean boolean9 = strBuilder7.startsWith("ass j");
        boolean boolean11 = strBuilder7.endsWith("###### true\n\n###");
        int int13 = strBuilder7.indexOf("rue\n10############################### true\n\n\n1.0\n\n");
        boolean boolean15 = strBuilder7.contains("rue\n10############################### true\n\n\n1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.appendln((float) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            char char19 = strBuilder17.charAt(18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln(stringBuffer12, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert((int) (short) 0, (double) 0);
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.appendln((java.lang.Object) charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder32, strBuilder36, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder25.append(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator(' ');
        boolean boolean64 = strBuilder22.equals(strBuilder63);
        int int66 = strBuilder22.lastIndexOf("\n\neurt ###############################01\neurt");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        int int32 = strBuilder31.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteAll('e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 78 + "'", int32 == 78);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        int int56 = strBuilder46.lastIndexOf('t');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 39 + "'", int56 == 39);
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int7 = strBuilder0.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(stringBuffer14, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.reverse();
        int int19 = strBuilder17.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln(false);
        boolean boolean23 = strBuilder17.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        char[] charArray61 = strBuilder56.toCharArray();
        char[] charArray62 = strBuilder40.getChars(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder34.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder34.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder34.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder17.append(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.append(false);
        char[] charArray83 = strBuilder82.toCharArray();
        char[] charArray84 = strBuilder70.getChars(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder69.append(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder0.appendln(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.setNewLineText("hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendNewLine();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln("");
        java.lang.String str75 = strBuilder71.rightString((int) '4');
        java.lang.Object[] objArray76 = new java.lang.Object[] { strBuilder63, wildcardClass68, 10.0d, (-1.0d), str75 };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder54.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder44.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder35.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder15.appendAll(objArray76);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\n" + "'", str75, "\n");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.replaceAll(strMatcher10, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.setCharAt(100, 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 10.0d, 39, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendln('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.reverse();
        boolean boolean6 = strBuilder5.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append((float) (-1L));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder2.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("ass j", "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.ensureCapacity(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.setNewLineText("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.insert((int) (short) 0, 254);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder8.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        int int55 = strBuilder48.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) strBuilder48, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln(stringBuffer69, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendln(stringBuffer73);
        boolean boolean75 = strBuilder64.equals((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.replaceAll(strMatcher76, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder8.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder8.ensureCapacity(22);
        int int83 = strBuilder8.lastIndexOf("0");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder8.replaceFirst(strMatcher84, " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strMatcher84, 200, '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 36 + "'", int83 == 36);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        int int20 = strBuilder13.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.String str27 = strBuilder26.getNewLineText();
        boolean boolean28 = strBuilder13.equals(strBuilder26);
        java.lang.String str29 = strBuilder26.toString();
        java.lang.StringBuffer stringBuffer30 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, (int) ' ', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(stringBuffer38, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder46.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("\n1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int19 = strBuilder9.indexOf(strMatcher18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("\n\n", "\n\n100 04-1.0 truea");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.replaceAll("100.0\n", "rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        int int59 = strBuilder56.lastIndexOf('a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder20.insert((int) '\000', (java.lang.Object) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder20.replaceAll(strMatcher61, "true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        java.util.stream.IntStream intStream70 = strBuilder64.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        int int82 = strBuilder75.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader87 = strBuilder86.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.append((java.lang.CharSequence) strBuilder86);
        java.lang.String str89 = strBuilder88.getNewLineText();
        boolean boolean90 = strBuilder75.equals(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder74.append(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder74.appendln(false);
        char[] charArray94 = null;
        char[] charArray95 = strBuilder93.getChars(charArray94);
        char[] charArray96 = strBuilder20.getChars(charArray95);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "1\ntrue\n\n100.04-1.0 true\n\n################################################################################false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "1\ntrue\n\n100.04-1.0 true\n\n################################################################################false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[1, \n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e, \n, \n, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "1\ntrue\n\n100.04-1.0 true\n\n################################################################################false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "1\ntrue\n\n100.04-1.0 true\n\n################################################################################false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[1, \n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e, \n, \n, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, f, a, l, s, e, \n]");
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        boolean boolean26 = strBuilder12.equalsIgnoreCase(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder29.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        boolean boolean52 = strBuilder38.equalsIgnoreCase(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        char[] charArray59 = strBuilder54.toCharArray();
        char[] charArray60 = strBuilder38.getChars(charArray59);
        char[] charArray61 = strBuilder29.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.append(charArray59);
        char[] charArray63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.append(charArray63, (-1), 32);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        int int69 = strBuilder62.lastIndexOf(strMatcher67, 16);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder55.replaceAll("true\n10############################### true\n\n", "\n\nclass java.lang.Object10.0-1.0\n");
        int int85 = strBuilder55.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder55.appendFixedWidthPadLeft(106, 30, '3');
        java.lang.String str90 = strBuilder89.getNewLineText();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 6 + "'", int85 == 6);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        java.lang.Object[] objArray28 = new java.lang.Object[] { strBuilder18, strBuilder22, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll(objArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendln(stringBuffer36, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.deleteFirst(strMatcher40);
        boolean boolean43 = strBuilder41.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder47.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        int int58 = strBuilder51.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.String str72 = strBuilder66.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder60.appendln(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) strBuilder60, 5, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder50.appendln((long) 9);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n" + "'", str72, "\n");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.replace(strMatcher53, "", (int) (byte) 10, 76, 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert(41, (double) 170);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(0, charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.insert((int) (short) 10, charArray22, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        int int48 = strBuilder41.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendNewLine();
        java.io.Writer writer53 = strBuilder50.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.append(32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.appendln(strBuilder58, 11, 68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator("true\n10", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendPadding((int) ' ', '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        int int46 = strBuilder44.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator("\n10", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append("4true\n1004");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder2.append(strBuilder56, 0, 17);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder0.asTokenizer();
        int int8 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        char[] charArray15 = strBuilder14.toCharArray();
        char[] charArray16 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.deleteAll('f');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder5.lastIndexOf(strMatcher13);
        int int15 = strBuilder5.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceAll("", "tr");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.deleteCharAt(56);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 56");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendln(stringBuffer17, (int) (byte) -1, 10);
        int int23 = strBuilder20.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator('a', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.deleteAll(strMatcher40);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder7.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll("35\n", ".0-1.0\n");
        int int13 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendSeparator('\n', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst('\n', '\000');
        boolean boolean31 = strBuilder29.contains('a');
        char[] charArray32 = strBuilder29.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "\000\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "\000\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[\000, \n,  ]");
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strBuilder57, 17, 'r');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.insert(13, (double) 106);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight(9, 36, '4');
        char char53 = strBuilder47.charAt((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.append("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        java.lang.String str57 = strBuilder47.leftString(2);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + char53 + "' != '" + '4' + "'", char53 == '4');
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tr" + "'", str57, "tr");
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        char[] charArray13 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        int int21 = strBuilder14.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(false);
        int int38 = strBuilder37.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((java.lang.Object) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        java.lang.String str54 = strBuilder50.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln("");
        java.lang.String str71 = strBuilder67.rightString((int) '4');
        java.lang.Object[] objArray72 = new java.lang.Object[] { strBuilder59, wildcardClass64, 10.0d, (-1.0d), str71 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder50.appendAll(objArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 10);
        int int83 = strBuilder81.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.append((java.lang.CharSequence) strBuilder81);
        char[] charArray88 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder29.append(charArray88, (int) (byte) 10, 36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder6.append(charArray88, 15, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "true\n10" + "'", str54, "true\n10");
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\n" + "'", str71, "\n");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        java.lang.String str36 = strBuilder32.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("");
        java.lang.String str53 = strBuilder49.rightString((int) '4');
        java.lang.Object[] objArray54 = new java.lang.Object[] { strBuilder41, wildcardClass46, 10.0d, (-1.0d), str53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder13.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteAll("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("4");
        java.lang.String str63 = strBuilder62.getNewLineText();
        boolean boolean64 = strBuilder62.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "true\n10" + "'", str36, "true\n10");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendln((float) 78);
        java.lang.CharSequence charSequence32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder10.append(charSequence32, (int) (byte) 0, (int) 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('\n', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        boolean boolean39 = strBuilder36.contains(strMatcher38);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceFirst('3', '\n');
        java.lang.Object[] objArray20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendWithSeparators(objArray20, " \n\nrue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(strBuilder30, (int) (byte) -1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln(stringBuffer42, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendln(stringBuffer46);
        boolean boolean48 = strBuilder37.equals((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        java.util.stream.IntStream intStream55 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder59.append(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        boolean boolean82 = strBuilder80.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.replaceAll(strMatcher83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder41.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder33.appendln((java.lang.Object) strBuilder91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder33.replaceAll("true\n0.0\n\n", "435\n0.0\ntrue\n10\n100");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln('a');
        java.io.Reader reader4 = strBuilder3.asReader();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.insert(17, (double) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        java.io.Writer writer37 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.insert(113, (java.lang.Object) strBuilder42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(' ', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.setNewLineText("435\n0.0\ntrue\n10\n100");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.appendln(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        int int51 = strBuilder46.indexOf("\n1.0\n", 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendln(false);
        int int56 = strBuilder53.indexOf("\n\n\n", 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln("");
        boolean boolean61 = strBuilder59.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder53.append((java.lang.CharSequence) "\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder91.appendNewLine();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.replace(strMatcher93, "\ntrue\n10\n1000", 0, 1, 9);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        int int33 = strBuilder28.indexOf("4-1.0 true", (int) (byte) 10);
        int int35 = strBuilder28.lastIndexOf('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(13, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll(strMatcher50);
        boolean boolean53 = strBuilder49.contains("35\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) -1);
        char[] charArray49 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.replaceAll("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('3', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendSeparator("1444444444444444444444", "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "true\n10ass j\n-1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "true\n10ass j\n-1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[t, r, u, e, \n, 1, 0, a, s, s,  , j, \n, -, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator(' ', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.ensureCapacity(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll("##################################################################false\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(56);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (-1));
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst(strMatcher15);
        java.lang.String str17 = strBuilder16.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\n-1.0" + "'", str17, "\n-1.0");
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.String str47 = strBuilder41.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder33.appendln(strBuilder55, (int) (short) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        java.util.stream.IntStream intStream68 = strBuilder62.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        int int80 = strBuilder73.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append((java.lang.CharSequence) strBuilder84);
        java.lang.String str87 = strBuilder86.getNewLineText();
        boolean boolean88 = strBuilder73.equals(strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder72.append(strBuilder86);
        java.lang.StringBuffer stringBuffer90 = strBuilder72.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.append(stringBuffer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.append(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(intStream68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "true\n52##################################################################################################");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        java.util.stream.IntStream intStream66 = strBuilder64.chars();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.replaceFirst("44444444444444444444444444444444", "############");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append((double) 10L);
        int int63 = strBuilder57.lastIndexOf("true\n10############################### true\n\n###");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder15.appendln(strBuilder34);
        boolean boolean39 = strBuilder15.contains('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.delete((int) '\000', 36);
        java.io.Writer writer44 = strBuilder40.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder44);
        char[] charArray51 = strBuilder35.toCharArray(2, 50);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "classajava.lang.Object10.0-1.0\ntrue\n10\n\n44444444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "classajava.lang.Object10.0-1.0\ntrue\n10\n\n44444444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[c, l, a, s, s, a, j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, t, r, u, e, \n, 1, 0, \n, \n, 4, 4, 4, 4, 4, 4, 4, 4]");
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('4', ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.insert(5, (double) 106);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendPadding(5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln((float) 3);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append(20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadLeft((int) (short) 1, (int) '4', '4');
        char[] charArray21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.append(charArray21, 13, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('a', (int) '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(254);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append('#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.replaceAll("\n ", "\n0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        java.lang.String str16 = strBuilder13.substring(0, 73);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n0.0ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0" + "'", str16, "\n0.0ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((-1L));
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteFirst(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setNullText("ass j");
        java.util.stream.IntStream intStream14 = strBuilder11.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll('4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder8.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replace(strMatcher42, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        java.lang.String str76 = strBuilder73.toString();
        java.lang.StringBuffer stringBuffer77 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder53.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder39.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder5.appendln(stringBuffer77);
        java.lang.String str81 = strBuilder80.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.deleteCharAt(29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 29");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln(stringBuffer40, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder18.appendFixedWidthPadRight((java.lang.Object) strBuilder39, (-1), ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder57, strBuilder61, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder50.append(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder47.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder85.appendNull();
        int int94 = strBuilder85.lastIndexOf("4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int33 = strBuilder28.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendFixedWidthPadRight(78, (int) (short) 0, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendPadding(3, '#');
        java.lang.String str59 = strBuilder56.substring((int) ' ', 50);
        char[] charArray60 = strBuilder56.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder37.appendln(charArray60, 322, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 68 + "'", int33 == 68);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "###### true\n\n###" + "'", str59, "###### true\n\n###");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "true\n10############################### true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "true\n10############################### true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[t, r, u, e, \n, 1, 0, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        boolean boolean10 = strBuilder2.contains('4');
        int int11 = strBuilder2.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.replaceAll("4-1.0 true", "4true\n1004");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendAll(objArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder10.replaceFirst(strMatcher50, "rue\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder9.appendln(strBuilder10, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.reverse();
        int int57 = strBuilder55.length();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder8.lastIndexOf(strMatcher13);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll("true\n0.0\n\n", "\n\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('v');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(false);
        char[] charArray10 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(0, charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        java.lang.String str21 = strBuilder17.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str38 = strBuilder34.rightString((int) '4');
        java.lang.Object[] objArray39 = new java.lang.Object[] { strBuilder26, wildcardClass31, 10.0d, (-1.0d), str38 };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.appendAll(objArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendPadding((int) (byte) 1, '#');
        char[] charArray47 = strBuilder40.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendNewLine();
        boolean boolean78 = strBuilder64.equalsIgnoreCase(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder59.append((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader81 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.minimizeCapacity();
        char[] charArray85 = strBuilder80.toCharArray();
        char[] charArray86 = strBuilder64.getChars(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder58.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder11.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder11.appendln('3');
        int int94 = strBuilder91.indexOf("\nfalse\ntrue10\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ass ja", 75);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "true\n10" + "'", str21, "true\n10");
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n" + "'", str38, "\n");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#]");
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.append("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.deleteAll(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding(200, ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendFixedWidthPadRight(210, 5, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        int int90 = strBuilder84.lastIndexOf(strMatcher89);
        boolean boolean92 = strBuilder84.contains(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        boolean boolean14 = strBuilder12.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder7.setNewLineText("rue\n10############################### true\n\n\n1.0\n\n");
        boolean boolean26 = strBuilder7.contains('e');
        int int28 = strBuilder7.lastIndexOf('\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.io.Writer writer19 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        char[] charArray60 = strBuilder55.toCharArray();
        char[] charArray61 = strBuilder39.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder25.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder7.insert(1, (java.lang.Object) charArray61);
        java.lang.StringBuffer stringBuffer65 = strBuilder64.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        char[] charArray7 = strBuilder4.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.deleteAll('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.append(false);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , \n, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((double) 100L);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder7.append("ass j");
        boolean boolean39 = strBuilder37.endsWith("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendln(stringBuffer44, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.reverse();
        int int49 = strBuilder47.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.replaceAll(strMatcher50, "\n");
        boolean boolean53 = strBuilder37.equals(strBuilder52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        int int55 = strBuilder37.indexOf(strMatcher54);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        java.io.Writer writer42 = strBuilder39.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceFirst(strMatcher43, "\n1097########");
        java.util.stream.IntStream intStream46 = strBuilder45.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder5.indexOf(strMatcher13);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        int int28 = strBuilder21.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.String str35 = strBuilder34.getNewLineText();
        boolean boolean36 = strBuilder21.equals(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        boolean boolean43 = strBuilder41.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder34.appendln(strBuilder46);
        boolean boolean50 = strBuilder9.equals((java.lang.Object) strBuilder34);
        char[] charArray51 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder9.appendln((float) 5);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray56 = strBuilder53.toCharArray((int) '4', (int) 'r');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n]");
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.io.Writer writer30 = strBuilder28.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        int int13 = strBuilder5.indexOf(' ', 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.appendSeparator('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((float) (short) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNewLineText("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((int) 'a', 106, '#');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.appendln("e\n10############################### true\n\n\n1.0\n\n", 47, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        int int54 = strBuilder52.lastIndexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append('3');
        char[] charArray57 = strBuilder56.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "435\ntrue\n3");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "435\ntrue\n3");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, 3, 5, \n, t, r, u, e, \n, 3]");
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append('f');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.insert(34, (double) 42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.replaceAll(strMatcher10, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.insert((int) '4', 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(stringBuffer14, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.reverse();
        int int19 = strBuilder17.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll(strMatcher20, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        java.util.stream.IntStream intStream33 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) (byte) 100);
        java.lang.Class<?> wildcardClass42 = strBuilder39.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        boolean boolean28 = strBuilder23.contains(' ');
        boolean boolean29 = strBuilder18.equals((java.lang.Object) boolean28);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        int int87 = strBuilder84.lastIndexOf('\n', (int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 11 + "'", int87 == 11);
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder8.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer45 = strBuilder44.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.append(strBuilder44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        int int49 = strBuilder46.lastIndexOf(strMatcher47, 13);
        java.lang.String str50 = strBuilder46.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder8.append((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((long) (byte) 10);
        java.lang.String str62 = strBuilder58.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendNewLine();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln("");
        java.lang.String str79 = strBuilder75.rightString((int) '4');
        java.lang.Object[] objArray80 = new java.lang.Object[] { strBuilder67, wildcardClass72, 10.0d, (-1.0d), str79 };
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder58.appendAll(objArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader87 = strBuilder86.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.append((java.lang.CharSequence) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.appendln(true);
        java.lang.StringBuffer stringBuffer91 = strBuilder85.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.append(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder48.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder48.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder94.replaceFirst(" \nclass java.lang.Object10.0-1.0\n97.0", "aaaaaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder14.append((java.lang.CharSequence) "aaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "true\n10" + "'", str62, "true\n10");
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\n" + "'", str79, "\n");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(stringBuffer91);
        org.junit.Assert.assertEquals(stringBuffer91.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        int int54 = strBuilder52.lastIndexOf('#');
        int int57 = strBuilder52.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        char[] charArray65 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(false);
        java.lang.Object obj78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(obj78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) strBuilder80, (int) (short) 1, '4');
        boolean boolean85 = strBuilder44.contains('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder44.insert(3, (long) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteFirst(".0-1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        boolean boolean31 = strBuilder17.equalsIgnoreCase(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder7.appendln((float) 40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((long) 15);
        java.lang.String str45 = strBuilder40.midString(113, 68);
        boolean boolean47 = strBuilder40.endsWith("\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        int int7 = strBuilder0.lastIndexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append("\n\nclassajava.");
        java.lang.Object obj10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendFixedWidthPadLeft(obj10, 322, '#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((-1), 'a');
        java.lang.String str34 = strBuilder32.leftString(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendSeparator("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\ntrue\n\n" + "'", str34, "\ntrue\n\n");
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteFirst('\n');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strBuilder9.substring(80, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder55.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", 39);
        java.lang.String str87 = strBuilder84.substring(32, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.deleteCharAt(16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder84.replace(29, (int) (byte) 1, "\n\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".0-1.0\n" + "'", str87, ".0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer47 = strBuilder43.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceFirst(strMatcher48, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendSeparator("############################ true\n\n\n1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        boolean boolean13 = strBuilder7.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        boolean boolean44 = strBuilder30.equalsIgnoreCase(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder25.append((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        char[] charArray51 = strBuilder46.toCharArray();
        char[] charArray52 = strBuilder30.getChars(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder24.appendln(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder24.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder24.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder7.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteAll("\ntrue\n\n                                                              true\n6");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ ]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((long) 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        int int47 = strBuilder44.lastIndexOf(strMatcher45, 24);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer60 = strBuilder59.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append((java.lang.Object) writer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        boolean boolean81 = strBuilder67.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.append((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder62.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strBuilder84.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.append(strBuilder84);
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder44.appendln(charArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = null;
        int int93 = strBuilder90.lastIndexOf(strMatcher91, 4);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[\n, o, r, g, ., a, p, a, c, h, e, ., c, o, m, m, o, n, s, ., l, a, n, g, 3, ., t, e, x, t, ., S, t, r, B, u, i, l, d, e, r, $, S, t, r, B, u, i, l, d, e, r, W, r, i, t, e, r, @, 3, 1, b, 9, 0, 9, e, a, 4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln("\n\nclassajava.");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.replace(9, 76, "rue\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder6.indexOf(strMatcher11);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str31 = strBuilder30.getNewLineText();
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder26, strBuilder30, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder19.append(strBuilder47);
        boolean boolean50 = strBuilder19.contains("hi!");
        char[] charArray51 = strBuilder19.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.insert((int) '#', charArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\ntrue\n\n100.04-1.0 true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\ntrue\n\n100.04-1.0 true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e]");
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        int int21 = strBuilder3.lastIndexOf('r', (int) '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder3.appendFixedWidthPadRight(22, 2, 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(false);
        java.lang.Object obj17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(obj17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll(" ja");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) " ja", (int) (byte) 0, '3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) 'a', 10, '#');
        boolean boolean52 = strBuilder50.startsWith("hi!");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray55 = strBuilder50.toCharArray(214, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        int int17 = strBuilder9.lastIndexOf("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.replaceAll("\n1.0 \n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNewLine();
        int int22 = strBuilder20.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        int int38 = strBuilder36.lastIndexOf('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 10);
        java.lang.String str48 = strBuilder44.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln(stringBuffer55, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        boolean boolean76 = strBuilder59.equals(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder59.append((long) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder36.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder36.replaceAll("\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "trueahi!-1\n22.03\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "true\n10" + "'", str48, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        int int18 = strBuilder0.lastIndexOf('r', (int) 'e');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.append('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder13.setNullText("## true\n\n###\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 10);
        int int66 = strBuilder64.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) 2, 2, '4');
        int int87 = strBuilder85.lastIndexOf('a');
        boolean boolean89 = strBuilder85.startsWith("\n\neurt ###############################01\neurt");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadRight(100, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('#', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceFirst("97########", "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendPadding(322, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.appendPadding(6, ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher36);
        int int38 = strBuilder32.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 137 + "'", int38 == 137);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(1, 170, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNull();
        java.util.stream.IntStream intStream39 = strBuilder35.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.deleteAll('a');
        java.util.stream.IntStream intStream42 = strBuilder35.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder44.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        int int62 = strBuilder55.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.String str69 = strBuilder68.getNewLineText();
        boolean boolean70 = strBuilder55.equals(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.append(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        boolean boolean77 = strBuilder75.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder68.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteFirst(strMatcher84);
        java.lang.StringBuffer stringBuffer86 = strBuilder85.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder35.appendln(stringBuffer86);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "\n\n");
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        int int25 = strBuilder23.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        int int27 = strBuilder23.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.deleteAll("");
        java.lang.String str40 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendln("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder44.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln((java.lang.Object) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        int int58 = strBuilder52.indexOf(strMatcher56, (int) '4');
        java.util.stream.IntStream intStream59 = strBuilder52.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.append((double) (short) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.append(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder23.appendln(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder14.append(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("\ntrue\n10\n10000");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "\n10.0");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendln("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setLength(36);
        int int63 = strBuilder60.lastIndexOf('3', (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        int int72 = strBuilder65.lastIndexOf("");
        char[] charArray73 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.insert(0, charArray73);
        java.lang.StringBuffer stringBuffer75 = strBuilder74.toStringBuffer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\ntrue\n0.0\n100.0false\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(254);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int16 = strBuilder14.indexOf(strMatcher15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("ass j", (int) (byte) 100);
        boolean boolean17 = strBuilder12.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("true\n10100.0 \n");
        char[] charArray12 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadLeft(45, (int) (short) -1, 'a');
        int int20 = strBuilder17.lastIndexOf("\nt4ue\n10\n4", 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.replaceAll("e\n10", "true\n100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder22.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder22.deleteAll('t');
        java.lang.String str57 = strBuilder22.midString((int) '4', 55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        int int59 = strBuilder22.indexOf(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.ensureCapacity((int) (byte) -1);
        boolean boolean8 = strBuilder4.startsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.appendSeparator('\n', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        int int19 = strBuilder12.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.String str26 = strBuilder25.getNewLineText();
        boolean boolean27 = strBuilder12.equals(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.replaceAll("444444444", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.CharSequence) "444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('g', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        java.lang.String str42 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendFixedWidthPadRight(36, 13, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder33.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.String str56 = strBuilder50.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((long) (short) 1);
        boolean boolean65 = strBuilder61.contains("lse41\na\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder49.appendln(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n" + "'", str56, "\n");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.replaceAll(strMatcher8, "t");
        java.io.Writer writer11 = strBuilder1.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteAll("\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.reverse();
        int int16 = strBuilder14.lastIndexOf("true\n0.0\n#true\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNullText("\n\ntrue\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int17 = strBuilder14.indexOf(strMatcher15, (int) 'g');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(false);
        boolean boolean27 = strBuilder20.equals(strBuilder26);
        int int28 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.append(214);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer27 = strBuilder26.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.append((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.clear();
        java.lang.Class<?> wildcardClass33 = strBuilder9.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        java.io.Writer writer49 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (float) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        int int61 = strBuilder58.lastIndexOf(strMatcher59, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendSeparator("\n1.0\ntrue\n10############################### true\n\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.append((java.lang.CharSequence) strBuilder64);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        int int13 = strBuilder5.indexOf(' ', 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.appendFixedWidthPadRight(4, (-1), '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.deleteAll(strMatcher18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.append((long) 7);
        java.lang.Class<?> wildcardClass11 = strBuilder1.getClass();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        java.lang.String str71 = strBuilder70.getNewLineText();
        boolean boolean72 = strBuilder57.equals(strBuilder70);
        boolean boolean73 = strBuilder50.equals(strBuilder70);
        java.lang.String str74 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder49.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer75, "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.appendln(stringBuffer53, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replace(strMatcher60, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int67 = strBuilder56.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendAll(strItor72);
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.append(charArray74, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader83 = strBuilder82.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((java.lang.CharSequence) strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.trim();
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.insert(0, charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder56.append(charArray89);
        char[] charArray92 = strBuilder43.getChars(charArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        int int94 = strBuilder43.lastIndexOf(strMatcher93);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder43.setLength(1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e, \n]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        boolean boolean14 = strBuilder12.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder7.setNewLineText("rue\n10############################### true\n\n\n1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(24, 'a');
        java.lang.String str14 = strBuilder8.substring(20, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.append((float) '\n');
        int int18 = strBuilder8.lastIndexOf("\nfalse\ntrue10\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ass ja");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "aaaaaaaaaaaaaaaaa" + "'", str14, "aaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 322);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.replaceFirst("", "false");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(23, (float) 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((double) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.append(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append("\n4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        boolean boolean26 = strBuilder12.equalsIgnoreCase(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder29.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        boolean boolean52 = strBuilder38.equalsIgnoreCase(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        char[] charArray59 = strBuilder54.toCharArray();
        char[] charArray60 = strBuilder38.getChars(charArray59);
        char[] charArray61 = strBuilder29.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.append(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendSeparator("true\n10############################### true\n\n###", (int) (byte) 0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str61 = strBuilder60.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendNewLine();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln("");
        java.lang.String str88 = strBuilder84.rightString((int) '4');
        java.lang.Object[] objArray89 = new java.lang.Object[] { strBuilder76, wildcardClass81, 10.0d, (-1.0d), str88 };
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.appendAll(objArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.appendAll(objArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder53.appendAll(objArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder53.replaceFirst(strMatcher93, "rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder52.appendln(strBuilder95);
        java.lang.String str97 = strBuilder52.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "\n" + "'", str88, "\n");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNewLine();
        boolean boolean12 = strBuilder11.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int7 = strBuilder5.indexOf('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strBuilder5.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.ensureCapacity(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        char[] charArray61 = strBuilder56.toCharArray();
        char[] charArray62 = strBuilder40.getChars(charArray61);
        char[] charArray63 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder31.appendln(charArray63);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ ]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(40);
        java.io.Writer writer33 = strBuilder30.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.insert((int) (byte) 1, "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.replaceAll("true\n10\ntrue\n\n100.04-1.0 true\n\n97########", " \nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n");
        char[] charArray19 = strBuilder16.toCharArray(7, 50);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "100.0\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "100.0\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[1, 0, 0, ., 0, \n, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n]");
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendPadding(4, 'r');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll(strMatcher50, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.replaceFirst('a', 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.append(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendSeparator('#', (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        int int25 = strBuilder4.indexOf(strMatcher24);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        java.lang.String str15 = strBuilder3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        java.lang.Class<?> wildcardClass79 = strBuilder74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder3.append((java.lang.Object) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append((double) 10L);
        int int64 = strBuilder61.lastIndexOf('\n', 30);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.deleteAll(strMatcher65);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        int int75 = strBuilder73.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendSeparator("", 170);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 66 + "'", int75 == 66);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.StringBuffer stringBuffer12 = strBuilder11.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(stringBuffer12);
        org.junit.Assert.assertEquals(stringBuffer12.toString(), "\n \n");
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        boolean boolean14 = strBuilder8.contains(strMatcher13);
        int int17 = strBuilder8.indexOf("  \n", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder8.appendFixedWidthPadRight(254, 0, 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        boolean boolean25 = strBuilder23.startsWith("\n");
        int int27 = strBuilder23.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(' ');
        boolean boolean31 = strBuilder23.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append(true);
        boolean boolean36 = strBuilder13.equalsIgnoreCase(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder13.setNullText("24tass j\nrue\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        int int38 = strBuilder33.indexOf('r', 39);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendSeparator("###3##########################t100.0", "\n1097########");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        int int47 = strBuilder26.lastIndexOf('\000', 52);
        java.lang.Object obj48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder26.appendFixedWidthPadRight(obj48, (int) (short) 100, '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        char char13 = strBuilder11.charAt(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln("");
        java.lang.String str22 = strBuilder21.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((long) (byte) 10);
        java.lang.String str32 = strBuilder28.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNewLine();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str49 = strBuilder45.rightString((int) '4');
        java.lang.Object[] objArray50 = new java.lang.Object[] { strBuilder37, wildcardClass42, 10.0d, (-1.0d), str49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder28.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder21.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder14.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder11.appendWithSeparators(objArray50, "4");
        boolean boolean57 = strBuilder55.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '\n' + "'", char13 == '\n');
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10" + "'", str32, "true\n10");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n" + "'", str49, "\n");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.append((double) 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append((long) 53);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((long) (byte) 10);
        int int56 = strBuilder54.lastIndexOf('#');
        int int59 = strBuilder54.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendNewLine();
        java.lang.String str63 = strBuilder54.substring(7, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.setNullText("true\n10############################### true\n\n###");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.replaceFirst(strMatcher66, "############################ true\n\n\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder54.deleteFirst('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder44.append((java.lang.Object) 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n" + "'", str63, "\n");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.insert((int) (short) 0, 34);
        int int48 = strBuilder36.indexOf(' ', 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.deleteCharAt(5);
        java.util.stream.IntStream intStream51 = strBuilder36.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.setLength(78);
        int int57 = strBuilder43.indexOf("\n", 214);
        java.io.Reader reader58 = strBuilder43.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(reader58);
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceAll(strMatcher7, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        int int12 = strBuilder3.indexOf("true\n10\ntrue\n\n100.04-1.0 true\n\n97########", 80);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln('#');
        java.lang.StringBuffer stringBuffer60 = strBuilder59.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "###############################\n01\neurt\n0.1-0.01tcejbO.gnal.avaj ssalc\n01\neurt#\n");
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        java.lang.Object[] objArray28 = new java.lang.Object[] { strBuilder18, strBuilder22, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll(objArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendln(stringBuffer36, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.deleteFirst(strMatcher40);
        boolean boolean43 = strBuilder41.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder47.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.setNewLineText("true\n0.0\n#true\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        int int75 = strBuilder67.lastIndexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.setNullText("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln(strBuilder77);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray81 = strBuilder61.toCharArray((int) (byte) 100, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder13.appendln("true\n0.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst("true");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceAll('v', 'e');
        char[] charArray7 = null;
        char[] charArray8 = strBuilder3.getChars(charArray7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int11 = strBuilder8.lastIndexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.insert(0, (double) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        java.io.Writer writer22 = strBuilder19.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str27 = strBuilder25.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendSeparator('4');
        java.lang.StringBuffer stringBuffer32 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.append(stringBuffer32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "\n1.0\n4");
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendWithSeparators(objArray44, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.minimizeCapacity();
        int int51 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendPadding(66, 't');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 53 + "'", int51 == 53);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator("ass j", (int) (byte) 100);
        boolean boolean46 = strBuilder11.equals((java.lang.Object) "ass j");
        int int49 = strBuilder11.lastIndexOf('g', 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendSeparator('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.setNullText("true\n10100.0 \n");
        char[] charArray64 = strBuilder63.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder11.appendln(charArray64, (int) (byte) -1, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[t, r, u, e, \n, 1, 0]");
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        java.io.Reader reader12 = strBuilder9.asReader();
        boolean boolean14 = strBuilder9.contains("\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        boolean boolean50 = strBuilder48.contains("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append((long) 4);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher53, "true\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.ensureCapacity(10);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        boolean boolean32 = strBuilder30.contains(strMatcher31);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadLeft(22, 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.ensureCapacity(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 10);
        java.lang.String str27 = strBuilder23.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendNewLine();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str44 = strBuilder40.rightString((int) '4');
        java.lang.Object[] objArray45 = new java.lang.Object[] { strBuilder32, wildcardClass37, 10.0d, (-1.0d), str44 };
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder23.appendAll(objArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(true);
        java.lang.String str50 = strBuilder49.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher54, "hi!");
        boolean boolean57 = strBuilder17.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder17.append('r');
        boolean boolean61 = strBuilder17.startsWith("true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "true\n10" + "'", str27, "true\n10");
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\n" + "'", str44, "\n");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str50, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        java.lang.String str10 = strBuilder5.leftString(0);
        int int13 = strBuilder5.indexOf(' ', 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        boolean boolean25 = strBuilder19.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder39, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.lang.StringBuffer stringBuffer52 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendln(stringBuffer52);
        java.lang.String str55 = strBuilder53.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        java.lang.String str60 = strBuilder56.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder69, 200, 'e');
        java.lang.Class<?> wildcardClass73 = strBuilder72.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10############################### true\n\n" + "'", str55, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n" + "'", str60, "\n");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((long) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((int) (byte) 1);
        boolean boolean13 = strBuilder11.startsWith("0.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int16 = strBuilder11.lastIndexOf(strMatcher14, (int) 'g');
        int int18 = strBuilder11.lastIndexOf('#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        boolean boolean13 = strBuilder7.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append("\ntrue\n\n100.04-1.0 true", (int) 'f', 73);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        char[] charArray28 = strBuilder27.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "true\n1050a\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "true\n1050a\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[t, r, u, e, \n, 1, 0, 5, 0, a, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceAll("\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "\n");
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("true\n10############################### true\n\n", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.setNullText("true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((double) (-1L));
        int int53 = strBuilder49.lastIndexOf("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 97 + "'", int53 == 97);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("");
        java.lang.String str20 = strBuilder16.rightString((int) '4');
        java.lang.String str22 = strBuilder16.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder16.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 10);
        java.lang.String str48 = strBuilder44.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendPadding(3, '#');
        boolean boolean58 = strBuilder38.equals((java.lang.Object) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strBuilder38, 11, 'g');
        char[] charArray62 = strBuilder61.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder15.append(charArray62, (-1), 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 8");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n" + "'", str20, "\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n" + "'", str22, "\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "true\n10" + "'", str48, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "\ntrue\n10\n       true\n100.0g");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "\ntrue\n10\n       true\n100.0g");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[\n, t, r, u, e, \n, 1, 0, \n,  ,  ,  ,  ,  ,  ,  , t, r, u, e, \n, 1, 0, 0, ., 0, g]");
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        java.lang.String str54 = strBuilder13.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder13.appendSeparator('a');
        java.lang.Class<?> wildcardClass57 = strBuilder56.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((int) (short) 10, '#');
        java.lang.Object[] objArray39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendWithSeparators(objArray39, "true\n\n100 04-1.0 true0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        boolean boolean33 = strBuilder31.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder24.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.replaceFirst("1444444444444444444444", "ass j");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder10.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.ensureCapacity(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(false);
        char[] charArray53 = strBuilder52.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder10.appendln(charArray53, (int) 't', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 8");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[f, a, l, s, e]");
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer33 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        int int41 = strBuilder34.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendSeparator("");
        char[] charArray51 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendln(charArray51);
        java.io.Reader reader53 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append((java.lang.CharSequence) strBuilder43, (int) (short) 1, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendSeparator("0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "#");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        int int15 = strBuilder10.lastIndexOf("\n1.0\ntrue\n10############################### true\n\n");
        int int18 = strBuilder10.lastIndexOf('\000', 42);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 42 + "'", int18 == 42);
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        int int25 = strBuilder22.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        boolean boolean40 = strBuilder34.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder54, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder41, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        java.lang.StringBuffer stringBuffer67 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder34.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder14.appendln((java.lang.Object) strBuilder69);
        java.lang.Object obj71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder14.append(obj71);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        boolean boolean16 = strBuilder12.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((long) (byte) 10);
        boolean boolean20 = strBuilder12.endsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.deleteFirst('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendSeparator('r', 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        java.io.Reader reader19 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.appendSeparator('r', '4');
        java.util.stream.IntStream intStream23 = strBuilder9.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        int int10 = strBuilder0.lastIndexOf('e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int11 = strBuilder8.lastIndexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.insert(0, (double) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder8.replaceFirst("true\n1.0\n\n\n\n0.0\n", "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str46 = strBuilder44.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str65 = strBuilder64.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((long) (byte) 10);
        java.lang.String str75 = strBuilder71.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendNewLine();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln("");
        java.lang.String str92 = strBuilder88.rightString((int) '4');
        java.lang.Object[] objArray93 = new java.lang.Object[] { strBuilder80, wildcardClass85, 10.0d, (-1.0d), str92 };
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder71.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder64.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder61.appendWithSeparators(objArray93, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder48.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder39.appendAll(objArray93);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "e\n10" + "'", str46, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10" + "'", str75, "true\n10");
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\n" + "'", str92, "\n");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (short) 1);
        boolean boolean15 = strBuilder11.contains("lse41\na\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln("ueahi!-1\n#", 55, 70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst(' ');
        java.io.Reader reader19 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder16.append(strBuilder29);
        java.lang.StringBuffer stringBuffer31 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append(stringBuffer31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder4.append("2.0", 80, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        boolean boolean3 = strBuilder0.contains("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln("");
        java.lang.String str7 = strBuilder6.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) (byte) 10);
        java.lang.String str17 = strBuilder13.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        java.lang.String str34 = strBuilder30.rightString((int) '4');
        java.lang.Object[] objArray35 = new java.lang.Object[] { strBuilder22, wildcardClass27, 10.0d, (-1.0d), str34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder6.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        int int58 = strBuilder55.lastIndexOf(strMatcher56, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((long) (byte) 10);
        java.lang.String str72 = strBuilder68.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder77, wildcardClass82, 10.0d, (-1.0d), str89 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder68.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendAll(objArray90);
        java.lang.Object[] objArray93 = new java.lang.Object[] { strBuilder37, strBuilder39, "\n", 4, int58, strBuilder92 };
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder0.appendWithSeparators(objArray93, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder0.append(0.0d);
        boolean boolean98 = strBuilder97.isEmpty();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "true\n10" + "'", str17, "true\n10");
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "true\n10" + "'", str72, "true\n10");
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[\n\nclass java.lang.Object10.0-1.0\n, true\n10, \n, 4, -1, \n\nclass java.lang.Object10.0-1.0\n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[\n\nclass java.lang.Object10.0-1.0\n, true\n10, \n, 4, -1, \n\nclass java.lang.Object10.0-1.0\n]");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(0, (double) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(false);
        int int54 = strBuilder53.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        boolean boolean59 = strBuilder57.contains(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append(false);
        int int62 = strBuilder57.size();
        int int64 = strBuilder57.indexOf("ass j");
        java.lang.StringBuffer stringBuffer65 = strBuilder57.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder44.append(stringBuffer65, 0, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 11 + "'", int62 == 11);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "\nfalsefalse");
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        java.io.Reader reader12 = strBuilder9.asReader();
        java.lang.String str14 = strBuilder9.leftString((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.append("4true\n1004", (int) '\n', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln((long) 254);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        int int17 = strBuilder16.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str23 = strBuilder21.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(stringBuffer30, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder41.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder38.appendWithSeparators(objArray70, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder25.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder19.appendln(strBuilder75, 26, 9);
        boolean boolean79 = strBuilder78.isEmpty();
        int int82 = strBuilder78.lastIndexOf("#########", 7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "e\n10" + "'", str23, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln('\n');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray34 = strBuilder31.toCharArray(19, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((long) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        int int52 = strBuilder45.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean57 = strBuilder54.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln(stringBuffer62, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendln(stringBuffer66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strBuilder70.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer71, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder54.appendln('4');
        java.io.Reader reader76 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder39.appendln((java.lang.Object) reader76);
        int int79 = strBuilder77.lastIndexOf("\ntrue114.0\n\n100.04-1.0 true\n\n");
        boolean boolean81 = strBuilder77.contains("rue\n");
        java.lang.String str82 = strBuilder77.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.replace(52, 4, "false");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        int int26 = strBuilder18.indexOf(strMatcher24, 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        java.lang.String str36 = strBuilder32.rightString(10);
        boolean boolean38 = strBuilder32.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder32.appendFixedWidthPadLeft((java.lang.Object) strBuilder39, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        java.lang.StringBuffer stringBuffer65 = strBuilder59.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder32.appendln(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append("\n1.0\n");
        int int69 = strBuilder66.length();
        boolean boolean70 = strBuilder18.equals((java.lang.Object) int69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder18.append((int) ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "true\n10" + "'", str36, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(5, (float) 'r');
        java.lang.String str33 = strBuilder32.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.replaceAll("\n ", "4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\ntrue114.0\n\n100.04-1.0 true\n\n" + "'", str33, "\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(stringBuffer14, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.reverse();
        int int19 = strBuilder17.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll(strMatcher20, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        java.util.stream.IntStream intStream33 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str49 = strBuilder48.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((long) (byte) 10);
        java.lang.String str59 = strBuilder55.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendNewLine();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("");
        java.lang.String str76 = strBuilder72.rightString((int) '4');
        java.lang.Object[] objArray77 = new java.lang.Object[] { strBuilder64, wildcardClass69, 10.0d, (-1.0d), str76 };
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder55.appendAll(objArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.appendAll(objArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder41.appendAll(objArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.appendFixedWidthPadRight((-1), (int) '4', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder39.insert(9, (java.lang.Object) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln((float) 29);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "true\n10" + "'", str59, "true\n10");
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\n" + "'", str76, "\n");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        boolean boolean46 = strBuilder32.equalsIgnoreCase(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.append((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder49.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNewLine();
        boolean boolean72 = strBuilder58.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder53.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        char[] charArray79 = strBuilder74.toCharArray();
        char[] charArray80 = strBuilder58.getChars(charArray79);
        char[] charArray81 = strBuilder49.getChars(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder23.append(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder23.replaceFirst(strMatcher83, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        int int87 = strBuilder85.indexOf(strMatcher86);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ ]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadLeft(22, 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.ensureCapacity(12);
        boolean boolean19 = strBuilder11.contains('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendln(stringBuffer24, (int) (byte) -1, 10);
        int int30 = strBuilder27.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        boolean boolean45 = strBuilder39.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        java.lang.StringBuffer stringBuffer72 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder27.append(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.append(stringBuffer72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("444444444444444444444444444444444444444");
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.insert((int) (short) 0, 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str50 = strBuilder49.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        java.util.stream.IntStream intStream57 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str61 = strBuilder60.getNewLineText();
        java.lang.Object[] objArray66 = new java.lang.Object[] { strBuilder56, strBuilder60, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll(objArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendln(true);
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder49.append(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.append(100);
        boolean boolean84 = strBuilder83.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strBuilder83.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "true\n0.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder46.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((long) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendln((-1.0d));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((double) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        int int21 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNewLine();
        boolean boolean41 = strBuilder27.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator('\n', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder0.appendln(strBuilder42);
        int int49 = strBuilder0.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("true\n10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.setCharAt(50, '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((float) 'a');
        java.io.Writer writer88 = strBuilder87.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder42.insert(2, (java.lang.Object) writer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.replace((int) (byte) 0, 4, "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder89.appendSeparator("true\n100.0", "falsefalse\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.append((float) 7);
        java.lang.Class<?> wildcardClass74 = strBuilder0.getClass();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        boolean boolean31 = strBuilder17.equalsIgnoreCase(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        char[] charArray38 = strBuilder33.toCharArray();
        char[] charArray39 = strBuilder17.getChars(charArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder9.insert((int) (byte) 1, charArray39, 106, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 106");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ ]");
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        int int75 = strBuilder67.lastIndexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.setNullText("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.append("4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        boolean boolean10 = strBuilder2.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        int int16 = strBuilder12.lastIndexOf("4\n1.0\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.insert((int) (byte) 1, (double) 'v');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNullText("\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(true);
        boolean boolean48 = strBuilder14.equalsIgnoreCase(strBuilder47);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        char[] charArray35 = strBuilder28.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendNewLine();
        boolean boolean66 = strBuilder52.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder47.append((java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        char[] charArray73 = strBuilder68.toCharArray();
        char[] charArray74 = strBuilder52.getChars(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder46.appendln(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder28.append(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        int int78 = strBuilder76.indexOf(strMatcher77);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ ]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\ntrue\n10\n10000");
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendSeparator('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(13, 'g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        java.lang.String str41 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.appendPadding(9, ' ');
        boolean boolean45 = strBuilder44.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.insert(100, "100.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        int int10 = strBuilder7.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        boolean boolean24 = strBuilder21.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(false);
        int int31 = strBuilder30.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(false);
        char[] charArray38 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendln(charArray38);
        java.lang.Class<?> wildcardClass40 = strBuilder39.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) wildcardClass40, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("");
        java.lang.String str53 = strBuilder49.rightString((int) '4');
        java.lang.String str55 = strBuilder49.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int68 = strBuilder65.lastIndexOf(strMatcher66, (int) (byte) 0);
        int int69 = strBuilder65.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) strBuilder71, 170, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder13.append((java.lang.Object) 170);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder13.appendln((long) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n" + "'", str55, "\n");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 14 + "'", int69 == 14);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        java.lang.StringBuffer stringBuffer58 = strBuilder57.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(stringBuffer58);
        org.junit.Assert.assertEquals(stringBuffer58.toString(), "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################");
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll(strMatcher18);
        // The following exception was thrown during execution in test generation
        try {
            char char21 = strBuilder19.charAt((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteAll("\n1.0\ntrue\n10############################### true\n\n");
        java.lang.String str14 = strBuilder13.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "true\n10" + "'", str14, "true\n10");
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        java.lang.StringBuffer stringBuffer17 = strBuilder13.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendSeparator('a', (int) 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "true4\nhi!");
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        int int49 = strBuilder42.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        boolean boolean54 = strBuilder51.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln(stringBuffer59, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendln(stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder39.appendln((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((long) (byte) 10);
        java.lang.String str75 = strBuilder71.leftString(210);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10############################### true\n\n\n1.0\nStrTokenizer[]\n10\n" + "'", str75, "true\n10############################### true\n\n\n1.0\nStrTokenizer[]\n10\n");
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        boolean boolean13 = strBuilder7.contains(' ');
        int int15 = strBuilder7.indexOf('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        boolean boolean35 = strBuilder21.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        char[] charArray42 = strBuilder37.toCharArray();
        char[] charArray43 = strBuilder21.getChars(charArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder7.append(charArray42, 7, (int) 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 118");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ ]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ ]");
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendFixedWidthPadRight(210, 5, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        int int90 = strBuilder84.lastIndexOf(strMatcher89);
        java.util.stream.IntStream intStream91 = strBuilder84.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(intStream91);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("e\n10");
        int int21 = strBuilder20.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendPadding((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        boolean boolean56 = strBuilder42.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendNewLine();
        boolean boolean82 = strBuilder68.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.append((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.minimizeCapacity();
        char[] charArray89 = strBuilder84.toCharArray();
        char[] charArray90 = strBuilder68.getChars(charArray89);
        char[] charArray91 = strBuilder59.getChars(charArray89);
        char[] charArray92 = strBuilder36.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder0.append(charArray92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.deleteAll(strMatcher94);
        int int96 = strBuilder93.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder93.appendln('#');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 32 + "'", int96 == 32);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(68, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 68");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replace(strMatcher11, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder41.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder38.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strBuilder73.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendFixedWidthPadRight(100, 254, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendSeparator('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder15.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        int int33 = strBuilder26.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.String str40 = strBuilder39.getNewLineText();
        boolean boolean41 = strBuilder26.equals(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        boolean boolean48 = strBuilder46.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder7.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.insert((-1), '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.append((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        char[] charArray49 = strBuilder44.toCharArray();
        char[] charArray50 = strBuilder28.getChars(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.appendln(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder22.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder22.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNull();
        int int64 = strBuilder61.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.replaceAll(strMatcher65, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendln(true);
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.deleteAll("\n");
        java.lang.StringBuffer stringBuffer77 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder57.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder0.appendln((java.lang.Object) strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ ]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.replace(5, 52, "###### true\n\n###");
        java.lang.String str14 = strBuilder11.midString((int) 'g', (int) 'f');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        java.lang.String str12 = strBuilder7.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.setNewLineText("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln('t');
        java.lang.String str17 = strBuilder16.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n " + "'", str12, "\n ");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\n ttrue\n0.0\ntrue\nra" + "'", str17, "\n ttrue\n0.0\ntrue\nra");
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        java.util.stream.IntStream intStream17 = strBuilder16.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', '4');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer39 = strBuilder38.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((java.lang.Object) writer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNewLine();
        boolean boolean60 = strBuilder46.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.append((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.append(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder28.append(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("e\n10############################### true\n\n\n1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.replaceFirst("true\n100.0", "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.insert(78, "\na");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) -1);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.replaceAll('r', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        int int67 = strBuilder56.indexOf(strMatcher65, (int) (byte) 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int41 = strBuilder34.indexOf(strMatcher39, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.appendNull();
        int int43 = strBuilder34.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 29 + "'", int43 == 29);
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        boolean boolean33 = strBuilder31.startsWith("\n");
        int int35 = strBuilder31.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append((float) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.appendln(strBuilder39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) 50);
        int int51 = strBuilder49.indexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        java.lang.Object[] objArray42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln(stringBuffer52, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(stringBuffer56);
        boolean boolean58 = strBuilder47.equals((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.replaceAll(strMatcher59, "\n1097########");
        java.util.stream.IntStream intStream62 = strBuilder47.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator("\ntrue\n\n100.04-1.0 true", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder41.appendln((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder41.deleteAll(".lang.Object10.0-1.0\nfalse");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder15.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        int int33 = strBuilder26.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.String str40 = strBuilder39.getNewLineText();
        boolean boolean41 = strBuilder26.equals(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        boolean boolean48 = strBuilder46.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder7.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.insert((int) 'a', 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceFirst('3', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        java.lang.String str42 = strBuilder38.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNewLine();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        java.lang.Object[] objArray60 = new java.lang.Object[] { strBuilder47, wildcardClass52, 10.0d, (-1.0d), str59 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder28.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.deleteAll(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendNull();
        java.util.stream.IntStream intStream77 = strBuilder73.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.deleteAll('a');
        java.util.stream.IntStream intStream80 = strBuilder73.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader83 = strBuilder82.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((java.lang.CharSequence) strBuilder82);
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder81.appendln(stringBuffer85, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder88.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder89.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.insert((int) (short) 0, (double) 0);
        char[] charArray94 = strBuilder93.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder73.appendln((java.lang.Object) charArray94);
        char[] charArray96 = strBuilder72.getChars(charArray94);
        char[] charArray97 = strBuilder19.getChars(charArray94);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true\n10" + "'", str42, "true\n10");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(intStream77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(intStream80);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "true\nclass java.lang.Object10.0-1.0\nass j#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "true\nclass java.lang.Object10.0-1.0\nass j#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[t, r, u, e, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, a, s, s,  , j, #]");
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "true\n10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "true\n10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[t, r, u, e, \n, 1, 0, \n]");
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) (short) 1, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert(210, (float) 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.minimizeCapacity();
        char[] charArray71 = strBuilder68.toCharArray(20, 24);
        char char73 = strBuilder68.charAt((int) '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "gnal");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "gnal");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[g, n, a, l]");
        org.junit.Assert.assertTrue("'" + char73 + "' != '" + '.' + "'", char73 == '.');
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.ensureCapacity(7);
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append(stringBuffer24, (int) 'a', 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append("04-1.0 true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.deleteFirst("true\n0.01\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.deleteFirst(strMatcher32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder42.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder14.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNullText("\n10");
        java.lang.String str50 = strBuilder49.getNewLineText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((float) 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int34 = strBuilder32.indexOf('a');
        int int35 = strBuilder32.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendSeparator("\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\nfalse\n", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(78);
        java.lang.String str38 = strBuilder37.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n52##################################################################################################false\n3678" + "'", str38, "true\n52##################################################################################################false\n3678");
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        int int55 = strBuilder53.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.append((java.lang.CharSequence) strBuilder53);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.append(stringBuffer60, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.appendFixedWidthPadRight((java.lang.Object) strBuilder64, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.appendln((double) 100.0f);
        java.lang.String str74 = strBuilder63.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.appendPadding((int) (byte) 0, 'g');
        int int79 = strBuilder63.indexOf("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        boolean boolean80 = strBuilder14.equals((java.lang.Object) "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "true\n" + "'", str74, "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((-1L));
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteFirst(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        int int21 = strBuilder14.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        java.lang.String str28 = strBuilder27.getNewLineText();
        boolean boolean29 = strBuilder14.equals(strBuilder27);
        java.lang.String str30 = strBuilder27.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder27.indexOf(strMatcher31, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder47, (int) (short) 1, ' ');
        boolean boolean51 = strBuilder27.equals((java.lang.Object) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder27.setNewLineText("\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder27.replaceAll('#', 'g');
        boolean boolean57 = strBuilder11.equals(strBuilder27);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        int int31 = strBuilder28.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.deleteFirst("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer45 = strBuilder44.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder40, 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.append("\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.appendPadding(50, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 10);
        int int66 = strBuilder64.lastIndexOf('#');
        int int69 = strBuilder64.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.minimizeCapacity();
        char[] charArray77 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.appendln(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln((int) (short) 10);
        java.lang.StringBuffer stringBuffer81 = strBuilder71.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder56.appendln(stringBuffer81, 66, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "true\n10100.0 \n10\n");
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((-1), 'a');
        int int33 = strBuilder29.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder35.asTokenizer();
        int int43 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(false);
        char[] charArray50 = strBuilder49.toCharArray();
        char[] charArray51 = strBuilder35.getChars(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.ensureCapacity(29);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 24 + "'", int33 == 24);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(42);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.insert(0, 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator('t');
        boolean boolean18 = strBuilder14.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        boolean boolean47 = strBuilder45.startsWith("\n");
        int int49 = strBuilder45.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.append((java.lang.Object) strBuilder52);
        java.lang.String str55 = strBuilder52.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((long) (byte) 10);
        java.lang.String str65 = strBuilder61.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendNewLine();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        java.lang.String str82 = strBuilder78.rightString((int) '4');
        java.lang.Object[] objArray83 = new java.lang.Object[] { strBuilder70, wildcardClass75, 10.0d, (-1.0d), str82 };
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder61.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder52.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder42.appendWithSeparators(objArray83, "lse41\na\n");
        java.io.Reader reader88 = strBuilder42.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "true\n10" + "'", str65, "true\n10");
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n" + "'", str82, "\n");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(reader88);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((double) 10L);
        char[] charArray49 = new char[] { '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.appendln(charArray49, (int) (short) 1, 0);
        int int53 = strBuilder52.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[\000,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 68 + "'", int53 == 68);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int33 = strBuilder28.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 68 + "'", int33 == 68);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        int int52 = strBuilder42.capacity();
        int int53 = strBuilder42.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 68 + "'", int52 == 68);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 68 + "'", int53 == 68);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        java.io.Writer writer42 = strBuilder39.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceFirst(strMatcher43, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (-1));
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendNewLine();
        int int19 = strBuilder14.lastIndexOf("\n\n0.0\n", 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln((float) 53);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("true\n10############################### true\n\n", "true\n10");
        int int49 = strBuilder47.lastIndexOf("true\n0.0\n\n");
        java.util.stream.IntStream intStream50 = strBuilder47.codePoints();
        int int51 = strBuilder47.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 94 + "'", int51 == 94);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln(stringBuffer47, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        boolean boolean73 = strBuilder59.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.append((java.lang.Object) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        char[] charArray80 = strBuilder75.toCharArray();
        char[] charArray81 = strBuilder59.getChars(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.insert((int) (short) 1, charArray81);
        char[] charArray83 = strBuilder42.getChars(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder42.appendSeparator('\000', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "true\n10 \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "true\n10 \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[t, r, u, e, \n, 1, 0,  , \n]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.append(12);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteAll('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.clear();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.deleteAll(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendFixedWidthPadLeft((int) (short) 10, 1, ' ');
        boolean boolean23 = strBuilder2.equalsIgnoreCase(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.replaceAll('a', ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder50.appendSeparator("", 4);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(257);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(14);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.replaceAll(strMatcher45, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append((double) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendln(stringBuffer54, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendNewLine();
        boolean boolean77 = strBuilder63.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.minimizeCapacity();
        char[] charArray84 = strBuilder79.toCharArray();
        char[] charArray85 = strBuilder63.getChars(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append(charArray85);
        java.lang.StringBuffer stringBuffer87 = strBuilder86.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder36.append(stringBuffer87, 254, 170);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ ]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(stringBuffer87);
        org.junit.Assert.assertEquals(stringBuffer87.toString(), "\n ");
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.setNewLineText("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.append(10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("falsefalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.lang.StringBuffer stringBuffer75 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder62.appendln(strBuilder77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.replaceFirst(strMatcher79, "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder59.appendln(strBuilder77);
        int int83 = strBuilder77.capacity();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 32 + "'", int83 == 32);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(21, (double) 214);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        int int10 = strBuilder7.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(4, (float) 42);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        boolean boolean65 = strBuilder63.contains("e\n10");
        java.lang.StringBuffer stringBuffer66 = strBuilder63.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(stringBuffer66);
        org.junit.Assert.assertEquals(stringBuffer66.toString(), "false\n\n");
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        java.lang.String str55 = strBuilder51.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        int int59 = strBuilder51.lastIndexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((-1.0f));
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10" + "'", str55, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadLeft(13, (int) (short) 1, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(stringBuffer35, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder24.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        java.lang.String str54 = strBuilder53.getNewLineText();
        boolean boolean55 = strBuilder40.equals(strBuilder53);
        boolean boolean56 = strBuilder39.equals(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder39.append((long) '\n');
        boolean boolean59 = strBuilder12.equals(strBuilder58);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("##################################################################false\n");
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert(113, (java.lang.Object) 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (byte) 10);
        java.lang.String str20 = strBuilder16.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.Object[] objArray38 = new java.lang.Object[] { strBuilder25, wildcardClass30, 10.0d, (-1.0d), str37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendAll(objArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.CharSequence) strBuilder39, 12, 0);
        java.io.Reader reader46 = strBuilder10.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "true\n10" + "'", str20, "true\n10");
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder9.indexOf(strMatcher10, 254);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.insert(22, (int) 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strBuilder57, 17, 'r');
        int int61 = strBuilder57.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 32 + "'", int61 == 32);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int16 = strBuilder14.indexOf(strMatcher15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) 0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.replaceFirst(strMatcher9, "4\n1.0\na");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int19 = strBuilder17.lastIndexOf(strMatcher18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        int int40 = strBuilder38.lastIndexOf(" \n\nrue\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln((float) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight(0, (int) (short) -1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        java.lang.String str47 = strBuilder46.getNewLineText();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendln(true);
        java.util.stream.IntStream intStream88 = strBuilder82.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.appendFixedWidthPadRight((java.lang.Object) strBuilder82, 39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder81.appendSeparator('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        int int96 = strBuilder93.indexOf(strMatcher94, 100);
        boolean boolean97 = strBuilder93.isEmpty();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        int int31 = strBuilder28.lastIndexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        int int28 = strBuilder21.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.String str35 = strBuilder34.getNewLineText();
        boolean boolean36 = strBuilder21.equals(strBuilder34);
        boolean boolean37 = strBuilder20.equals(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        boolean boolean45 = strBuilder34.equals(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteAll("44444444444444444444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        int int57 = strBuilder55.lastIndexOf('#');
        int int60 = strBuilder55.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        char[] charArray68 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.appendln(charArray68);
        int int72 = strBuilder62.lastIndexOf("\n1.0\n", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder62.append((double) (short) 0);
        java.lang.StringBuffer stringBuffer75 = strBuilder62.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendln(stringBuffer75, 23, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n10100.0 \n0.0");
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.setLength(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(false);
        char[] charArray31 = strBuilder30.toCharArray();
        java.lang.String str33 = strBuilder30.leftString((int) ' ');
        int int35 = strBuilder30.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        boolean boolean55 = strBuilder41.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder58.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder58.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 12, '#');
        java.lang.String str66 = strBuilder58.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.appendFixedWidthPadLeft(12, (int) (byte) -1, 'r');
        boolean boolean71 = strBuilder24.equalsIgnoreCase(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendFixedWidthPadRight((java.lang.Object) "\ntrue\n10\n     ", 19, 'a');
        int int77 = strBuilder70.lastIndexOf('g');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "false" + "'", str33, "false");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        int int24 = strBuilder14.lastIndexOf("\n1.0\n", 4);
        java.util.stream.IntStream intStream25 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.append("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.", (int) (short) 1, 36);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst(' ');
        java.io.Reader reader19 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder16.append(strBuilder29);
        java.lang.StringBuffer stringBuffer31 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append(stringBuffer31);
        int int33 = strBuilder32.capacity();
        int int34 = strBuilder32.length();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        java.lang.String str9 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendFixedWidthPadLeft((int) '4', 210, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.clear();
        java.util.stream.IntStream intStream15 = strBuilder5.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln(stringBuffer16, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        int int21 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder8.append(strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) 50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.delete((int) 'a', 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        boolean boolean64 = strBuilder50.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        char[] charArray71 = strBuilder66.toCharArray();
        char[] charArray72 = strBuilder50.getChars(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder44.replaceFirst("hi!", "hi!");
        boolean boolean77 = strBuilder30.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder30.append((long) 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder30.insert((int) '#', 7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        java.lang.String str42 = strBuilder38.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNewLine();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        java.lang.Object[] objArray60 = new java.lang.Object[] { strBuilder47, wildcardClass52, 10.0d, (-1.0d), str59 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder26.append(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendSeparator('r', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.insert((int) (short) 0, 'v');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true\n10" + "'", str42, "true\n10");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll(strMatcher15);
        java.lang.String str17 = strBuilder16.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        int int36 = strBuilder29.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        java.lang.String str43 = strBuilder42.getNewLineText();
        boolean boolean44 = strBuilder29.equals(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.append(strBuilder42);
        java.lang.StringBuffer stringBuffer46 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder16.append(stringBuffer46, 9, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendFixedWidthPadLeft(40, 322, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll("lse41\na\n", "rue\n10############################### true\n\n\n1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendNewLine();
        boolean boolean76 = strBuilder62.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder57.append((java.lang.Object) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder57.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strBuilder79.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(stringBuffer46);
        org.junit.Assert.assertEquals(stringBuffer46.toString(), "true\n52##################################################################################################");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        boolean boolean55 = strBuilder41.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        char[] charArray62 = strBuilder57.toCharArray();
        char[] charArray63 = strBuilder41.getChars(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder35.append(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator("true\n0.0\n\n", 257);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ ]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.deleteAll('g');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.append(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendSeparator('#', (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.replace(70, 0, "\nfalse\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(0.0d);
        int int47 = strBuilder41.lastIndexOf("ass j", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder7.appendln((java.lang.Object) strBuilder41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder7.appendln("##################################################################false\n", 11, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        boolean boolean46 = strBuilder32.equalsIgnoreCase(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.append((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder49.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNewLine();
        boolean boolean72 = strBuilder58.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder53.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        char[] charArray79 = strBuilder74.toCharArray();
        char[] charArray80 = strBuilder58.getChars(charArray79);
        char[] charArray81 = strBuilder49.getChars(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder23.append(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceAll(strMatcher83, "4true\n10044444444444444444444444444444444");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ ]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        int int24 = strBuilder14.lastIndexOf("\n1.0\n", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        java.lang.String str36 = strBuilder32.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("");
        java.lang.String str53 = strBuilder49.rightString((int) '4');
        java.lang.Object[] objArray54 = new java.lang.Object[] { strBuilder41, wildcardClass46, 10.0d, (-1.0d), str53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer60 = strBuilder55.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.append(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        boolean boolean63 = strBuilder26.contains(strMatcher62);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "true\n10" + "'", str36, "true\n10");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "#");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(0.0d);
        int int47 = strBuilder41.lastIndexOf("ass j", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder7.appendln((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append((java.lang.CharSequence) strBuilder52);
        java.lang.String str60 = strBuilder59.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.replaceAll(strMatcher61, "\nfalse\ntrue10\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ass ja");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        boolean boolean26 = strBuilder12.equalsIgnoreCase(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder29.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        boolean boolean52 = strBuilder38.equalsIgnoreCase(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        char[] charArray59 = strBuilder54.toCharArray();
        char[] charArray60 = strBuilder38.getChars(charArray59);
        char[] charArray61 = strBuilder29.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.append(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendPadding(41, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln('#');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst('\n', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(34, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("\ntrue\n10\n     ");
        int int10 = strBuilder5.indexOf('\000', (int) 't');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.setLength(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(false);
        char[] charArray31 = strBuilder30.toCharArray();
        java.lang.String str33 = strBuilder30.leftString((int) ' ');
        int int35 = strBuilder30.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        boolean boolean55 = strBuilder41.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder58.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder58.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 12, '#');
        java.lang.String str66 = strBuilder58.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.appendFixedWidthPadLeft(12, (int) (byte) -1, 'r');
        boolean boolean71 = strBuilder24.equalsIgnoreCase(strBuilder70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder24.replaceFirst(strMatcher72, "4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "false" + "'", str33, "false");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity(45);
        int int37 = strBuilder32.lastIndexOf("true\n10100.0 \n", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendln(stringBuffer42, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.reverse();
        int int48 = strBuilder47.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = strBuilder50.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(false);
        char[] charArray71 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.insert(0, charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.insert((int) (short) 10, charArray71, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, 5, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.replaceAll("true\n10############################### true\n\n", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder32.append((java.lang.Object) strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder32.replace((int) (short) 1, 30, "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = strBuilder32.equals(strBuilder87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int17 = strBuilder14.lastIndexOf(strMatcher15, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.deleteCharAt(23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        int int39 = strBuilder37.indexOf("t");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.insert(12, 'r');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        char[] charArray7 = strBuilder4.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.deleteAll('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        java.lang.String str19 = strBuilder15.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendFixedWidthPadLeft((int) '4', 210, '4');
        int int26 = strBuilder15.lastIndexOf("4-1.0 true", 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder15.replaceAll('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append(strBuilder29, 0, 10);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , \n, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.appendSeparator("tr", 55);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln(stringBuffer36, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendNewLine();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln("");
        java.lang.String str75 = strBuilder71.rightString((int) '4');
        java.lang.Object[] objArray76 = new java.lang.Object[] { strBuilder63, wildcardClass68, 10.0d, (-1.0d), str75 };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder54.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendAll(objArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder44.appendWithSeparators(objArray76, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder29.appendWithSeparators(objArray76, "0");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\n" + "'", str75, "\n");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendSeparator("");
        int int9 = strBuilder3.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendFixedWidthPadRight(34, 76, 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.deleteFirst("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst('g');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(113);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(47, (long) 'r');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 47");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(false);
        boolean boolean27 = strBuilder20.equals(strBuilder26);
        boolean boolean29 = strBuilder20.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        int int37 = strBuilder30.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder20.append((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendPadding(3, '#');
        java.lang.String str63 = strBuilder60.substring((int) ' ', 50);
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.insert(2, charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendPadding(97, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "###### true\n\n###" + "'", str63, "###### true\n\n###");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "true\n10############################### true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "true\n10############################### true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[t, r, u, e, \n, 1, 0, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(stringBuffer44, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        boolean boolean70 = strBuilder56.equalsIgnoreCase(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder51.append((java.lang.Object) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.minimizeCapacity();
        char[] charArray77 = strBuilder72.toCharArray();
        char[] charArray78 = strBuilder56.getChars(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder47.insert((int) (short) 1, charArray78);
        char[] charArray80 = strBuilder38.getChars(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder0.append(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder0.appendFixedWidthPadRight((int) '4', 40, '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ ]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replace(strMatcher12, "\n1.0\n", 2, 52, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.append("0", 70, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.insert(14, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.io.Writer writer38 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str43 = strBuilder41.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator('4');
        java.lang.StringBuffer stringBuffer48 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder33.append(stringBuffer48);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "\n1.0\n4");
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.String str47 = strBuilder41.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder33.appendln(strBuilder55, (int) (short) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder66.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendPadding(3, '#');
        java.lang.String str81 = strBuilder79.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.append((long) 200);
        char[] charArray86 = strBuilder79.toCharArray(8, 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder55.append(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.insert(0, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendln(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "t" + "'", str81, "t");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "############################## true\n\n###200");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "############################## true\n\n###200");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        int int43 = strBuilder39.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.setLength(14);
        java.io.Writer writer46 = strBuilder39.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendSeparator("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.setNullText("24tass j\nrue\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert(13, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder15.appendln(strBuilder54);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder9.trim();
        int int46 = strBuilder44.indexOf("t");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.deleteAll("97########");
        java.lang.String str49 = strBuilder48.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        java.lang.String str61 = strBuilder57.getNullText();
        char[] charArray62 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.appendln(charArray62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder0.insert(0, charArray62, 66, 75);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        boolean boolean9 = strBuilder7.startsWith("ass j");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceFirst(strMatcher10, "\n1097########");
        int int14 = strBuilder12.indexOf('#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendln(stringBuffer11, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((long) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteFirst("v.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 10);
        java.lang.String str30 = strBuilder26.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder35, wildcardClass40, 10.0d, (-1.0d), str47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder26.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((long) (byte) 10);
        int int59 = strBuilder57.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder49.append((java.lang.CharSequence) strBuilder57);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.append(stringBuffer64, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.appendFixedWidthPadRight((java.lang.Object) strBuilder68, 32, '#');
        int int77 = strBuilder67.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((double) 7);
        char[] charArray81 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder20.append(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder5.appendln(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.setCharAt(0, '.');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "true\n10" + "'", str30, "true\n10");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 13 + "'", int77 == 13);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "###############################\n01\neurt\n0.1-0.01tcejbO.gnal.avaj ssalc\n01\neurt7.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "###############################\n01\neurt\n0.1-0.01tcejbO.gnal.avaj ssalc\n01\neurt7.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, \n, 0, 1, \n, e, u, r, t, \n, 0, ., 1, -, 0, ., 0, 1, t, c, e, j, b, O, ., g, n, a, l, ., a, v, a, j,  , s, s, a, l, c, \n, 0, 1, \n, e, u, r, t, 7, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder7.append("ass j");
        boolean boolean39 = strBuilder37.endsWith("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str45 = strBuilder44.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str56 = strBuilder55.getNewLineText();
        java.lang.Object[] objArray61 = new java.lang.Object[] { strBuilder51, strBuilder55, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder37.appendln(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(strBuilder74, 10, 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder68.replaceAll("", "e\n10");
        java.lang.String str82 = strBuilder68.rightString(15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".0-1.0true\n\n\n0\n" + "'", str82, ".0-1.0true\n\n\n0\n");
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceAll(strMatcher7, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(strBuilder10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder11.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.deleteFirst('v');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        int int20 = strBuilder0.lastIndexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder21.asTokenizer();
        int int29 = strBuilder21.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(false);
        char[] charArray36 = strBuilder35.toCharArray();
        char[] charArray37 = strBuilder21.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder0.appendln(charArray36);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        char[] charArray49 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.append(charArray49);
        int int53 = strBuilder22.lastIndexOf('3');
        java.util.stream.IntStream intStream54 = strBuilder22.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(intStream54);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        int int17 = strBuilder9.lastIndexOf("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.replaceAll("\n1.0 \n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        int int22 = strBuilder20.lastIndexOf('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.clear();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendln("true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer65 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder17.appendln(stringBuffer65);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (byte) 10);
        java.lang.String str20 = strBuilder16.rightString(10);
        boolean boolean22 = strBuilder16.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        int int30 = strBuilder23.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        java.lang.String str37 = strBuilder36.getNewLineText();
        boolean boolean38 = strBuilder23.equals(strBuilder36);
        java.lang.String str39 = strBuilder36.toString();
        java.lang.StringBuffer stringBuffer40 = strBuilder36.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(false);
        char[] charArray52 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.insert(0, charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.insert((int) (byte) 0, charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder16.appendln(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.insert(257, charArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 257");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "true\n10" + "'", str20, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder6.replaceFirst("", "04-1.0 true\n0.0\ntrue\nra");
        int int48 = strBuilder47.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        int int8 = strBuilder6.indexOf("  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.reverse();
        int int10 = strBuilder6.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.lang.StringBuffer stringBuffer17 = strBuilder11.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(false);
        char[] charArray24 = strBuilder23.toCharArray();
        char[] charArray25 = strBuilder11.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        int int33 = strBuilder26.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setLength(7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder38.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((int) (byte) 100);
        java.lang.String str17 = strBuilder13.leftString(14);
        int int20 = strBuilder13.lastIndexOf("true\n10", (int) 'g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\ntrue\n10\n     " + "'", str17, "\ntrue\n10\n     ");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.replaceFirst(strMatcher6, "true\n100.0");
        int int10 = strBuilder8.lastIndexOf(' ');
        int int12 = strBuilder8.lastIndexOf('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append((float) 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('\000', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln("\ntrue\n10\n1000");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strBuilder15.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendFixedWidthPadRight(0, 1, '4');
        int int14 = strBuilder9.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        int int71 = strBuilder69.lastIndexOf('#');
        int int74 = strBuilder69.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        char[] charArray82 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder76.appendln(charArray82);
        java.lang.String str85 = strBuilder76.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder76.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        boolean boolean90 = strBuilder88.contains(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder58.appendln(strBuilder88);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "true\n10100.0 \n" + "'", str85, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        java.lang.StringBuffer stringBuffer29 = strBuilder14.toStringBuffer();
        java.io.Writer writer30 = strBuilder14.asWriter();
        int int33 = strBuilder14.indexOf('\n', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(true);
        java.util.stream.IntStream intStream40 = strBuilder37.chars();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "\n ");
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNewLine();
        boolean boolean24 = strBuilder10.equalsIgnoreCase(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder5.append((java.lang.Object) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        char[] charArray31 = strBuilder26.toCharArray();
        char[] charArray32 = strBuilder10.getChars(charArray31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder3.insert((int) '#', charArray31, (int) '\000', 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ ]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ ]");
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.ensureCapacity(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.replaceAll('g', 'f');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replace((int) '\000', (int) (byte) 10, "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) 106);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append("##################################################################false\n", 23, 38);
        int int21 = strBuilder13.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) 'a', 10, '#');
        java.lang.String str53 = strBuilder46.midString((int) (short) 10, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((double) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(53, (double) 106);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ass j" + "'", str53, "ass j");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.util.stream.IntStream intStream15 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        java.lang.String str31 = strBuilder27.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str48 = strBuilder44.rightString((int) '4');
        java.lang.Object[] objArray49 = new java.lang.Object[] { strBuilder36, wildcardClass41, 10.0d, (-1.0d), str48 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder17.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        int int69 = strBuilder62.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendSeparator("");
        char[] charArray79 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(charArray79);
        java.io.Reader reader81 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder71.append(30);
        int int84 = strBuilder83.capacity();
        int int85 = strBuilder83.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.deleteFirst("e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.append(strBuilder87, 22, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10" + "'", str31, "true\n10");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n" + "'", str48, "\n");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 16 + "'", int85 == 16);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 10);
        int int66 = strBuilder64.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) 2, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder27.ensureCapacity(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder27.insert(0, (float) 22);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(55);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(24, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.insert((int) '\000', "true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) 97);
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 10);
        java.lang.String str30 = strBuilder26.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder35, wildcardClass40, 10.0d, (-1.0d), str47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder26.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder19.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder12.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strBuilder51, (int) (short) 1, ' ');
        java.lang.String str57 = strBuilder5.getNullText();
        java.lang.String str58 = strBuilder5.getNewLineText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder5.insert(76, (double) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "true\n10" + "'", str30, "true\n10");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str34 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        java.util.stream.IntStream intStream41 = strBuilder40.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str45 = strBuilder44.getNewLineText();
        java.lang.Object[] objArray50 = new java.lang.Object[] { strBuilder40, strBuilder44, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder33.append(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator('#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder30.append((java.lang.CharSequence) strBuilder69);
        int int74 = strBuilder73.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(intStream41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 18 + "'", int74 == 18);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int54 = strBuilder47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendSeparator("\n\ntrue\n");
        boolean boolean58 = strBuilder47.endsWith("true\n10ass j\nrrrr");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        int int14 = strBuilder7.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.String str21 = strBuilder20.getNewLineText();
        boolean boolean22 = strBuilder7.equals(strBuilder20);
        boolean boolean23 = strBuilder0.equals(strBuilder20);
        java.lang.String str24 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((long) (byte) 10);
        java.lang.String str34 = strBuilder30.rightString(10);
        boolean boolean36 = strBuilder30.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.appendFixedWidthPadLeft((java.lang.Object) strBuilder50, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) strBuilder37, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        java.lang.StringBuffer stringBuffer63 = strBuilder57.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder30.appendln(stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendln(stringBuffer63);
        java.lang.String str66 = strBuilder0.getNewLineText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "true\n10" + "'", str34, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(stringBuffer63);
        org.junit.Assert.assertEquals(stringBuffer63.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        java.lang.String str31 = strBuilder9.substring((int) (byte) 1);
        boolean boolean32 = strBuilder9.isEmpty();
        boolean boolean34 = strBuilder9.endsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder9.deleteFirst('4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n" + "'", str31, "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceFirst('\n', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        int int7 = strBuilder2.lastIndexOf(strMatcher5, 7);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendln("4-1.0 true", 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll(strMatcher74);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.ensureCapacity(22);
        int int75 = strBuilder0.lastIndexOf("0");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder0.replaceFirst(strMatcher76, " ");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        int int81 = strBuilder78.indexOf(strMatcher79, (int) (short) 100);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 36 + "'", int75 == 36);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.deleteFirst("");
        java.lang.String str12 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNewLine();
        boolean boolean43 = strBuilder29.equalsIgnoreCase(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.append((java.lang.Object) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        char[] charArray50 = strBuilder45.toCharArray();
        char[] charArray51 = strBuilder29.getChars(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder23.appendln(charArray50);
        boolean boolean53 = strBuilder0.equals((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNull();
        java.util.stream.IntStream intStream59 = strBuilder55.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.deleteAll('a');
        java.util.stream.IntStream intStream62 = strBuilder55.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder55.appendSeparator("false", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder23.insert((int) (byte) 0, (java.lang.Object) strBuilder65);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ ]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("");
        java.lang.String str15 = strBuilder14.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder21, strBuilder25, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendPadding((-1), 'a');
        java.lang.Class<?> wildcardClass45 = strBuilder44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.append((java.lang.Object) wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((long) (byte) 10);
        java.lang.String str32 = strBuilder28.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding(3, '#');
        boolean boolean42 = strBuilder22.equals((java.lang.Object) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strBuilder22, 11, 'g');
        char[] charArray46 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("");
        java.lang.String str57 = strBuilder56.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln(true);
        java.util.stream.IntStream intStream64 = strBuilder63.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str68 = strBuilder67.getNewLineText();
        java.lang.Object[] objArray73 = new java.lang.Object[] { strBuilder63, strBuilder67, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendAll(objArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.appendln(stringBuffer81, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.deleteFirst(strMatcher85);
        boolean boolean88 = strBuilder86.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strBuilder86.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder74.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder53.append((java.lang.Object) strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder53.deleteFirst("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder53.appendln((double) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder53.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder45.append(strBuilder53, 6, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10" + "'", str32, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "\ntrue\n10\n       true\n100.0g");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "\ntrue\n10\n       true\n100.0g");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[\n, t, r, u, e, \n, 1, 0, \n,  ,  ,  ,  ,  ,  ,  , t, r, u, e, \n, 1, 0, 0, ., 0, g]");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(true);
        java.lang.String str32 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln("\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert(7, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln("4true\n10044444444444444444444444444444444");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        boolean boolean14 = strBuilder8.contains(strMatcher13);
        int int17 = strBuilder8.indexOf("  \n", (-1));
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int20 = strBuilder8.lastIndexOf(strMatcher18, 68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder8.deleteCharAt(113);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        boolean boolean42 = strBuilder40.startsWith("\n");
        int int44 = strBuilder40.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        java.lang.String str63 = strBuilder60.toString();
        java.lang.StringBuffer stringBuffer64 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder46.append(stringBuffer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.append(strBuilder46);
        int int67 = strBuilder66.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 140 + "'", int67 == 140);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendSeparator("hi!");
        java.io.Reader reader31 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln("tr");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 32);
        java.lang.StringBuffer stringBuffer28 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        int int48 = strBuilder41.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        java.lang.String str55 = strBuilder54.getNewLineText();
        boolean boolean56 = strBuilder41.equals(strBuilder54);
        java.lang.String str57 = strBuilder54.toString();
        java.lang.StringBuffer stringBuffer58 = strBuilder54.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder34.appendln(stringBuffer58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        boolean boolean61 = strBuilder25.equalsIgnoreCase(strBuilder59);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(stringBuffer28);
        org.junit.Assert.assertEquals(stringBuffer28.toString(), "4\n1.0\n32.0");
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(stringBuffer58);
        org.junit.Assert.assertEquals(stringBuffer58.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.minimizeCapacity();
        char char19 = strBuilder14.charAt(2);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + char19 + "' != '" + 'u' + "'", char19 == 'u');
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(0.0d);
        int int47 = strBuilder41.lastIndexOf("ass j", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder7.appendln((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.replaceFirst(strMatcher60, "\n\nclass java.lang.Object10.0-1.0\n");
        int int64 = strBuilder62.indexOf("rue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.deleteFirst(strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "###3##########################t100.0", (int) (short) 1, (int) ' ', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.append("true\n10");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendln('\n');
        java.lang.String str14 = strBuilder13.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert((int) (byte) 0, 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.delete(12, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.insert(11, false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.appendln(stringBuffer72, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.insert((int) (short) 0, (double) 0);
        char[] charArray81 = strBuilder80.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder66.appendln(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder66.appendPadding(14, 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.append((float) 170);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.append("10.0false######4true\n", (int) (byte) 100, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((long) (byte) 10);
        java.lang.String str14 = strBuilder10.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        boolean boolean70 = strBuilder0.equals((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) "aaaaaaaaaaa32", 257, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator('e', 'g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "true\n10" + "'", str14, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence5 = strBuilder1.subSequence(6, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(writer2);
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder9.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder9.appendln((double) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder9.setLength(32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        int int47 = strBuilder26.lastIndexOf('\000', 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder26.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.setNullText("false");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        int int25 = strBuilder23.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean30 = strBuilder15.equals(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll('#');
        boolean boolean35 = strBuilder11.equalsIgnoreCase(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.append('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        boolean boolean19 = strBuilder17.contains(strMatcher18);
        java.util.stream.IntStream intStream20 = strBuilder17.codePoints();
        java.io.Reader reader21 = strBuilder17.asReader();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(reader21);
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight(106, (int) 'u', '4');
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        int int16 = strBuilder9.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendSeparator("");
        char[] charArray25 = strBuilder18.toCharArray((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.replace(strMatcher27, "###### true\n\n###", 210, 94, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[t, r, u, e, \n, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        int int21 = strBuilder3.lastIndexOf(' ', (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((float) '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceAll("lse41\na\n", "\nfalse\n");
        boolean boolean41 = strBuilder39.endsWith("\n\ntrue\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteFirst(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        int int7 = strBuilder5.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst('\n', '\n');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strBuilder10.substring(93, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder9.indexOf(strMatcher10, 254);
        int int15 = strBuilder9.indexOf("#####################100.0### true\n\ntrue4", (int) ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln(strBuilder65, 68, (int) '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        int int70 = strBuilder62.lastIndexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder43.append(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(" \nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln((float) 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.insert((int) (byte) 1, (float) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        boolean boolean35 = strBuilder21.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder16.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder38.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(14);
        java.lang.StringBuffer stringBuffer44 = strBuilder43.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendln(stringBuffer44, 38, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(stringBuffer44);
        org.junit.Assert.assertEquals(stringBuffer44.toString(), "4true\n14\n");
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("");
        java.lang.String str19 = strBuilder18.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        java.lang.Object[] objArray35 = new java.lang.Object[] { strBuilder25, strBuilder29, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder18.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder18.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setNewLineText("0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln("");
        java.lang.String str87 = strBuilder83.rightString((int) '4');
        java.lang.Object[] objArray88 = new java.lang.Object[] { strBuilder75, wildcardClass80, 10.0d, (-1.0d), str87 };
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder66.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = null;
        int int94 = strBuilder89.indexOf(strMatcher92, 52);
        java.lang.String str95 = strBuilder89.getNewLineText();
        char[] charArray96 = strBuilder89.toCharArray();
        char[] charArray97 = strBuilder60.getChars(charArray96);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder12.appendln(charArray96);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\n" + "'", str87, "\n");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "#\ntrue\n\n100 04-1.0 true4Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "#\ntrue\n\n100 04-1.0 true4Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[#, \n, t, r, u, e, \n, \n, 1, 0, 0,  , 0, 4, -, 1, ., 0,  , t, r, u, e, 4, O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "#\ntrue\n\n100 04-1.0 true4Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "#\ntrue\n\n100 04-1.0 true4Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[#, \n, t, r, u, e, \n, \n, 1, 0, 0,  , 0, 4, -, 1, ., 0,  , t, r, u, e, 4, O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.replaceAll('f', 'u');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.append((long) 30);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "0.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.replace(strMatcher9, "0.0\n", 18, 12, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.appendln("true\n0.0", 3, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.String str30 = strBuilder28.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.deleteCharAt(93);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 93");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.setNewLineText("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.append(10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll('a', '\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert((int) (short) 100, (double) 75);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        java.util.stream.IntStream intStream38 = strBuilder33.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(21);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader3 = strBuilder2.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        char[] charArray9 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.appendln(charArray9);
        org.junit.Assert.assertNotNull(reader3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " \n\nclass java.lang.Object10.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , \n, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln((float) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight(0, (int) (short) -1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        int int43 = strBuilder36.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder31.appendln((java.lang.Object) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("4true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.append((java.lang.Object) "4true\n10############################### true\n\n");
        int int53 = strBuilder27.indexOf("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.", 8);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("e\n0.0\nass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        int int12 = strBuilder8.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append("\ntrue\n\n");
        java.lang.CharSequence charSequence15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.append(charSequence15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str21 = strBuilder17.rightString((int) '4');
        java.lang.String str23 = strBuilder17.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.append(0L);
        java.util.stream.IntStream intStream32 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('\n', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setNewLineText("\n\nclassajava.");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        int int44 = strBuilder41.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.replaceAll(strMatcher45, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((long) (byte) 10);
        java.lang.String str72 = strBuilder68.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder77, wildcardClass82, 10.0d, (-1.0d), str89 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder68.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder58.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder49.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder35.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder16.appendWithSeparators(objArray90, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\n" + "'", str23, "\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "true\n10" + "'", str72, "true\n10");
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('4', 'a');
        boolean boolean57 = strBuilder55.startsWith("tru\n0.0\ntrue\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.util.stream.IntStream intStream15 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        java.lang.String str31 = strBuilder27.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str48 = strBuilder44.rightString((int) '4');
        java.lang.Object[] objArray49 = new java.lang.Object[] { strBuilder36, wildcardClass41, 10.0d, (-1.0d), str48 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder17.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "\n\nclass java.lang.Object10.0-1.0\n");
        int int63 = strBuilder61.lastIndexOf("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendSeparator('t');
        java.lang.String str69 = strBuilder67.leftString(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln("");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10" + "'", str31, "true\n10");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n" + "'", str48, "\n");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "1444444444444444444444" + "'", str69, "1444444444444444444444");
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst('#', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(6, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert((int) (byte) -1, (float) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendSeparator('3');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendFixedWidthPadLeft((int) 'r', 32, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendPadding(66, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.replaceFirst('.', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder13.setNewLineText("\n1.0 \n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert(32, (double) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendln(stringBuffer17, (int) (byte) -1, 10);
        int int23 = strBuilder20.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator('a', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replace(strMatcher40, "true\n52##################################################################################################false\n3678", 53, 56, (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('u', 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendNewLine();
        java.lang.String str57 = strBuilder55.rightString(12);
        boolean boolean58 = strBuilder55.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "###########\n" + "'", str57, "###########\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 10.0d, 39, '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll(strMatcher55, "\ntrue\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.ensureCapacity(78);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        java.util.stream.IntStream intStream67 = strBuilder66.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder72.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strBuilder72.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder54.insert(10, (java.lang.Object) strTokenizer74);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        boolean boolean26 = strBuilder12.equalsIgnoreCase(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) 32);
        java.lang.StringBuffer stringBuffer35 = strBuilder32.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.insert(22, (java.lang.Object) stringBuffer35);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "4\n1.0\n32.0");
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder28.append('a');
        char[] charArray59 = strBuilder58.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "true\n0.0\ntrue\nra");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "true\n0.0\ntrue\nra");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[t, r, u, e, \n, 0, ., 0, \n, t, r, u, e, \n, r, a]");
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.ensureCapacity(100);
        boolean boolean11 = strBuilder10.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10100.0\n45\n\ntrue\n\n100.0-1.0 true\n\n", 41, (int) (byte) 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(false);
        int int24 = strBuilder23.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder30.lastIndexOf(strMatcher31, (int) 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendNewLine();
        boolean boolean65 = strBuilder51.equalsIgnoreCase(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder46.append((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder46.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteAll(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendSeparator('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.insert(0, 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator('t');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence19 = strBuilder14.subSequence(94, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendln('4');
        java.io.Reader reader31 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder9.appendSeparator('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((int) (short) 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator("ng.Object10.0-1.0\ntrue\n10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendPadding((int) 'r', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        boolean boolean13 = strBuilder7.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        boolean boolean44 = strBuilder30.equalsIgnoreCase(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder25.append((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        char[] charArray51 = strBuilder46.toCharArray();
        char[] charArray52 = strBuilder30.getChars(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder24.appendln(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder24.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder24.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder7.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendSeparator('f');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append("###3##########################t100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendFixedWidthPadRight(4, 94, '.');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ ]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendSeparator("100.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator('u');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        int int44 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder8.appendln(' ');
        int int47 = strBuilder46.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 36 + "'", int44 == 36);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 38 + "'", int47 == 38);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll("ass j", "true");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendln((float) 11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll('\n');
        java.lang.Class<?> wildcardClass30 = strBuilder29.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        int int36 = strBuilder33.indexOf(strMatcher34, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendSeparator('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder56.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder48.appendln(strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder38.append((java.lang.CharSequence) strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder38.appendFixedWidthPadRight(10, (int) '\000', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder93.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence97 = strBuilder94.subSequence(1, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.replace(strMatcher12, "2.0", 113, 38, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replace(strMatcher11, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder41.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder38.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strBuilder73.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder16.appendSeparator("\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.replaceAll('g', '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteFirst("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('g', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendSeparator('3');
        java.io.Writer writer16 = strBuilder15.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        int int23 = strBuilder11.indexOf(strMatcher22);
        int int24 = strBuilder11.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.io.Writer writer19 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        char[] charArray60 = strBuilder55.toCharArray();
        char[] charArray61 = strBuilder39.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder25.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder7.insert(1, (java.lang.Object) charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder7.replaceFirst(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder7.appendNewLine();
        java.lang.String str69 = strBuilder68.getNewLineText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader4 = strBuilder3.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append((java.lang.CharSequence) strBuilder3);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(true);
        int int9 = strBuilder2.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        boolean boolean14 = strBuilder11.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder27.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst(' ');
        java.io.Reader reader43 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.append(strBuilder53);
        java.lang.StringBuffer stringBuffer55 = strBuilder53.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.appendln(stringBuffer55);
        boolean boolean58 = strBuilder30.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        int int62 = strBuilder30.indexOf(strMatcher60, 24);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }
}
