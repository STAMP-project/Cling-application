import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours22.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = hours19.minus(hours22);
        org.joda.time.Hours hours27 = hours11.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        boolean boolean32 = hours26.isGreaterThan(hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours34.minus(hours35);
        org.joda.time.Hours hours39 = hours33.minus(hours34);
        org.joda.time.Hours hours41 = hours34.dividedBy(1);
        org.joda.time.Duration duration42 = hours34.toStandardDuration();
        boolean boolean43 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours44 = hours30.negated();
        org.joda.time.Hours hours45 = hours44.negated();
        org.joda.time.Hours hours47 = hours45.multipliedBy((int) 'a');
        org.joda.time.Hours hours48 = hours47.negated();
        boolean boolean49 = hours9.isGreaterThan(hours48);
        org.joda.time.MutablePeriod mutablePeriod50 = hours48.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(mutablePeriod50);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours26 = hours20.minus(hours22);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours27.minus((int) (short) 0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        int int39 = hours34.get(durationFieldType38);
        int int40 = hours22.get(durationFieldType38);
        boolean boolean41 = hours0.equals((java.lang.Object) hours22);
        java.lang.String str42 = hours22.toString();
        org.joda.time.Duration duration43 = hours22.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 7 + "'", int39 == 7);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT3H" + "'", str42, "PT3H");
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        int int9 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours16 = hours9.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours39.minus(hours40);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.Hours hours49 = hours46.plus(8);
        org.joda.time.Hours hours50 = hours40.minus(hours46);
        int int51 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        org.joda.time.Hours hours56 = hours52.minus(hours53);
        boolean boolean58 = hours53.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours59 = null;
        org.joda.time.Hours hours60 = hours53.minus(hours59);
        org.joda.time.Hours hours61 = hours60.negated();
        org.joda.time.Hours hours62 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.MutablePeriod mutablePeriod63 = hours60.toMutablePeriod();
        boolean boolean64 = hours8.equals((java.lang.Object) hours60);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.MutablePeriod mutablePeriod11 = hours9.toMutablePeriod();
        org.joda.time.PeriodType periodType12 = hours9.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.dividedBy((int) 'a');
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Duration duration10 = hours6.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod11 = hours6.toMutablePeriod();
        org.joda.time.Period period12 = hours6.toPeriod();
        boolean boolean13 = hours1.isGreaterThan(hours6);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Duration duration4 = hours3.toStandardDuration();
        org.joda.time.Hours hours6 = hours3.plus((-66));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        java.lang.String str19 = hours18.toString();
        int int20 = hours18.size();
        int int21 = hours18.getHours();
        boolean boolean22 = hours13.isGreaterThan(hours18);
        java.lang.String str23 = hours13.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT-1H" + "'", str19, "PT-1H");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-7H" + "'", str23, "PT-7H");
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Hours hours18 = hours15.plus(8);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        boolean boolean23 = hours18.isSupported(durationFieldType22);
        int int24 = hours12.get(durationFieldType22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours25.isSupported(durationFieldType31);
        org.joda.time.Hours hours34 = hours25.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours35 = hours12.plus(hours25);
        org.joda.time.DurationFieldType durationFieldType36 = hours35.getFieldType();
        boolean boolean37 = hours2.isSupported(durationFieldType36);
        org.joda.time.Hours hours39 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = hours42.isSupported(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours46.minus(hours47);
        boolean boolean51 = hours42.isLessThan(hours47);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours52.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = hours52.getFieldType();
        boolean boolean56 = hours42.isSupported(durationFieldType55);
        int int57 = hours39.get(durationFieldType55);
        boolean boolean58 = hours2.isSupported(durationFieldType55);
        org.joda.time.Hours hours60 = hours2.multipliedBy(364);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hours60);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours26.plus(8);
        int int41 = hours40.getHours();
        org.joda.time.Hours hours43 = hours40.multipliedBy(8);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        java.lang.String str46 = hours44.toString();
        org.joda.time.Hours hours48 = hours44.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours49 = hours40.plus(hours48);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 15 + "'", int41 == 15);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT7H" + "'", str46, "PT7H");
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours14 = hours12.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours30 = hours12.plus(hours29);
        org.joda.time.Period period31 = hours12.toPeriod();
        org.joda.time.Hours hours32 = hours7.plus(hours12);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        int int34 = hours33.getHours();
        org.joda.time.Hours hours36 = hours33.plus(10);
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period40 = hours39.toPeriod();
        org.joda.time.Hours hours41 = hours36.plus(hours39);
        org.joda.time.Hours hours43 = hours41.plus(7);
        int int44 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours41);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours3);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = hours6.getValue(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        int int10 = hours9.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours61 = org.joda.time.Hours.hours(100);
        int int62 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.Hours hours63 = hours61.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(hours63);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Hours hours40 = hours21.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.Duration duration45 = hours41.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod46 = hours41.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        java.lang.String str50 = hours47.toString();
        boolean boolean51 = hours41.isGreaterThan(hours47);
        org.joda.time.Hours hours53 = hours47.minus(10);
        org.joda.time.Hours hours54 = hours47.negated();
        org.joda.time.Hours hours56 = hours54.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType58 = hours54.getFieldType(0);
        java.lang.Class<?> wildcardClass59 = hours54.getClass();
        boolean boolean60 = hours40.equals((java.lang.Object) wildcardClass59);
        org.joda.time.Hours hours62 = hours40.plus((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = hours40.getValue((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT8H" + "'", str50, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        org.joda.time.Hours hours34 = hours9.plus(0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.PeriodType periodType45 = hours35.getPeriodType();
        int int46 = hours35.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours35.getFieldType((int) (short) 0);
        int int49 = hours35.size();
        int int50 = hours35.size();
        org.joda.time.Period period51 = hours35.toPeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        boolean boolean56 = hours35.isGreaterThan(hours54);
        boolean boolean57 = hours9.isGreaterThan(hours35);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.Hours hours63 = hours60.plus(8);
        int int64 = hours63.getHours();
        org.joda.time.Hours hours66 = hours63.multipliedBy(0);
        org.joda.time.DurationFieldType durationFieldType67 = hours63.getFieldType();
        boolean boolean68 = hours35.isSupported(durationFieldType67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7 + "'", int46 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 16 + "'", int64 == 16);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }
}

