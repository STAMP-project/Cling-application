import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = tTestImpl1.t(statisticalSummary2, statisticalSummary3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        java.lang.Class<?> wildcardClass79 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary48 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.homoscedasticT(statisticalSummary48, statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl0.homoscedasticT(statisticalSummary29, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl0.setDistribution(tDistribution29);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary31 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = tTestImpl0.tTest(statisticalSummary31, statisticalSummary32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl1.tTest(1.384536475695448d, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl0.setDistribution(tDistribution38);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = tTestImpl0.tTest(0.0d, statisticalSummary41, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double54 = tTestImpl0.t((double) 0, statisticalSummary53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(statisticalSummary78, statisticalSummary79, 0.9566618438474437d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9566618438474437");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl23.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl28.t(doubleArray58, doubleArray73);
        double double76 = tTestImpl23.t(0.07560555610353314d, doubleArray58);
        double double77 = tTestImpl0.t((double) (short) 10, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3965146696271626d + "'", double76 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.homoscedasticTTest(statisticalSummary80, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = tTestImpl0.tTest(statisticalSummary66, statisticalSummary67, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl1.setDistribution(tDistribution8);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double12 = tTestImpl1.t(4.656123925628981d, statisticalSummary11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.tTest(statisticalSummary90, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl1.tTest(0.5172120199559697d, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl1.setDistribution(tDistribution54);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = tTestImpl1.tTest(1.3573057358494125d, statisticalSummary57, 3.8d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 3.8");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double double39 = tTestImpl23.tTest((double) (short) 100, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double[] doubleArray62 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double63 = tTestImpl42.t((double) '4', doubleArray62);
        double double64 = tTestImpl23.tTest((double) (short) 100, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl23.tTest((double) (byte) 1, doubleArray73);
        double[] doubleArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.pairedTTest(doubleArray73, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.01613264369976175d + "'", double39 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.09656583816243881d) + "'", double63 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.07560555610353314d + "'", double64 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.3793626154059051d + "'", double80 == 0.3793626154059051d);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl1.tTest(1.3997215400947067d, statisticalSummary91, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.homoscedasticTTest(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, 0.36242697487793474d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl1.tTest(statisticalSummary57, statisticalSummary58, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl0.tTest(1.3930877336894083d, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest(0.35800486798369846d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((-2.8418588844347075d), doubleArray60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest(1.3404872472421194d, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.656123925628981d + "'", double76 == 4.656123925628981d);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(0.0d, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.tTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2.2210142777360953d + "'", double85 == 2.2210142777360953d);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = tTestImpl0.tTest(1.357841932773502d, statisticalSummary8, (-2.8418588844347075d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.8418588844347075");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary69 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double70 = tTestImpl0.homoscedasticTTest(statisticalSummary68, statisticalSummary69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl50.t(3.8d, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl0.t(doubleArray63, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.homoscedasticT(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8463073355328574d + "'", double70 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.tTest(1.3930877336894083d, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl0.tTest(statisticalSummary55, statisticalSummary56, 0.2752975451271431d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl4.tTest((double) (short) 100, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double double45 = tTestImpl4.tTest((double) (short) 100, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl4.tTest((double) (byte) 1, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(doubleArray54, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest(0.046643592901765896d, statisticalSummary87, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.01613264369976175d + "'", double20 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.07560555610353314d + "'", double45 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.3793626154059051d + "'", double61 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.975807309953049d) + "'", double85 == (-0.975807309953049d));
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.tTest((double) 0L, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary69 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double70 = tTestImpl0.t((double) 1.0f, statisticalSummary69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        java.lang.Class<?> wildcardClass35 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t((-3.4598062306100013d), statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl50.t(3.8d, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl0.t(doubleArray63, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8463073355328574d + "'", double70 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.t(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.t((double) (-1), statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double21 = tTestImpl0.t(0.07560555610353314d, statisticalSummary20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = tTestImpl1.tTest(statisticalSummary85, statisticalSummary86, 2.2210142777360953d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2210142777360953");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl40.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl40.setDistribution(tDistribution45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        double double68 = tTestImpl40.t((double) 0L, doubleArray52);
        double double69 = tTestImpl0.tTest((double) 0.0f, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.t(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.466666666666667d + "'", double68 == 4.466666666666667d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.046643592901765896d + "'", double69 == 0.046643592901765896d);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        double[] doubleArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.pairedT(doubleArray43, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl0.tTest(statisticalSummary76, statisticalSummary77, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest((-3.5d), statisticalSummary96, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        java.lang.Class<?> wildcardClass78 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double47 = tTestImpl1.t((double) (short) 10, statisticalSummary46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl1.setDistribution(tDistribution35);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary37 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double39 = tTestImpl1.tTest(statisticalSummary37, statisticalSummary38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest(0.07560555610353314d, statisticalSummary76, 0.5339796283719219d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.5339796283719219");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double85 = tTestImpl1.tTest((double) 0L, statisticalSummary84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl39.setDistribution(tDistribution40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl39.homoscedasticT(doubleArray54, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray60, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest((double) (-1.0f), statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1115227041167497d) + "'", double76 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.6198140498569726d + "'", double91 == 1.6198140498569726d);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = tTestImpl0.tTest(0.9566618438474437d, statisticalSummary40, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl36.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray90 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double91 = tTestImpl42.tTest(0.405429217622299d, doubleArray90);
        double double92 = tTestImpl40.t(3.8d, doubleArray90);
        double double93 = tTestImpl36.t((double) (short) 1, doubleArray90);
        double double94 = tTestImpl31.t(0.9839224922440002d, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest((double) 0, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.1143321549278642d + "'", double91 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-10.500000000000002d) + "'", double92 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-3.5d) + "'", double93 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.4598062306100013d) + "'", double94 == (-3.4598062306100013d));
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl0.tTest(statisticalSummary86, statisticalSummary87, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl1.tTest((double) 1.0f, statisticalSummary77, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray40 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl36.tTest(doubleArray40, doubleArray53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.pairedT(doubleArray53, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest((-1.0d), statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2806531524060034d + "'", double55 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = tTestImpl1.tTest(statisticalSummary65, statisticalSummary66, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.tTest(0.07560555610353314d, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl31.t(doubleArray61, doubleArray76);
        boolean boolean80 = tTestImpl9.tTest((double) (short) 0, doubleArray61, Double.NaN);
        double double81 = tTestImpl1.t((double) (short) 100, doubleArray61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary83 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = tTestImpl1.homoscedasticTTest(statisticalSummary82, statisticalSummary83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-2.8418588844347075d) + "'", double81 == (-2.8418588844347075d));
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.t((double) (byte) -1, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray10 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution11 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution11);
        double[] doubleArray18 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray23 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double24 = tTestImpl12.homoscedasticT(doubleArray18, doubleArray23);
        double double25 = tTestImpl6.tTest(doubleArray10, doubleArray23);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl6.setDistribution(tDistribution26);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        tTestImpl6.setDistribution(tDistribution28);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray35 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        double double50 = tTestImpl31.tTest(doubleArray35, doubleArray48);
        double double51 = tTestImpl6.t(0.35800486798369846d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray56 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl52.tTest(doubleArray56, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl52.setDistribution(tDistribution72);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl52.setDistribution(tDistribution74);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl77 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray81 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl77.tTest(doubleArray81, doubleArray94);
        double double97 = tTestImpl52.t(0.35800486798369846d, doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = tTestImpl1.homoscedasticTTest(doubleArray48, doubleArray94, 0.405429217622299d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.405429217622299d) + "'", double24 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2806531524060034d + "'", double25 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2806531524060034d + "'", double50 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.384536475695448d + "'", double51 == 1.384536475695448d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.2806531524060034d + "'", double71 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.2806531524060034d + "'", double96 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.384536475695448d + "'", double97 == 1.384536475695448d);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl40.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl40.setDistribution(tDistribution45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        double double68 = tTestImpl40.t((double) 0L, doubleArray52);
        double double69 = tTestImpl0.tTest((double) 0.0f, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl0.tTest((-10.500000000000002d), statisticalSummary71, 4.533333333333333d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.533333333333333");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.466666666666667d + "'", double68 == 4.466666666666667d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.046643592901765896d + "'", double69 == 0.046643592901765896d);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double5 = tTestImpl0.t((double) 10L, statisticalSummary4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl1.tTest((double) (short) -1, statisticalSummary78, (-0.975807309953049d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.975807309953049");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl22.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl22.t(10.0d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double double74 = tTestImpl22.t(100.0d, doubleArray72);
        double double75 = tTestImpl0.t((double) 0L, doubleArray72);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.t((-3.9998096691255283d), statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 3.8d + "'", double58 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.8418588844347075d) + "'", double74 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3997215400947067d + "'", double75 == 1.3997215400947067d);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.t((-1.0000000000000002d), statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl0.tTest(0.5339796283719219d, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl0.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl0.t(1.3930877336894083d, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl1.tTest((-1.587268255506484d), statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.homoscedasticTTest(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double[] doubleArray48 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double49 = tTestImpl28.t((double) '4', doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl52.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl52.homoscedasticT(doubleArray67, doubleArray73);
        double double90 = tTestImpl28.t(0.35800486798369846d, doubleArray73);
        double double91 = tTestImpl0.t((double) (byte) -1, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.homoscedasticT(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.09656583816243881d) + "'", double49 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.1115227041167497d) + "'", double89 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.442799675467754d + "'", double90 == 4.442799675467754d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.533333333333333d + "'", double91 == 4.533333333333333d);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl0.setDistribution(tDistribution81);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = tTestImpl1.tTest(statisticalSummary51, statisticalSummary52, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest(statisticalSummary84, statisticalSummary85, 0.07560555610353314d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.tTest((double) 100L, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        tTestImpl0.setDistribution(tDistribution72);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = tTestImpl0.tTest((double) 100, statisticalSummary75, 0.9675565918996828d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9675565918996828");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = tTestImpl0.tTest(0.0d, statisticalSummary2, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest(statisticalSummary55, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest(statisticalSummary86, statisticalSummary87, 4.533333333333333d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.533333333333333");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.t((double) 'a', statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        java.lang.Class<?> wildcardClass64 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.t((double) (short) -1, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest((double) (byte) 10, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double76 = tTestImpl1.t((double) '4', statisticalSummary75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t((-1.0105336460356238d), statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.tTest(0.9755634976417653d, doubleArray35);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.t(3.8d, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2674771174879971d + "'", double38 == 0.2674771174879971d);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl0.tTest(0.046643592901765896d, statisticalSummary96, 1.3404872472421194d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3404872472421194");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary27 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = tTestImpl0.tTest(statisticalSummary27, statisticalSummary28, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 32.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl1.t(0.15639940166959065d, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.homoscedasticTTest(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl0.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl0.homoscedasticT(statisticalSummary65, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl49.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray69 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl65.tTest(doubleArray69, doubleArray82);
        double double85 = tTestImpl49.t(10.0d, doubleArray69);
        double[] doubleArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = tTestImpl0.tTest(doubleArray69, doubleArray86, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.2806531524060034d + "'", double84 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.8d + "'", double85 == 3.8d);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        java.lang.Class<?> wildcardClass81 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.t((-3.5d), statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest((-0.8059002806605887d), statisticalSummary76, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 35.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = tTestImpl0.tTest((double) 1, statisticalSummary76, 1.3930877336894083d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3930877336894083");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl0.setDistribution(tDistribution81);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl1.t(100.0d, doubleArray51);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = tTestImpl1.tTest(statisticalSummary54, statisticalSummary55, 0.8463073355328574d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.8463073355328574");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.8418588844347075d) + "'", double53 == (-2.8418588844347075d));
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl1.setDistribution(tDistribution35);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary37 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double39 = tTestImpl1.homoscedasticT(statisticalSummary37, statisticalSummary38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.tTest(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        java.lang.Class<?> wildcardClass29 = doubleArray12.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.tTest(statisticalSummary75, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl0.tTest(statisticalSummary59, statisticalSummary60, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double29 = tTestImpl0.t(0.9483011827161071d, statisticalSummary28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl0.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl0.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl0.t(1.4411111919348023d, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = tTestImpl1.tTest(0.12673187601587688d, statisticalSummary7, (-3.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        org.apache.commons.math.distribution.TDistribution tDistribution85 = null;
        tTestImpl1.setDistribution(tDistribution85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl1.tTest(statisticalSummary87, statisticalSummary88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        java.lang.Class<?> wildcardClass42 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.t((-2.8418588844347075d), statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        java.lang.Class<?> wildcardClass78 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary36 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double37 = tTestImpl1.t((double) 10, statisticalSummary36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl1.setDistribution(tDistribution35);
        java.lang.Class<?> wildcardClass37 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl1.tTest(1.3997215400947067d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.t((double) (byte) 0, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t(3.8d, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        java.lang.Class<?> wildcardClass94 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest(statisticalSummary46, statisticalSummary47, 2.2210142777360953d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2210142777360953");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((-2.8418588844347075d), doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl1.homoscedasticT(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.656123925628981d + "'", double76 == 4.656123925628981d);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.tTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl0.tTest((-1.1115227041167497d), statisticalSummary82, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.tTest((double) 0L, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, 0.9839224922440002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9839224922440002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.t(Double.NaN, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        double double22 = tTestImpl0.tTest(0.1143321549278642d, doubleArray19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(statisticalSummary23, statisticalSummary24, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.25739035342831595d + "'", double22 == 0.25739035342831595d);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl0.tTest(statisticalSummary77, statisticalSummary78, (-0.8059002806605887d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.8059002806605887");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl1.setDistribution(tDistribution81);
        org.apache.commons.math.distribution.TDistribution tDistribution83 = null;
        tTestImpl1.setDistribution(tDistribution83);
        org.apache.commons.math.distribution.TDistribution tDistribution85 = null;
        tTestImpl1.setDistribution(tDistribution85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl1.tTest((-0.975807309953049d), statisticalSummary88, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        double[] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest((double) (-1), doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.tTest(0.01613264369976175d, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = tTestImpl1.tTest(statisticalSummary61, statisticalSummary62, 2.2085058899383956d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2085058899383956");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        java.lang.Class<?> wildcardClass70 = doubleArray66.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double54 = tTestImpl0.t((double) (short) -1, statisticalSummary53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        double double55 = tTestImpl24.t((double) 10.0f, doubleArray47);
        double double56 = tTestImpl0.t((-1.0000000000000002d), doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5339796283719219d + "'", double55 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.088109431399388d + "'", double56 == 1.088109431399388d);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest(statisticalSummary72, statisticalSummary73, 0.9302024075262618d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9302024075262618");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.tTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.t(0.0d, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl22.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl22.homoscedasticT(doubleArray37, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl22.t((-0.975807309953049d), doubleArray73);
        double double76 = tTestImpl1.t(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.t((-1.1115227041167497d), statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.1115227041167497d) + "'", double59 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.4411111919348023d + "'", double75 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3997215400947067d + "'", double76 == 1.3997215400947067d);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        double double22 = tTestImpl0.tTest(0.1143321549278642d, doubleArray19);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.t(statisticalSummary23, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.25739035342831595d + "'", double22 == 0.25739035342831595d);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl5.tTest((double) (short) 100, doubleArray14);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl5.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl5.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl28.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray50 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        double[] doubleArray58 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray63 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double64 = tTestImpl52.homoscedasticT(doubleArray58, doubleArray63);
        double double65 = tTestImpl46.tTest(doubleArray50, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl33.t(doubleArray63, doubleArray78);
        double double81 = tTestImpl28.t(0.07560555610353314d, doubleArray63);
        double double82 = tTestImpl5.t((double) (short) 10, doubleArray63);
        double double83 = tTestImpl1.t((-0.975807309953049d), doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl1.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl1.tTest(4.656123925628981d, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.01613264369976175d + "'", double21 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.405429217622299d) + "'", double64 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.2806531524060034d + "'", double65 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3965146696271626d + "'", double81 == 1.3965146696271626d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9755634976417653d + "'", double82 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.4411111919348023d + "'", double83 == 1.4411111919348023d);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        java.lang.Class<?> wildcardClass79 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.homoscedasticT(statisticalSummary89, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = tTestImpl0.tTest(1.3404872472421194d, statisticalSummary20, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl39.setDistribution(tDistribution40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl39.homoscedasticT(doubleArray54, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray60, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.homoscedasticTTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1115227041167497d) + "'", double76 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.6198140498569726d + "'", double91 == 1.6198140498569726d);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.tTest(Double.NaN, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl6.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl6.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl6.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        tTestImpl27.setDistribution(tDistribution28);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray48 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl44.tTest(doubleArray48, doubleArray61);
        double double64 = tTestImpl27.homoscedasticT(doubleArray42, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl27.t((-0.975807309953049d), doubleArray78);
        double double81 = tTestImpl6.t(0.0d, doubleArray78);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl0.homoscedasticT(doubleArray78, doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2806531524060034d + "'", double63 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.1115227041167497d) + "'", double64 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.4411111919348023d + "'", double80 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.3997215400947067d + "'", double81 == 1.3997215400947067d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.405429217622299d + "'", double96 == 0.405429217622299d);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        java.lang.Class<?> wildcardClass63 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.t(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        java.lang.Class<?> wildcardClass71 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl0.tTest(0.0d, statisticalSummary56, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        double double62 = tTestImpl21.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl21.tTest((double) (byte) 1, doubleArray71);
        double double79 = tTestImpl7.t((-1.0d), doubleArray71);
        double double80 = tTestImpl0.t(1.3930877336894083d, doubleArray71);
        double[] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest(4.733320644608368d, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.07560555610353314d + "'", double62 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.3793626154059051d + "'", double78 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.088109431399388d + "'", double79 == 1.088109431399388d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.9675565918996828d + "'", double80 == 0.9675565918996828d);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        java.lang.Class<?> wildcardClass20 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl1.tTest(statisticalSummary88, statisticalSummary89, 4.733320644608368d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.733320644608368");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl1.setDistribution(tDistribution94);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.t((double) (-1), statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        java.lang.Class<?> wildcardClass23 = doubleArray20.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double[] doubleArray44 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double45 = tTestImpl24.t((double) '4', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl1.tTest(0.37390096630005876d, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.09656583816243881d) + "'", double45 == (-0.09656583816243881d));
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((-2.8418588844347075d), doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl1.tTest(statisticalSummary79, statisticalSummary80, (-26.000000000000004d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -26.000000000000004");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.656123925628981d + "'", double76 == 4.656123925628981d);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl1.tTest((double) ' ', statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = tTestImpl0.tTest(statisticalSummary44, statisticalSummary45, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl0.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl0.setDistribution(tDistribution88);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl0.tTest(statisticalSummary92, statisticalSummary93, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl1.tTest(statisticalSummary76, statisticalSummary77, 0.2752975451271431d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl0.setDistribution(tDistribution43);
        java.lang.Class<?> wildcardClass45 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = tTestImpl0.tTest(statisticalSummary23, statisticalSummary24, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl1.setDistribution(tDistribution8);
        java.lang.Class<?> wildcardClass10 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl0.homoscedasticT(statisticalSummary40, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl1.tTest(statisticalSummary91, statisticalSummary92, 1.4411111919348023d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4411111919348023");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl0.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl0.homoscedasticT(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl1.setDistribution(tDistribution51);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(1.384536475695448d, statisticalSummary79, 0.046643592901765896d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = tTestImpl0.tTest(0.0d, statisticalSummary45, (-2.8418588844347075d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.8418588844347075");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl1.setDistribution(tDistribution67);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl1.tTest(statisticalSummary38, statisticalSummary39, (-3.9998096691255283d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -3.9998096691255283");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl4.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray25 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl21.tTest(doubleArray25, doubleArray38);
        double double41 = tTestImpl4.homoscedasticT(doubleArray19, doubleArray25);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl4.t((-0.975807309953049d), doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl4.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl4.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl4.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl4.setDistribution(tDistribution64);
        double[] doubleArray71 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double72 = tTestImpl4.t(1.0377339947605275d, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = tTestImpl1.tTest((double) (-1), doubleArray71, (-1.0000000000000002d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0000000000000002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2806531524060034d + "'", double40 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.1115227041167497d) + "'", double41 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.4411111919348023d + "'", double57 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5703029263335007d + "'", double72 == 0.5703029263335007d);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest(0.5172120199559697d, statisticalSummary47, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest((double) 100.0f, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray45 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        double double60 = tTestImpl41.tTest(doubleArray45, doubleArray58);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl41.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl41.setDistribution(tDistribution63);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl66.tTest((double) (short) 100, doubleArray75);
        double double83 = tTestImpl41.t((double) (byte) 1, doubleArray75);
        double double84 = tTestImpl0.tTest(3.8d, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2806531524060034d + "'", double60 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.01613264369976175d + "'", double82 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.987358558121667d + "'", double83 == 0.987358558121667d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.4450411875109115d + "'", double84 == 0.4450411875109115d);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = tTestImpl0.tTest(statisticalSummary62, statisticalSummary63, 4.442799675467754d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.442799675467754");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray51 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl47.tTest(doubleArray51, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl34.t(doubleArray64, doubleArray79);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl1.pairedT(doubleArray79, doubleArray94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.t((double) (byte) -1, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.2806531524060034d + "'", double66 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray65 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl61.tTest(doubleArray65, doubleArray78);
        boolean boolean82 = tTestImpl43.tTest(1.357841932773502d, doubleArray65, 0.15639940166959065d);
        double double83 = tTestImpl0.t((-3.9998096691255283d), doubleArray65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary84 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.t(statisticalSummary84, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2806531524060034d + "'", double80 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.733320644608368d + "'", double83 == 4.733320644608368d);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        double double69 = tTestImpl0.t(1.3965146696271626d, doubleArray66);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tTestImpl0.tTest(1.384536475695448d, statisticalSummary71, 0.15639940166959065d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.3404872472421194d + "'", double69 == 1.3404872472421194d);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray38 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl34.tTest(doubleArray38, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl21.t(doubleArray51, doubleArray66);
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double[] doubleArray90 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double91 = tTestImpl70.t((double) '4', doubleArray90);
        double double92 = tTestImpl0.t(doubleArray66, doubleArray90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(0.0d, statisticalSummary94, (-14.881283513379177d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -14.881283513379177");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2806531524060034d + "'", double53 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.09656583816243881d) + "'", double91 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.5172120199559697d) + "'", double92 == (-0.5172120199559697d));
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary49 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double50 = tTestImpl0.tTest(0.0d, statisticalSummary49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double[] doubleArray48 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double49 = tTestImpl28.t((double) '4', doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl52.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl52.homoscedasticT(doubleArray67, doubleArray73);
        double double90 = tTestImpl28.t(0.35800486798369846d, doubleArray73);
        double double91 = tTestImpl0.t((double) (byte) -1, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.t(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.09656583816243881d) + "'", double49 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.1115227041167497d) + "'", double89 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.442799675467754d + "'", double90 == 4.442799675467754d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.533333333333333d + "'", double91 == 4.533333333333333d);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = tTestImpl0.t(statisticalSummary73, statisticalSummary74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = tTestImpl1.tTest(statisticalSummary65, statisticalSummary66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray24 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double double39 = tTestImpl20.tTest(doubleArray24, doubleArray37);
        boolean boolean41 = tTestImpl2.tTest(1.357841932773502d, doubleArray24, 0.15639940166959065d);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl43.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl43.homoscedasticT(doubleArray58, doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl1.homoscedasticTTest(doubleArray24, doubleArray64, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2806531524060034d + "'", double39 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1.1115227041167497d) + "'", double80 == (-1.1115227041167497d));
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl1.setDistribution(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl1.setDistribution(tDistribution40);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = tTestImpl1.tTest(0.0d, statisticalSummary43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.tTest((-1.587268255506484d), statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest(1.0377339947605275d, statisticalSummary73, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl0.homoscedasticTTest(statisticalSummary87, statisticalSummary88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.tTest((-3.9998096691255283d), statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl1.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.tTest(statisticalSummary81, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl0.setDistribution(tDistribution26);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary28 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double30 = tTestImpl0.homoscedasticTTest(statisticalSummary28, statisticalSummary29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray55 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl51.tTest(doubleArray55, doubleArray68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl38.t(doubleArray68, doubleArray83);
        double double86 = tTestImpl0.tTest(1.6198140498569726d, doubleArray83);
        java.lang.Class<?> wildcardClass87 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.2806531524060034d + "'", double70 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2752975451271431d + "'", double86 == 0.2752975451271431d);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray65 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution66);
        double[] doubleArray73 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray78 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double79 = tTestImpl67.homoscedasticT(doubleArray73, doubleArray78);
        double double80 = tTestImpl61.tTest(doubleArray65, doubleArray78);
        boolean boolean82 = tTestImpl43.tTest(1.357841932773502d, doubleArray65, 0.15639940166959065d);
        double double83 = tTestImpl0.t((-3.9998096691255283d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.405429217622299d) + "'", double79 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2806531524060034d + "'", double80 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.733320644608368d + "'", double83 == 4.733320644608368d);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80, 0.37390096630005876d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl0.tTest(0.0d, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        double double80 = tTestImpl1.t((double) 0, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl1.tTest((-26.000000000000004d), statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.3997215400947067d + "'", double80 == 1.3997215400947067d);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl0.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl0.setDistribution(tDistribution54);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = tTestImpl0.tTest(statisticalSummary56, statisticalSummary57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.tTest((double) (short) -1, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double24 = tTestImpl1.t(2.2085058899383956d, statisticalSummary23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = tTestImpl0.tTest((double) (byte) 0, statisticalSummary41, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl0.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl0.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl0.tTest(0.01613264369976175d, statisticalSummary30, 1.3965146696271626d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3965146696271626");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl0.tTest((-3.9998096691255283d), statisticalSummary64, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = tTestImpl0.tTest(0.9755634976417653d, statisticalSummary25, 2.2085058899383956d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 2.2085058899383956");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl40.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl40.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl40.setDistribution(tDistribution45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        double double68 = tTestImpl40.t((double) 0L, doubleArray52);
        double double69 = tTestImpl0.tTest((double) 0.0f, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl0.tTest(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.466666666666667d + "'", double68 == 4.466666666666667d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.046643592901765896d + "'", double69 == 0.046643592901765896d);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl0.setDistribution(tDistribution39);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary42 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double43 = tTestImpl0.tTest((-1.1115227041167497d), statisticalSummary42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = tTestImpl0.tTest(0.35800486798369846d, statisticalSummary59, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t((-14.881283513379177d), statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        double[] doubleArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = tTestImpl0.tTest(0.9483011827161071d, doubleArray90, (-2.2d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.2");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = tTestImpl1.tTest(0.9566618438474437d, statisticalSummary60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        double[] doubleArray68 = new double[] { 0.405429217622299d, (byte) -1, 10.0f, 0.5172120199559697d };
        double double69 = tTestImpl1.t(1.0377339947605275d, doubleArray68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl1.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl1.tTest(statisticalSummary72, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.405429217622299, -1.0, 10.0, 0.5172120199559697]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5703029263335007d + "'", double69 == 0.5703029263335007d);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = tTestImpl1.tTest(statisticalSummary88, statisticalSummary89, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = tTestImpl0.tTest((double) 0.0f, statisticalSummary77, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl1.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl1.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = tTestImpl1.tTest(0.15639940166959065d, statisticalSummary96, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double42 = tTestImpl0.t(0.987358558121667d, statisticalSummary41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl1.tTest((-0.5172120199559697d), statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl22.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl22.homoscedasticT(doubleArray37, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl22.t((-0.975807309953049d), doubleArray73);
        double double76 = tTestImpl1.t(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl1.t(statisticalSummary77, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.1115227041167497d) + "'", double59 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.4411111919348023d + "'", double75 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3997215400947067d + "'", double76 == 1.3997215400947067d);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary20 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.t(statisticalSummary20, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest(1.4421373443400007d, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest(1.357841932773502d, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl15.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl15.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl15.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl15.setDistribution(tDistribution79);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        tTestImpl15.setDistribution(tDistribution81);
        double[] doubleArray89 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double90 = tTestImpl15.t((double) (short) 0, doubleArray89);
        double double91 = tTestImpl1.t(0.5339796283719219d, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.t((double) 0L, statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9566618438474437d + "'", double90 == 0.9566618438474437d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9302024075262618d + "'", double91 == 0.9302024075262618d);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray13 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl9.tTest(doubleArray13, doubleArray26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl9.setDistribution(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl32 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution31);
        double[] doubleArray38 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray43 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double44 = tTestImpl32.homoscedasticT(doubleArray38, doubleArray43);
        double[] doubleArray52 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double53 = tTestImpl32.t((double) '4', doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl9.t(doubleArray52, doubleArray66);
        double double69 = tTestImpl1.t(0.2806531524060034d, doubleArray52);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary70 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = tTestImpl1.tTest(statisticalSummary70, statisticalSummary71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2806531524060034d + "'", double28 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.405429217622299d) + "'", double44 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.09656583816243881d) + "'", double53 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5172120199559697d + "'", double68 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.2085058899383956d + "'", double69 == 2.2085058899383956d);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl1.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl1.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl1.tTest(statisticalSummary95, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest((-0.4023317120818342d), statisticalSummary60, (-0.8059002806605887d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.8059002806605887");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl1.tTest(statisticalSummary57, statisticalSummary58, 1.384536475695448d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.384536475695448");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl0.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl0.setDistribution(tDistribution92);
        org.apache.commons.math.distribution.TDistribution tDistribution94 = null;
        tTestImpl0.setDistribution(tDistribution94);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl0.setDistribution(tDistribution96);
        org.apache.commons.math.distribution.TDistribution tDistribution98 = null;
        tTestImpl0.setDistribution(tDistribution98);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl1.t((double) 10L, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl1.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl1.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tTestImpl1.tTest(statisticalSummary81, statisticalSummary82, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9755634976417653d + "'", double76 == 0.9755634976417653d);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary43 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double45 = tTestImpl1.homoscedasticT(statisticalSummary43, statisticalSummary44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        tTestImpl0.setDistribution(tDistribution77);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        tTestImpl0.setDistribution(tDistribution79);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double83 = tTestImpl0.tTest(0.35800486798369846d, statisticalSummary82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.homoscedasticT(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.tTest(0.9755634976417653d, doubleArray35);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.t(0.9566618438474437d, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2674771174879971d + "'", double38 == 0.2674771174879971d);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = tTestImpl1.tTest(1.340995311971139d, statisticalSummary68, (-2.8418588844347075d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -2.8418588844347075");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double41 = tTestImpl0.t(1.340995311971139d, statisticalSummary40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest(0.982920007042921d, statisticalSummary65, 1.3404872472421194d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3404872472421194");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray18 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        double[] doubleArray26 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray31 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double32 = tTestImpl20.homoscedasticT(doubleArray26, doubleArray31);
        double double33 = tTestImpl14.tTest(doubleArray18, doubleArray31);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        double double48 = tTestImpl1.t(doubleArray31, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        tTestImpl1.setDistribution(tDistribution49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double53 = tTestImpl1.tTest(statisticalSummary51, statisticalSummary52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.405429217622299d) + "'", double32 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2806531524060034d + "'", double33 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = tTestImpl1.t(4.733320644608368d, statisticalSummary54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl1.t((double) 100L, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl0.setDistribution(tDistribution29);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary31 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = tTestImpl0.homoscedasticT(statisticalSummary31, statisticalSummary32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary62 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tTestImpl1.tTest(statisticalSummary61, statisticalSummary62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        tTestImpl0.setDistribution(tDistribution84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.homoscedasticTTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl24.setDistribution(tDistribution37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray44 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl40.tTest(doubleArray44, doubleArray57);
        double double60 = tTestImpl24.t(10.0d, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl24.t(100.0d, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray74, doubleArray84);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tTestImpl1.tTest(2.2085058899383956d, statisticalSummary93, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 97.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2806531524060034d + "'", double59 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 3.8d + "'", double60 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.8418588844347075d) + "'", double76 == (-2.8418588844347075d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.405429217622299d + "'", double91 == 0.405429217622299d);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double[] doubleArray83 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double84 = tTestImpl63.t((double) '4', doubleArray83);
        double double85 = tTestImpl1.t(0.0d, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = tTestImpl1.tTest((double) 10.0f, statisticalSummary87, 0.9839224922440002d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9839224922440002");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.09656583816243881d) + "'", double84 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2.2210142777360953d + "'", double85 == 2.2210142777360953d);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t((double) (byte) 100, statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl1.tTest(statisticalSummary91, statisticalSummary92, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl1.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl1.t(3.8d, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl4 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution3);
        double[] doubleArray10 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray15 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double16 = tTestImpl4.homoscedasticT(doubleArray10, doubleArray15);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        double double51 = tTestImpl4.t(doubleArray34, doubleArray49);
        double double52 = tTestImpl1.t((double) 10.0f, doubleArray49);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl1.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.405429217622299d) + "'", double16 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9755634976417653d + "'", double52 == 0.9755634976417653d);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray25 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl27 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution26);
        double[] doubleArray33 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray38 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double39 = tTestImpl27.homoscedasticT(doubleArray33, doubleArray38);
        double double40 = tTestImpl21.tTest(doubleArray25, doubleArray38);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl8.t(doubleArray38, doubleArray53);
        double double56 = tTestImpl3.t(0.07560555610353314d, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = tTestImpl0.tTest(4.466666666666667d, doubleArray38, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.405429217622299d) + "'", double39 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2806531524060034d + "'", double40 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.3965146696271626d + "'", double56 == 1.3965146696271626d);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl20 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl20.setDistribution(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl25.setDistribution(tDistribution26);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double double47 = tTestImpl31.tTest((double) (short) 100, doubleArray40);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double[] doubleArray70 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double71 = tTestImpl50.t((double) '4', doubleArray70);
        double double72 = tTestImpl31.tTest((double) (short) 100, doubleArray70);
        double[] doubleArray79 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double80 = tTestImpl31.tTest(0.405429217622299d, doubleArray79);
        double double81 = tTestImpl29.t(3.8d, doubleArray79);
        double double82 = tTestImpl25.t((double) (short) 1, doubleArray79);
        double double83 = tTestImpl20.t(0.9839224922440002d, doubleArray79);
        double double84 = tTestImpl1.t((double) (-1), doubleArray79);
        java.lang.Class<?> wildcardClass85 = tTestImpl1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.01613264369976175d + "'", double47 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.09656583816243881d) + "'", double71 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.07560555610353314d + "'", double72 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.1143321549278642d + "'", double80 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-10.500000000000002d) + "'", double81 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-3.5d) + "'", double82 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-3.4598062306100013d) + "'", double83 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5d + "'", double84 == 1.5d);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.t(statisticalSummary63, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.t((-1.1115227041167497d), statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        tTestImpl0.setDistribution(tDistribution36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary38 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = tTestImpl0.tTest(statisticalSummary38, statisticalSummary39, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary1 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = tTestImpl0.t(statisticalSummary1, statisticalSummary2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution81 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl82 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution81);
        double[] doubleArray88 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray93 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double94 = tTestImpl82.homoscedasticT(doubleArray88, doubleArray93);
        double double95 = tTestImpl38.tTest((double) (byte) 1, doubleArray88);
        double double96 = tTestImpl24.t((double) 10L, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.tTest(1.0116792134203785d, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.405429217622299d) + "'", double94 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.3793626154059051d + "'", double95 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.5339796283719219d + "'", double96 == 0.5339796283719219d);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.tTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        org.apache.commons.math.distribution.TDistribution tDistribution34 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution34);
        double[] doubleArray41 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray46 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double47 = tTestImpl35.homoscedasticT(doubleArray41, doubleArray46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray52 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl48.tTest(doubleArray52, doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl35.t(doubleArray65, doubleArray80);
        double double83 = tTestImpl0.homoscedasticT(doubleArray27, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = tTestImpl0.tTest(100.0d, statisticalSummary85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.405429217622299d) + "'", double47 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2806531524060034d + "'", double67 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double59 = tTestImpl0.tTest((double) 0L, statisticalSummary58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        tTestImpl50.setDistribution(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl50.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl50.t(3.8d, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl0.t(doubleArray63, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary86 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.tTest(statisticalSummary86, statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.8463073355328574d + "'", double70 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.t((double) 1L, statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl1.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl1.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl26.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        tTestImpl31.setDistribution(tDistribution32);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl37.tTest((double) (short) 100, doubleArray46);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double[] doubleArray76 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double77 = tTestImpl56.t((double) '4', doubleArray76);
        double double78 = tTestImpl37.tTest((double) (short) 100, doubleArray76);
        double[] doubleArray85 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double86 = tTestImpl37.tTest(0.405429217622299d, doubleArray85);
        double double87 = tTestImpl35.t(3.8d, doubleArray85);
        double double88 = tTestImpl31.t((double) (short) 1, doubleArray85);
        double double89 = tTestImpl26.t(0.9839224922440002d, doubleArray85);
        double double90 = tTestImpl1.t((double) 10L, doubleArray85);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl1.homoscedasticTTest(statisticalSummary91, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.01613264369976175d + "'", double53 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.09656583816243881d) + "'", double77 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.07560555610353314d + "'", double78 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.1143321549278642d + "'", double86 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.500000000000002d) + "'", double87 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.5d) + "'", double88 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-3.4598062306100013d) + "'", double89 == (-3.4598062306100013d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-26.000000000000004d) + "'", double90 == (-26.000000000000004d));
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest((-0.405429217622299d), statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = tTestImpl1.tTest(statisticalSummary45, statisticalSummary46, 1.6198140498569726d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.6198140498569726");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        boolean boolean39 = tTestImpl0.tTest(1.357841932773502d, doubleArray22, 0.15639940166959065d);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray63 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double double78 = tTestImpl59.tTest(doubleArray63, doubleArray76);
        double double79 = tTestImpl42.homoscedasticT(doubleArray57, doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = tTestImpl0.tTest(1.3385956498818976d, doubleArray63, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.2806531524060034d + "'", double78 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1.1115227041167497d) + "'", double79 == (-1.1115227041167497d));
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl1.tTest(4.442799675467754d, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = tTestImpl1.tTest(0.004213458414249471d, statisticalSummary56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary29 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double31 = tTestImpl1.homoscedasticTTest(statisticalSummary29, statisticalSummary30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl22.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl22.homoscedasticT(doubleArray37, doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl22.t((-0.975807309953049d), doubleArray73);
        double double76 = tTestImpl1.t(0.0d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = tTestImpl1.tTest((double) 100, statisticalSummary78, 1.5d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.5");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.1115227041167497d) + "'", double59 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.4411111919348023d + "'", double75 == 1.4411111919348023d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.3997215400947067d + "'", double76 == 1.3997215400947067d);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = tTestImpl0.tTest(1.340995311971139d, statisticalSummary25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl55.tTest((double) (short) 100, doubleArray64);
        double double72 = tTestImpl41.t((double) 10.0f, doubleArray64);
        boolean boolean74 = tTestImpl0.tTest(0.12673187601587688d, doubleArray64, 0.01613264369976175d);
        org.apache.commons.math.distribution.TDistribution tDistribution75 = null;
        tTestImpl0.setDistribution(tDistribution75);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary77 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double79 = tTestImpl0.t(statisticalSummary77, statisticalSummary78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.01613264369976175d + "'", double71 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5339796283719219d + "'", double72 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tTestImpl1.tTest((double) (short) 100, statisticalSummary3, 3.8d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 3.8");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary89 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = tTestImpl0.homoscedasticTTest(statisticalSummary89, statisticalSummary90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        double[] doubleArray88 = new double[] { 0.5339796283719219d };
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl0.tTest(0.046643592901765896d, doubleArray88, (-0.5172120199559697d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -0.5172120199559697");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.5339796283719219]");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        tTestImpl0.setDistribution(tDistribution50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl0.setDistribution(tDistribution52);
        java.lang.Class<?> wildcardClass54 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray46 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl42.tTest(doubleArray46, doubleArray59);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl29.t(doubleArray59, doubleArray74);
        double double77 = tTestImpl26.t((double) 10.0f, doubleArray74);
        double double78 = tTestImpl0.t(0.987358558121667d, doubleArray74);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = tTestImpl0.tTest(statisticalSummary79, statisticalSummary80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2806531524060034d + "'", double61 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9755634976417653d + "'", double77 == 0.9755634976417653d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.357841932773502d + "'", double78 == 1.357841932773502d);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray62 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl58.tTest(doubleArray62, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution79 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl80 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution79);
        double[] doubleArray86 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray91 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double92 = tTestImpl80.homoscedasticT(doubleArray86, doubleArray91);
        double double93 = tTestImpl58.t((double) 1L, doubleArray91);
        double double94 = tTestImpl0.t((double) 0.0f, doubleArray91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.t(0.1143321549278642d, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2806531524060034d + "'", double77 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.405429217622299d) + "'", double92 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.3573057358494125d + "'", double93 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.3997215400947067d + "'", double94 == 1.3997215400947067d);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double double41 = tTestImpl25.tTest((double) (short) 100, doubleArray34);
        double double42 = tTestImpl0.t((double) (byte) 1, doubleArray34);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = tTestImpl0.tTest((double) 10, statisticalSummary44, 0.4450411875109115d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.01613264369976175d + "'", double41 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.987358558121667d + "'", double42 == 0.987358558121667d);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution37);
        double[] doubleArray44 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray49 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double50 = tTestImpl38.homoscedasticT(doubleArray44, doubleArray49);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray55 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl51.tTest(doubleArray55, doubleArray68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl38.t(doubleArray68, doubleArray83);
        double double86 = tTestImpl0.tTest(1.6198140498569726d, doubleArray83);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl0.tTest(statisticalSummary87, statisticalSummary88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.405429217622299d) + "'", double50 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.2806531524060034d + "'", double70 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2752975451271431d + "'", double86 == 0.2752975451271431d);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = tTestImpl1.tTest(Double.NaN, statisticalSummary40, 1.3965146696271626d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.3965146696271626");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl3.setDistribution(tDistribution4);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl6.tTest((double) (short) 100, doubleArray15);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        double double47 = tTestImpl6.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution49 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl50 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution49);
        double[] doubleArray56 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray61 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double62 = tTestImpl50.homoscedasticT(doubleArray56, doubleArray61);
        double double63 = tTestImpl6.tTest((double) (byte) 1, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution64);
        double[] doubleArray71 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray76 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double77 = tTestImpl65.homoscedasticT(doubleArray71, doubleArray76);
        double[] doubleArray85 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double86 = tTestImpl65.t((double) '4', doubleArray85);
        double double87 = tTestImpl3.t(doubleArray56, doubleArray85);
        double double88 = tTestImpl0.tTest((double) 0, doubleArray56);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = tTestImpl0.tTest(statisticalSummary91, statisticalSummary92, 0.2752975451271431d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.01613264369976175d + "'", double22 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.07560555610353314d + "'", double47 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.405429217622299d) + "'", double62 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.3793626154059051d + "'", double63 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.405429217622299d) + "'", double77 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.09656583816243881d) + "'", double86 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.975807309953049d) + "'", double87 == (-0.975807309953049d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.35800486798369846d + "'", double88 == 0.35800486798369846d);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl0.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl0.setDistribution(tDistribution65);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double69 = tTestImpl0.t(0.9675565918996828d, statisticalSummary68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary34 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double35 = tTestImpl1.t(0.046643592901765896d, statisticalSummary34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray58 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution59);
        double[] doubleArray66 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray71 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double72 = tTestImpl60.homoscedasticT(doubleArray66, doubleArray71);
        double double73 = tTestImpl54.tTest(doubleArray58, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl41.t(doubleArray71, doubleArray86);
        double double89 = tTestImpl1.t((double) 0.0f, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = tTestImpl1.tTest((-2.2d), statisticalSummary95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.405429217622299d) + "'", double72 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.2806531524060034d + "'", double73 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3997215400947067d + "'", double89 == 1.3997215400947067d);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary72 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double74 = tTestImpl0.tTest(statisticalSummary72, statisticalSummary73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        tTestImpl30.setDistribution(tDistribution31);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl30.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution35 = null;
        tTestImpl30.setDistribution(tDistribution35);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray42 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl38.tTest(doubleArray42, doubleArray55);
        double double58 = tTestImpl30.t((double) 0L, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl1.tTest((-3.5d), doubleArray42, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.2806531524060034d + "'", double57 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.466666666666667d + "'", double58 == 4.466666666666667d);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary57 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl1.tTest(statisticalSummary57, statisticalSummary58, 1.340995311971139d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.340995311971139");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary66 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double68 = tTestImpl0.t(statisticalSummary66, statisticalSummary67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl38 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl38.tTest((double) (short) 100, doubleArray47);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double[] doubleArray77 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double78 = tTestImpl57.t((double) '4', doubleArray77);
        double double79 = tTestImpl38.tTest((double) (short) 100, doubleArray77);
        double[] doubleArray86 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double87 = tTestImpl38.tTest(0.405429217622299d, doubleArray86);
        double double88 = tTestImpl36.t(3.8d, doubleArray86);
        double double89 = tTestImpl1.t(0.0d, doubleArray86);
        org.apache.commons.math.distribution.TDistribution tDistribution90 = null;
        tTestImpl1.setDistribution(tDistribution90);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl1.tTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.01613264369976175d + "'", double54 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.09656583816243881d) + "'", double78 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.07560555610353314d + "'", double79 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1143321549278642d + "'", double87 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-10.500000000000002d) + "'", double88 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0000000000000002d) + "'", double89 == (-1.0000000000000002d));
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double46 = tTestImpl0.t(0.0d, statisticalSummary45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        double double35 = tTestImpl0.t((double) 1L, doubleArray33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        double[] doubleArray43 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray48 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double49 = tTestImpl37.homoscedasticT(doubleArray43, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution50 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution50);
        double[] doubleArray57 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray62 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double63 = tTestImpl51.homoscedasticT(doubleArray57, doubleArray62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl51.setDistribution(tDistribution64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray71 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution72 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl73 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution72);
        double[] doubleArray79 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray84 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double85 = tTestImpl73.homoscedasticT(doubleArray79, doubleArray84);
        double double86 = tTestImpl67.tTest(doubleArray71, doubleArray84);
        double double87 = tTestImpl51.t(10.0d, doubleArray71);
        double double88 = tTestImpl0.tTest(doubleArray48, doubleArray71);
        org.apache.commons.math.distribution.TDistribution tDistribution89 = null;
        tTestImpl0.setDistribution(tDistribution89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t((double) (byte) 1, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.3573057358494125d + "'", double35 == 1.3573057358494125d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.405429217622299d) + "'", double49 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.405429217622299d) + "'", double63 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.405429217622299d) + "'", double85 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2806531524060034d + "'", double86 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.8d + "'", double87 == 3.8d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution6);
        double[] doubleArray13 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray18 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double19 = tTestImpl7.homoscedasticT(doubleArray13, doubleArray18);
        double double20 = tTestImpl0.t(3.8d, doubleArray13);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.t(Double.NaN, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.405429217622299d) + "'", double19 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8463073355328574d + "'", double20 == 0.8463073355328574d);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        tTestImpl1.setDistribution(tDistribution4);
        org.apache.commons.math.distribution.TDistribution tDistribution6 = null;
        tTestImpl1.setDistribution(tDistribution6);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        tTestImpl1.setDistribution(tDistribution8);
        double[] doubleArray10 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl11 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray15 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution16);
        double[] doubleArray23 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray28 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double29 = tTestImpl17.homoscedasticT(doubleArray23, doubleArray28);
        double double30 = tTestImpl11.tTest(doubleArray15, doubleArray28);
        org.apache.commons.math.distribution.TDistribution tDistribution32 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl33 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution32);
        double[] doubleArray39 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray44 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double45 = tTestImpl33.homoscedasticT(doubleArray39, doubleArray44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl33.setDistribution(tDistribution46);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray53 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double double68 = tTestImpl49.tTest(doubleArray53, doubleArray66);
        double double69 = tTestImpl33.t(10.0d, doubleArray53);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl33.t(100.0d, doubleArray83);
        double double86 = tTestImpl11.t((double) 0L, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tTestImpl1.pairedT(doubleArray10, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.405429217622299d) + "'", double29 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2806531524060034d + "'", double30 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.405429217622299d) + "'", double45 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.2806531524060034d + "'", double68 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 3.8d + "'", double69 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-2.8418588844347075d) + "'", double85 == (-2.8418588844347075d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.3997215400947067d + "'", double86 == 1.3997215400947067d);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        tTestImpl0.setDistribution(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl28 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution27);
        double[] doubleArray34 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray39 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double40 = tTestImpl28.homoscedasticT(doubleArray34, doubleArray39);
        double[] doubleArray48 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double49 = tTestImpl28.t((double) '4', doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution51 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl52 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution51);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl52.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl52.homoscedasticT(doubleArray67, doubleArray73);
        double double90 = tTestImpl28.t(0.35800486798369846d, doubleArray73);
        double double91 = tTestImpl0.t((double) (byte) -1, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double94 = tTestImpl0.homoscedasticTTest(statisticalSummary92, statisticalSummary93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.405429217622299d) + "'", double40 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.09656583816243881d) + "'", double49 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.1115227041167497d) + "'", double89 == (-1.1115227041167497d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.442799675467754d + "'", double90 == 4.442799675467754d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.533333333333333d + "'", double91 == 4.533333333333333d);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl1.tTest(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray51 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        double double66 = tTestImpl47.tTest(doubleArray51, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl68 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution67);
        double[] doubleArray74 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray79 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double80 = tTestImpl68.homoscedasticT(doubleArray74, doubleArray79);
        double double81 = tTestImpl34.t(doubleArray64, doubleArray79);
        org.apache.commons.math.distribution.TDistribution tDistribution82 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl83 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution82);
        double[] doubleArray89 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray94 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double95 = tTestImpl83.homoscedasticT(doubleArray89, doubleArray94);
        double double96 = tTestImpl1.pairedT(doubleArray79, doubleArray94);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.t((double) 0.0f, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.2806531524060034d + "'", double66 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.405429217622299d) + "'", double80 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.405429217622299d) + "'", double95 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        tTestImpl1.setDistribution(tDistribution39);
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        tTestImpl1.setDistribution(tDistribution41);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl1.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl1.setDistribution(tDistribution45);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary48 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double49 = tTestImpl1.tTest(statisticalSummary47, statisticalSummary48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl0.t((double) (short) 10, doubleArray22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution41 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution41);
        double[] doubleArray48 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray53 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double54 = tTestImpl42.homoscedasticT(doubleArray48, doubleArray53);
        double double55 = tTestImpl39.tTest((double) (short) 100, doubleArray48);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        double double70 = tTestImpl0.pairedT(doubleArray48, doubleArray63);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        tTestImpl0.setDistribution(tDistribution71);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary75 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary76 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double77 = tTestImpl0.homoscedasticTTest(statisticalSummary75, statisticalSummary76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.8d + "'", double38 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.405429217622299d) + "'", double54 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.01613264369976175d + "'", double55 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl42.tTest((double) (short) 100, doubleArray51);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl61 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution60);
        double[] doubleArray67 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray72 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double73 = tTestImpl61.homoscedasticT(doubleArray67, doubleArray72);
        double[] doubleArray81 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double82 = tTestImpl61.t((double) '4', doubleArray81);
        double double83 = tTestImpl42.tTest((double) (short) 100, doubleArray81);
        double[] doubleArray89 = new double[] { 1.0f, (-0.09656583816243881d), ' ', 0.8463073355328574d, 1.3965146696271626d };
        double double90 = tTestImpl0.homoscedasticTTest(doubleArray81, doubleArray89);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        java.lang.Class<?> wildcardClass95 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.01613264369976175d + "'", double58 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.405429217622299d) + "'", double73 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09656583816243881d) + "'", double82 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.07560555610353314d + "'", double83 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -0.09656583816243881, 32.0, 0.8463073355328574, 1.3965146696271626]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.12673187601587688d + "'", double90 == 0.12673187601587688d);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl56.t((double) 1L, doubleArray89);
        double double92 = tTestImpl0.t(0.15639940166959065d, doubleArray89);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = tTestImpl0.t((double) 0L, statisticalSummary94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.3573057358494125d + "'", double91 == 1.3573057358494125d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3930877336894083d + "'", double92 == 1.3930877336894083d);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary53 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = tTestImpl0.tTest(statisticalSummary53, statisticalSummary54, 0.12673187601587688d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        double[] doubleArray64 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray69 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl65.tTest(doubleArray69, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double85 = tTestImpl0.t(doubleArray64, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.2806531524060034d + "'", double84 == 0.2806531524060034d);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        org.apache.commons.math.distribution.TDistribution tDistribution96 = null;
        tTestImpl1.setDistribution(tDistribution96);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.distribution.TDistribution tDistribution16 = null;
        tTestImpl1.setDistribution(tDistribution16);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        tTestImpl1.setDistribution(tDistribution18);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary21 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double22 = tTestImpl1.t(4.656123925628981d, statisticalSummary21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest((double) 1L, statisticalSummary73, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        tTestImpl0.setDistribution(tDistribution17);
        org.apache.commons.math.distribution.TDistribution tDistribution19 = null;
        tTestImpl0.setDistribution(tDistribution19);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        tTestImpl0.setDistribution(tDistribution21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary23 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = tTestImpl0.homoscedasticT(statisticalSummary23, statisticalSummary24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary80 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.homoscedasticT(statisticalSummary80, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        double[] doubleArray74 = new double[] { (-2.8418588844347075d), 100.0f, (-1.0f), 0.35800486798369846d, 0.01613264369976175d };
        double double75 = tTestImpl0.t((double) (short) 0, doubleArray74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl0.setDistribution(tDistribution76);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary78 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary79 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = tTestImpl0.homoscedasticT(statisticalSummary78, statisticalSummary79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.8418588844347075, 100.0, -1.0, 0.35800486798369846, 0.01613264369976175]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9566618438474437d + "'", double75 == 0.9566618438474437d);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        tTestImpl39.setDistribution(tDistribution40);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray60 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double double75 = tTestImpl56.tTest(doubleArray60, doubleArray73);
        double double76 = tTestImpl39.homoscedasticT(doubleArray54, doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl1.homoscedasticT(doubleArray60, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution92 = null;
        tTestImpl1.setDistribution(tDistribution92);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2806531524060034d + "'", double75 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1115227041167497d) + "'", double76 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.6198140498569726d + "'", double91 == 1.6198140498569726d);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        org.apache.commons.math.distribution.TDistribution tDistribution37 = null;
        tTestImpl17.setDistribution(tDistribution37);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double[] doubleArray60 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double61 = tTestImpl40.t((double) '4', doubleArray60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl17.t(doubleArray60, doubleArray74);
        double double77 = tTestImpl1.t(0.0d, doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.09656583816243881d) + "'", double61 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5172120199559697d + "'", double76 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray45 = new double[] { 100.0f, 1.3404872472421194d, 0.15639940166959065d };
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl0.homoscedasticTTest(doubleArray45, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl0.tTest(statisticalSummary96, statisticalSummary97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.3404872472421194, 0.15639940166959065]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9839224922440002d + "'", double95 == 0.9839224922440002d);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary7 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = tTestImpl0.tTest(statisticalSummary7, statisticalSummary8, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        java.lang.Class<?> wildcardClass59 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution33);
        double[] doubleArray40 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray45 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double46 = tTestImpl34.homoscedasticT(doubleArray40, doubleArray45);
        double[] doubleArray54 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double55 = tTestImpl34.t((double) '4', doubleArray54);
        double double56 = tTestImpl15.tTest((double) (short) 100, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl59 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution58);
        double[] doubleArray65 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray70 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double71 = tTestImpl59.homoscedasticT(doubleArray65, doubleArray70);
        double double72 = tTestImpl15.tTest((double) (byte) 1, doubleArray65);
        double double73 = tTestImpl1.t((-1.0d), doubleArray65);
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        tTestImpl1.setDistribution(tDistribution74);
        org.apache.commons.math.distribution.TDistribution tDistribution76 = null;
        tTestImpl1.setDistribution(tDistribution76);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl79 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray83 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution84 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl85 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution84);
        double[] doubleArray91 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray96 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double97 = tTestImpl85.homoscedasticT(doubleArray91, doubleArray96);
        double double98 = tTestImpl79.tTest(doubleArray83, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.tTest((double) (byte) -1, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.405429217622299d) + "'", double46 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.09656583816243881d) + "'", double55 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.07560555610353314d + "'", double56 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.405429217622299d) + "'", double71 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3793626154059051d + "'", double72 == 0.3793626154059051d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.088109431399388d + "'", double73 == 1.088109431399388d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.405429217622299d) + "'", double97 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.2806531524060034d + "'", double98 == 0.2806531524060034d);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = tTestImpl0.tTest((double) (short) 10, statisticalSummary65, (-1.587268255506484d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: -1.587268255506484");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution8 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl9 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution8);
        double[] doubleArray15 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray20 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double21 = tTestImpl9.homoscedasticT(doubleArray15, doubleArray20);
        double double22 = tTestImpl0.t(1.4411111919348023d, doubleArray20);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl0.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl0.tTest(0.405429217622299d, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.405429217622299d) + "'", double21 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.3385956498818976d + "'", double22 == 1.3385956498818976d);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl65 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl65.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl65.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution71 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl72 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution71);
        double[] doubleArray78 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray83 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double84 = tTestImpl72.homoscedasticT(doubleArray78, doubleArray83);
        double double85 = tTestImpl65.t(3.8d, doubleArray78);
        double double86 = tTestImpl0.t((double) 10L, doubleArray78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = tTestImpl0.homoscedasticT(statisticalSummary87, statisticalSummary88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.405429217622299d) + "'", double84 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.8463073355328574d + "'", double85 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.5339796283719219d + "'", double86 == 0.5339796283719219d);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary61 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double62 = tTestImpl0.tTest(statisticalSummary60, statisticalSummary61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary46 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double48 = tTestImpl0.homoscedasticT(statisticalSummary46, statisticalSummary47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution28 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl29 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution28);
        double[] doubleArray35 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray40 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double41 = tTestImpl29.homoscedasticT(doubleArray35, doubleArray40);
        double double42 = tTestImpl26.tTest((double) (short) 100, doubleArray35);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl26.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl47 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution46);
        double[] doubleArray53 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray58 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double59 = tTestImpl47.homoscedasticT(doubleArray53, doubleArray58);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray64 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl66 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution65);
        double[] doubleArray72 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray77 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double78 = tTestImpl66.homoscedasticT(doubleArray72, doubleArray77);
        double double79 = tTestImpl60.tTest(doubleArray64, doubleArray77);
        org.apache.commons.math.distribution.TDistribution tDistribution80 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl81 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution80);
        double[] doubleArray87 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray92 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double93 = tTestImpl81.homoscedasticT(doubleArray87, doubleArray92);
        double double94 = tTestImpl47.t(doubleArray77, doubleArray92);
        double double95 = tTestImpl26.t(1.3965146696271626d, doubleArray92);
        double double96 = tTestImpl1.t((double) 0.0f, doubleArray92);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = tTestImpl1.t(0.0d, statisticalSummary98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.405429217622299d) + "'", double41 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.01613264369976175d + "'", double42 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.405429217622299d) + "'", double59 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.405429217622299d) + "'", double78 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.2806531524060034d + "'", double79 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.405429217622299d) + "'", double93 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.3404872472421194d + "'", double95 == 1.3404872472421194d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.3997215400947067d + "'", double96 == 1.3997215400947067d);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        org.apache.commons.math.distribution.TDistribution tDistribution26 = null;
        tTestImpl25.setDistribution(tDistribution26);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl30 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution29);
        org.apache.commons.math.distribution.TDistribution tDistribution31 = null;
        tTestImpl30.setDistribution(tDistribution31);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl34 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl36 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        double double52 = tTestImpl36.tTest((double) (short) 100, doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl55 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution54);
        double[] doubleArray61 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray66 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double67 = tTestImpl55.homoscedasticT(doubleArray61, doubleArray66);
        double[] doubleArray75 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double76 = tTestImpl55.t((double) '4', doubleArray75);
        double double77 = tTestImpl36.tTest((double) (short) 100, doubleArray75);
        double[] doubleArray84 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double85 = tTestImpl36.tTest(0.405429217622299d, doubleArray84);
        double double86 = tTestImpl34.t(3.8d, doubleArray84);
        double double87 = tTestImpl30.t((double) (short) 1, doubleArray84);
        double double88 = tTestImpl25.t(0.9839224922440002d, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = tTestImpl1.tTest((double) 100, doubleArray84, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.01613264369976175d + "'", double52 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.405429217622299d) + "'", double67 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.09656583816243881d) + "'", double76 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.07560555610353314d + "'", double77 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.1143321549278642d + "'", double85 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-10.500000000000002d) + "'", double86 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-3.5d) + "'", double87 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-3.4598062306100013d) + "'", double88 == (-3.4598062306100013d));
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.distribution.TDistribution tDistribution91 = null;
        tTestImpl0.setDistribution(tDistribution91);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary93 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = tTestImpl0.tTest(statisticalSummary93, statisticalSummary94, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution63);
        double[] doubleArray70 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray75 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double76 = tTestImpl64.homoscedasticT(doubleArray70, doubleArray75);
        double double77 = tTestImpl0.t((double) 0, doubleArray75);
        org.apache.commons.math.distribution.TDistribution tDistribution78 = null;
        tTestImpl0.setDistribution(tDistribution78);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = tTestImpl0.t(1.357841932773502d, statisticalSummary81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.405429217622299d) + "'", double76 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.3997215400947067d + "'", double77 == 1.3997215400947067d);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution17 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution17);
        double[] doubleArray24 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray29 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double30 = tTestImpl18.homoscedasticT(doubleArray24, doubleArray29);
        double double31 = tTestImpl15.tTest((double) (short) 100, doubleArray24);
        double double32 = tTestImpl1.t((double) 10.0f, doubleArray24);
        org.apache.commons.math.distribution.TDistribution tDistribution33 = null;
        tTestImpl1.setDistribution(tDistribution33);
        org.apache.commons.math.distribution.TDistribution tDistribution36 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl37 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution36);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        tTestImpl37.setDistribution(tDistribution38);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl43.tTest((double) (short) 100, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl62 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution61);
        double[] doubleArray68 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray73 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double74 = tTestImpl62.homoscedasticT(doubleArray68, doubleArray73);
        double[] doubleArray82 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double83 = tTestImpl62.t((double) '4', doubleArray82);
        double double84 = tTestImpl43.tTest((double) (short) 100, doubleArray82);
        double[] doubleArray91 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double92 = tTestImpl43.tTest(0.405429217622299d, doubleArray91);
        double double93 = tTestImpl41.t(3.8d, doubleArray91);
        double double94 = tTestImpl37.t((double) (short) 1, doubleArray91);
        double double95 = tTestImpl1.t(0.004213458414249471d, doubleArray91);
        double[] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = tTestImpl1.tTest((-0.975807309953049d), doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.405429217622299d) + "'", double30 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.01613264369976175d + "'", double31 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5339796283719219d + "'", double32 == 0.5339796283719219d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.01613264369976175d + "'", double59 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.405429217622299d) + "'", double74 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.09656583816243881d) + "'", double83 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.07560555610353314d + "'", double84 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.1143321549278642d + "'", double92 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-10.500000000000002d) + "'", double93 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.5d) + "'", double94 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0105336460356238d) + "'", double95 == (-1.0105336460356238d));
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.distribution.TDistribution tDistribution63 = null;
        tTestImpl1.setDistribution(tDistribution63);
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl1.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl1.setDistribution(tDistribution67);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray23 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double double38 = tTestImpl19.tTest(doubleArray23, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution39 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl40 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution39);
        double[] doubleArray46 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray51 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double52 = tTestImpl40.homoscedasticT(doubleArray46, doubleArray51);
        double double53 = tTestImpl6.t(doubleArray36, doubleArray51);
        double double54 = tTestImpl1.t(0.07560555610353314d, doubleArray36);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary59 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = tTestImpl1.tTest(statisticalSummary59, statisticalSummary60, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2806531524060034d + "'", double38 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.405429217622299d) + "'", double52 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.3965146696271626d + "'", double54 == 1.3965146696271626d);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl0.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl0.tTest(statisticalSummary63, statisticalSummary64, 0.405429217622299d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        double double18 = tTestImpl2.tTest((double) (short) 100, doubleArray11);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution20);
        double[] doubleArray27 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray32 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double33 = tTestImpl21.homoscedasticT(doubleArray27, doubleArray32);
        double[] doubleArray41 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double42 = tTestImpl21.t((double) '4', doubleArray41);
        double double43 = tTestImpl2.tTest((double) (short) 100, doubleArray41);
        double[] doubleArray50 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double51 = tTestImpl2.tTest(0.405429217622299d, doubleArray50);
        double double52 = tTestImpl0.t(3.8d, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        tTestImpl0.setDistribution(tDistribution53);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl0.setDistribution(tDistribution55);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = tTestImpl0.tTest(0.15639940166959065d, statisticalSummary58, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.01613264369976175d + "'", double18 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.405429217622299d) + "'", double33 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09656583816243881d) + "'", double42 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.07560555610353314d + "'", double43 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.1143321549278642d + "'", double51 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-10.500000000000002d) + "'", double52 == (-10.500000000000002d));
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl21 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl21.tTest((double) (short) 100, doubleArray30);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray43 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl45 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution44);
        double[] doubleArray51 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray56 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double57 = tTestImpl45.homoscedasticT(doubleArray51, doubleArray56);
        double double58 = tTestImpl39.tTest(doubleArray43, doubleArray56);
        double double59 = tTestImpl21.t((double) (short) 10, doubleArray43);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl60 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution62);
        double[] doubleArray69 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray74 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double75 = tTestImpl63.homoscedasticT(doubleArray69, doubleArray74);
        double double76 = tTestImpl60.tTest((double) (short) 100, doubleArray69);
        org.apache.commons.math.distribution.TDistribution tDistribution77 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl78 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution77);
        double[] doubleArray84 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray89 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double90 = tTestImpl78.homoscedasticT(doubleArray84, doubleArray89);
        double double91 = tTestImpl21.pairedT(doubleArray69, doubleArray84);
        double double92 = tTestImpl0.t((double) (short) 0, doubleArray84);
        org.apache.commons.math.distribution.TDistribution tDistribution93 = null;
        tTestImpl0.setDistribution(tDistribution93);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double97 = tTestImpl0.tTest(0.004213458414249471d, statisticalSummary96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.01613264369976175d + "'", double37 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.405429217622299d) + "'", double57 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2806531524060034d + "'", double58 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.8d + "'", double59 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.405429217622299d) + "'", double75 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.01613264369976175d + "'", double76 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.405429217622299d) + "'", double90 == (-0.405429217622299d));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0377339947605275d + "'", double92 == 1.0377339947605275d);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = tTestImpl0.tTest(100.0d, statisticalSummary6, 4.656123925628981d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 4.656123925628981");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary4 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double5 = tTestImpl0.t(1.3385956498818976d, statisticalSummary4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution53 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl54 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution53);
        double[] doubleArray60 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray65 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double66 = tTestImpl54.homoscedasticT(doubleArray60, doubleArray65);
        double double67 = tTestImpl51.tTest((double) (short) 100, doubleArray60);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray73 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution74 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl75 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution74);
        double[] doubleArray81 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray86 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double87 = tTestImpl75.homoscedasticT(doubleArray81, doubleArray86);
        double double88 = tTestImpl69.tTest(doubleArray73, doubleArray86);
        double double89 = tTestImpl51.t((double) (short) 10, doubleArray73);
        double double90 = tTestImpl0.t(1.088109431399388d, doubleArray73);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = tTestImpl0.t(0.9302024075262618d, statisticalSummary92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.405429217622299d) + "'", double66 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.01613264369976175d + "'", double67 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.405429217622299d) + "'", double87 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.2806531524060034d + "'", double88 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.8d + "'", double89 == 3.8d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.394126037906707d + "'", double90 == 4.394126037906707d);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        tTestImpl1.setDistribution(tDistribution25);
        org.apache.commons.math.distribution.TDistribution tDistribution27 = null;
        tTestImpl1.setDistribution(tDistribution27);
        org.apache.commons.math.distribution.TDistribution tDistribution29 = null;
        tTestImpl1.setDistribution(tDistribution29);
        double[] doubleArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = tTestImpl1.t((double) 0, doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = tTestImpl0.tTest((double) (byte) 100, statisticalSummary47, 0.01613264369976175d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl44 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution43);
        double[] doubleArray50 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray55 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double56 = tTestImpl44.homoscedasticT(doubleArray50, doubleArray55);
        double double57 = tTestImpl0.tTest((double) (byte) 1, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution58 = null;
        tTestImpl0.setDistribution(tDistribution58);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.distribution.TDistribution tDistribution66 = null;
        tTestImpl0.setDistribution(tDistribution66);
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        tTestImpl0.setDistribution(tDistribution68);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        tTestImpl0.setDistribution(tDistribution70);
        java.lang.Class<?> wildcardClass72 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.405429217622299d) + "'", double56 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.3793626154059051d + "'", double57 == 0.3793626154059051d);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution4 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution4);
        double[] doubleArray11 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray16 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double17 = tTestImpl5.homoscedasticT(doubleArray11, doubleArray16);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl18 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray22 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl24 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution23);
        double[] doubleArray30 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray35 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double36 = tTestImpl24.homoscedasticT(doubleArray30, doubleArray35);
        double double37 = tTestImpl18.tTest(doubleArray22, doubleArray35);
        double double38 = tTestImpl1.homoscedasticT(doubleArray16, doubleArray22);
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl1.t((-0.975807309953049d), doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        tTestImpl1.setDistribution(tDistribution55);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        tTestImpl1.setDistribution(tDistribution57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl1.setDistribution(tDistribution61);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary63 = null;
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = tTestImpl1.tTest(statisticalSummary63, statisticalSummary64, 0.9755634976417653d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 0.9755634976417653");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.405429217622299d) + "'", double17 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.405429217622299d) + "'", double36 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2806531524060034d + "'", double37 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.1115227041167497d) + "'", double38 == (-1.1115227041167497d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.4411111919348023d + "'", double54 == 1.4411111919348023d);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl51 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        tTestImpl51.setDistribution(tDistribution52);
        org.apache.commons.math.distribution.TDistribution tDistribution54 = null;
        tTestImpl51.setDistribution(tDistribution54);
        org.apache.commons.math.distribution.TDistribution tDistribution57 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl58 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution57);
        double[] doubleArray64 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray69 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double70 = tTestImpl58.homoscedasticT(doubleArray64, doubleArray69);
        double double71 = tTestImpl51.t(3.8d, doubleArray64);
        double double72 = tTestImpl0.t(1.088109431399388d, doubleArray64);
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        tTestImpl0.setDistribution(tDistribution73);
        java.lang.Class<?> wildcardClass75 = tTestImpl0.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.405429217622299d) + "'", double70 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8463073355328574d + "'", double71 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.982920007042921d + "'", double72 == 0.982920007042921d);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary39 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double40 = tTestImpl1.t((double) '#', statisticalSummary39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution1 = null;
        tTestImpl0.setDistribution(tDistribution1);
        org.apache.commons.math.distribution.TDistribution tDistribution3 = null;
        tTestImpl0.setDistribution(tDistribution3);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        tTestImpl0.setDistribution(tDistribution5);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray12 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution13 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl14 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution13);
        double[] doubleArray20 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray25 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double26 = tTestImpl14.homoscedasticT(doubleArray20, doubleArray25);
        double double27 = tTestImpl8.tTest(doubleArray12, doubleArray25);
        double double28 = tTestImpl0.t((double) 0L, doubleArray12);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = tTestImpl0.tTest((-1.0d), statisticalSummary30, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 100.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.405429217622299d) + "'", double26 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2806531524060034d + "'", double27 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.466666666666667d + "'", double28 == 4.466666666666667d);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        tTestImpl0.setDistribution(tDistribution42);
        org.apache.commons.math.distribution.TDistribution tDistribution44 = null;
        tTestImpl0.setDistribution(tDistribution44);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary51 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double52 = tTestImpl0.t(1.088109431399388d, statisticalSummary51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        double[] doubleArray21 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double22 = tTestImpl1.t((double) '4', doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution23 = null;
        tTestImpl1.setDistribution(tDistribution23);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary26 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = tTestImpl1.t((double) (short) -1, statisticalSummary26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.09656583816243881d) + "'", double22 == (-0.09656583816243881d));
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        double[] doubleArray7 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray12 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double13 = tTestImpl1.homoscedasticT(doubleArray7, doubleArray12);
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        tTestImpl1.setDistribution(tDistribution14);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl17 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray21 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double double36 = tTestImpl17.tTest(doubleArray21, doubleArray34);
        double double37 = tTestImpl1.t(10.0d, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution38 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl39 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution38);
        double[] doubleArray45 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray50 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double51 = tTestImpl39.homoscedasticT(doubleArray45, doubleArray50);
        org.apache.commons.math.distribution.TDistribution tDistribution52 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl53 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution52);
        double[] doubleArray59 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray64 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double65 = tTestImpl53.homoscedasticT(doubleArray59, doubleArray64);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl67 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution69 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl70 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution69);
        double[] doubleArray76 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray81 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double82 = tTestImpl70.homoscedasticT(doubleArray76, doubleArray81);
        double double83 = tTestImpl67.tTest((double) (short) 100, doubleArray76);
        double double84 = tTestImpl53.t((double) 10.0f, doubleArray76);
        double double85 = tTestImpl1.homoscedasticT(doubleArray50, doubleArray76);
        org.apache.commons.math.distribution.TDistribution tDistribution86 = null;
        tTestImpl1.setDistribution(tDistribution86);
        org.apache.commons.math.distribution.TDistribution tDistribution88 = null;
        tTestImpl1.setDistribution(tDistribution88);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = tTestImpl1.t((-1.0105336460356238d), statisticalSummary91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.405429217622299d) + "'", double13 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2806531524060034d + "'", double36 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.8d + "'", double37 == 3.8d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.405429217622299d) + "'", double51 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.405429217622299d) + "'", double65 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.405429217622299d) + "'", double82 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.01613264369976175d + "'", double83 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.5339796283719219d + "'", double84 == 0.5339796283719219d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.405429217622299d + "'", double85 == 0.405429217622299d);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.distribution.TDistribution tDistribution42 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl43 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution42);
        double[] doubleArray49 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray54 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double55 = tTestImpl43.homoscedasticT(doubleArray49, doubleArray54);
        org.apache.commons.math.distribution.TDistribution tDistribution56 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl57 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution56);
        double[] doubleArray63 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray68 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double69 = tTestImpl57.homoscedasticT(doubleArray63, doubleArray68);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution73 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl74 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution73);
        double[] doubleArray80 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray85 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double86 = tTestImpl74.homoscedasticT(doubleArray80, doubleArray85);
        double double87 = tTestImpl71.tTest((double) (short) 100, doubleArray80);
        double double88 = tTestImpl57.t((double) 10.0f, doubleArray80);
        double double89 = tTestImpl0.pairedTTest(doubleArray49, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tTestImpl0.tTest((double) 100.0f, statisticalSummary91, 0.3793626154059051d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.405429217622299d) + "'", double55 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.405429217622299d) + "'", double69 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.405429217622299d) + "'", double86 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.01613264369976175d + "'", double87 == 0.01613264369976175d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.5339796283719219d + "'", double88 == 0.5339796283719219d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl0.setDistribution(tDistribution22);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray29 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double double44 = tTestImpl25.tTest(doubleArray29, doubleArray42);
        double double45 = tTestImpl0.t(0.35800486798369846d, doubleArray42);
        org.apache.commons.math.distribution.TDistribution tDistribution46 = null;
        tTestImpl0.setDistribution(tDistribution46);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        tTestImpl0.setDistribution(tDistribution48);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2806531524060034d + "'", double44 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.384536475695448d + "'", double45 == 1.384536475695448d);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
        double[] doubleArray28 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray33 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double34 = tTestImpl22.homoscedasticT(doubleArray28, doubleArray33);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl35 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray39 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
        double[] doubleArray47 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray52 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double53 = tTestImpl41.homoscedasticT(doubleArray47, doubleArray52);
        double double54 = tTestImpl35.tTest(doubleArray39, doubleArray52);
        org.apache.commons.math.distribution.TDistribution tDistribution55 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl56 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution55);
        double[] doubleArray62 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray67 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double68 = tTestImpl56.homoscedasticT(doubleArray62, doubleArray67);
        double double69 = tTestImpl22.t(doubleArray52, doubleArray67);
        boolean boolean71 = tTestImpl0.tTest((double) (short) 0, doubleArray52, Double.NaN);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = tTestImpl0.tTest(4.466666666666667d, statisticalSummary73, 1.357841932773502d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.357841932773502");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.405429217622299d) + "'", double34 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.405429217622299d) + "'", double53 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2806531524060034d + "'", double54 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.405429217622299d) + "'", double68 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl2 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray6 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl8 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution7);
        double[] doubleArray14 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray19 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double20 = tTestImpl8.homoscedasticT(doubleArray14, doubleArray19);
        double double21 = tTestImpl2.tTest(doubleArray6, doubleArray19);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        tTestImpl2.setDistribution(tDistribution22);
        org.apache.commons.math.distribution.TDistribution tDistribution24 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl25 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution24);
        double[] doubleArray31 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray36 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double37 = tTestImpl25.homoscedasticT(doubleArray31, doubleArray36);
        double[] doubleArray45 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double46 = tTestImpl25.t((double) '4', doubleArray45);
        org.apache.commons.math.distribution.TDistribution tDistribution47 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl48 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution47);
        double[] doubleArray54 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray59 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double60 = tTestImpl48.homoscedasticT(doubleArray54, doubleArray59);
        double double61 = tTestImpl2.t(doubleArray45, doubleArray59);
        boolean boolean63 = tTestImpl0.tTest((double) (short) 1, doubleArray59, 0.405429217622299d);
        org.apache.commons.math.distribution.TDistribution tDistribution64 = null;
        tTestImpl0.setDistribution(tDistribution64);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = tTestImpl0.tTest(0.1143321549278642d, statisticalSummary67, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 10.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.405429217622299d) + "'", double20 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2806531524060034d + "'", double21 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.405429217622299d) + "'", double37 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.09656583816243881d) + "'", double46 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.405429217622299d) + "'", double60 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5172120199559697d + "'", double61 == 0.5172120199559697d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        double[] doubleArray48 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double49 = tTestImpl0.tTest(0.405429217622299d, doubleArray48);
        double[] doubleArray57 = new double[] { 10L, 0.9566618438474437d, 1.0f, 0.15639940166959065d, (short) 0, 0.15639940166959065d };
        double double58 = tTestImpl0.tTest(10.0d, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl0.setDistribution(tDistribution59);
        org.apache.commons.math.distribution.TDistribution tDistribution61 = null;
        tTestImpl0.setDistribution(tDistribution61);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl64 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution65 = null;
        tTestImpl64.setDistribution(tDistribution65);
        org.apache.commons.math.distribution.TDistribution tDistribution67 = null;
        tTestImpl64.setDistribution(tDistribution67);
        org.apache.commons.math.distribution.TDistribution tDistribution70 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl71 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution70);
        double[] doubleArray77 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray82 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double83 = tTestImpl71.homoscedasticT(doubleArray77, doubleArray82);
        double double84 = tTestImpl64.t(3.8d, doubleArray77);
        double double85 = tTestImpl0.t(0.5172120199559697d, doubleArray77);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = tTestImpl0.tTest((-0.975807309953049d), statisticalSummary87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.1143321549278642d + "'", double49 == 0.1143321549278642d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.9566618438474437, 1.0, 0.15639940166959065, 0.0, 0.15639940166959065]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.004213458414249471d + "'", double58 == 0.004213458414249471d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.405429217622299d) + "'", double83 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.8463073355328574d + "'", double84 == 0.8463073355328574d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0116792134203785d + "'", double85 == 1.0116792134203785d);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl5 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl7 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution9 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution9);
        double[] doubleArray16 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray21 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double22 = tTestImpl10.homoscedasticT(doubleArray16, doubleArray21);
        double double23 = tTestImpl7.tTest((double) (short) 100, doubleArray16);
        org.apache.commons.math.distribution.TDistribution tDistribution25 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl26 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution25);
        double[] doubleArray32 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray37 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double38 = tTestImpl26.homoscedasticT(doubleArray32, doubleArray37);
        double[] doubleArray46 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double47 = tTestImpl26.t((double) '4', doubleArray46);
        double double48 = tTestImpl7.tTest((double) (short) 100, doubleArray46);
        double[] doubleArray55 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double56 = tTestImpl7.tTest(0.405429217622299d, doubleArray55);
        double double57 = tTestImpl5.t(3.8d, doubleArray55);
        double double58 = tTestImpl1.t((double) (short) 1, doubleArray55);
        org.apache.commons.math.distribution.TDistribution tDistribution59 = null;
        tTestImpl1.setDistribution(tDistribution59);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.405429217622299d) + "'", double22 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.01613264369976175d + "'", double23 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.405429217622299d) + "'", double38 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.09656583816243881d) + "'", double47 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.07560555610353314d + "'", double48 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.1143321549278642d + "'", double56 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-10.500000000000002d) + "'", double57 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-3.5d) + "'", double58 == (-3.5d));
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl3 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution2);
        double[] doubleArray9 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray14 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double15 = tTestImpl3.homoscedasticT(doubleArray9, doubleArray14);
        double double16 = tTestImpl0.tTest((double) (short) 100, doubleArray9);
        org.apache.commons.math.distribution.TDistribution tDistribution18 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl19 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution18);
        double[] doubleArray25 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray30 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double31 = tTestImpl19.homoscedasticT(doubleArray25, doubleArray30);
        double[] doubleArray39 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double40 = tTestImpl19.t((double) '4', doubleArray39);
        double double41 = tTestImpl0.tTest((double) (short) 100, doubleArray39);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl42 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution43 = null;
        tTestImpl42.setDistribution(tDistribution43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        tTestImpl42.setDistribution(tDistribution45);
        org.apache.commons.math.distribution.TDistribution tDistribution48 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl49 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution48);
        double[] doubleArray55 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray60 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double61 = tTestImpl49.homoscedasticT(doubleArray55, doubleArray60);
        double double62 = tTestImpl42.t(3.8d, doubleArray55);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl63 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray67 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution68 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl69 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution68);
        double[] doubleArray75 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray80 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double81 = tTestImpl69.homoscedasticT(doubleArray75, doubleArray80);
        double double82 = tTestImpl63.tTest(doubleArray67, doubleArray80);
        double double83 = tTestImpl0.t(doubleArray55, doubleArray80);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tTestImpl0.tTest(4.733320644608368d, statisticalSummary85, 1.4421373443400007d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bad significance level: 1.4421373443400007");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.405429217622299d) + "'", double15 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.01613264369976175d + "'", double16 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.405429217622299d) + "'", double31 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-0.09656583816243881d) + "'", double40 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.07560555610353314d + "'", double41 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.405429217622299d) + "'", double61 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.8463073355328574d + "'", double62 == 0.8463073355328574d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.405429217622299d) + "'", double81 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.2806531524060034d + "'", double82 == 0.2806531524060034d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.4023317120818342d) + "'", double83 == (-0.4023317120818342d));
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
        double[] doubleArray4 = new double[] { '4', 'a', '4' };
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        double[] doubleArray12 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray17 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double18 = tTestImpl6.homoscedasticT(doubleArray12, doubleArray17);
        double double19 = tTestImpl0.tTest(doubleArray4, doubleArray17);
        org.apache.commons.math.distribution.TDistribution tDistribution20 = null;
        tTestImpl0.setDistribution(tDistribution20);
        org.apache.commons.math.distribution.TDistribution tDistribution22 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl23 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution22);
        double[] doubleArray29 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray34 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double35 = tTestImpl23.homoscedasticT(doubleArray29, doubleArray34);
        double[] doubleArray43 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double44 = tTestImpl23.t((double) '4', doubleArray43);
        org.apache.commons.math.distribution.TDistribution tDistribution45 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl46 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution45);
        double[] doubleArray52 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray57 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double58 = tTestImpl46.homoscedasticT(doubleArray52, doubleArray57);
        double double59 = tTestImpl0.t(doubleArray43, doubleArray57);
        org.apache.commons.math.distribution.TDistribution tDistribution60 = null;
        tTestImpl0.setDistribution(tDistribution60);
        org.apache.commons.math.distribution.TDistribution tDistribution62 = null;
        tTestImpl0.setDistribution(tDistribution62);
        org.apache.commons.math.stat.descriptive.StatisticalSummary statisticalSummary65 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double66 = tTestImpl0.tTest((double) (-1L), statisticalSummary65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: insufficient data for t statistic");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[52.0, 97.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.405429217622299d) + "'", double18 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2806531524060034d + "'", double19 == 0.2806531524060034d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.405429217622299d) + "'", double35 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.09656583816243881d) + "'", double44 == (-0.09656583816243881d));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.405429217622299d) + "'", double58 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5172120199559697d + "'", double59 == 0.5172120199559697d);
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        org.apache.commons.math.distribution.TDistribution tDistribution0 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl1 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution0);
        org.apache.commons.math.distribution.TDistribution tDistribution2 = null;
        tTestImpl1.setDistribution(tDistribution2);
        org.apache.commons.math.distribution.TDistribution tDistribution5 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl6 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution5);
        org.apache.commons.math.distribution.TDistribution tDistribution7 = null;
        tTestImpl6.setDistribution(tDistribution7);
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl10 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl12 = new org.apache.commons.math.stat.inference.TTestImpl();
        org.apache.commons.math.distribution.TDistribution tDistribution14 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl15 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution14);
        double[] doubleArray21 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray26 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double27 = tTestImpl15.homoscedasticT(doubleArray21, doubleArray26);
        double double28 = tTestImpl12.tTest((double) (short) 100, doubleArray21);
        org.apache.commons.math.distribution.TDistribution tDistribution30 = null;
        org.apache.commons.math.stat.inference.TTestImpl tTestImpl31 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution30);
        double[] doubleArray37 = new double[] { 1.0f, (short) 1, 100.0f, 1, 0.0f };
        double[] doubleArray42 = new double[] { ' ', (byte) 100, (byte) 1, (-1.0f) };
        double double43 = tTestImpl31.homoscedasticT(doubleArray37, doubleArray42);
        double[] doubleArray51 = new double[] { 1, 100.0f, (-1), (short) 100, 100, (-1) };
        double double52 = tTestImpl31.t((double) '4', doubleArray51);
        double double53 = tTestImpl12.tTest((double) (short) 100, doubleArray51);
        double[] doubleArray60 = new double[] { (byte) -1, (-1), 0.0f, 1.0d, (-1.0f) };
        double double61 = tTestImpl12.tTest(0.405429217622299d, doubleArray60);
        double double62 = tTestImpl10.t(3.8d, doubleArray60);
        double double63 = tTestImpl6.t((double) (short) 1, doubleArray60);
        double double64 = tTestImpl1.t(0.9839224922440002d, doubleArray60);
        java.lang.Class<?> wildcardClass65 = doubleArray60.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.405429217622299d) + "'", double27 == (-0.405429217622299d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.01613264369976175d + "'", double28 == 0.01613264369976175d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, 100.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0, 100.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.405429217622299d) + "'", double43 == (-0.405429217622299d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.09656583816243881d) + "'", double52 == (-0.09656583816243881d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.07560555610353314d + "'", double53 == 0.07560555610353314d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, -1.0, 0.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.1143321549278642d + "'", double61 == 0.1143321549278642d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-10.500000000000002d) + "'", double62 == (-10.500000000000002d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-3.5d) + "'", double63 == (-3.5d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.4598062306100013d) + "'", double64 == (-3.4598062306100013d));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }
}

