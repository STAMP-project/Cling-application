import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln((double) 10.0f);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder8.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendln(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        java.lang.Object[] objArray28 = new java.lang.Object[] { strBuilder18, strBuilder22, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll(objArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendln(stringBuffer36, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.deleteFirst(strMatcher40);
        boolean boolean43 = strBuilder41.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder47.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        int int58 = strBuilder51.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.String str72 = strBuilder66.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder60.appendln(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) strBuilder60, 5, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n" + "'", str72, "\n");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str3 = strBuilder1.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln('4');
        int int8 = strBuilder5.indexOf("\n-1", 322);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "e\n10" + "'", str3, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln("aaaaaaaaaaa32");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        int int9 = strBuilder8.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder10.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.append('a');
        java.lang.Object obj18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.insert(322, obj18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 322");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln(stringBuffer33, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendln(stringBuffer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str45 = strBuilder44.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        java.lang.String str55 = strBuilder51.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str72 = strBuilder68.rightString((int) '4');
        java.lang.Object[] objArray73 = new java.lang.Object[] { strBuilder60, wildcardClass65, 10.0d, (-1.0d), str72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder51.appendAll(objArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.appendAll(objArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder41.appendWithSeparators(objArray73, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder7.appendAll(objArray73);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10" + "'", str55, "true\n10");
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n" + "'", str72, "\n");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder55.deleteCharAt(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder55.insert(52, (double) 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        char[] charArray26 = strBuilder21.toCharArray();
        char[] charArray27 = strBuilder5.getChars(charArray26);
        char[] charArray28 = strBuilder5.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ ]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ ]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        int int46 = strBuilder39.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNewLine();
        boolean boolean69 = strBuilder55.equalsIgnoreCase(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.append((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder72.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.ensureCapacity(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        boolean boolean10 = strBuilder5.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (byte) 10);
        int int20 = strBuilder18.lastIndexOf('#');
        int int23 = strBuilder18.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        char[] charArray31 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.appendln(charArray31);
        int int35 = strBuilder25.lastIndexOf("\n1.0\n", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer71 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder37.append(stringBuffer71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder5.append(stringBuffer71, 106, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "#");
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        boolean boolean20 = strBuilder17.startsWith("\n\n100 04-1.0 truea");
        java.lang.String str22 = strBuilder17.substring((int) ' ');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32" + "'", str22, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa32");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder5.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int15 = strBuilder5.lastIndexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder78, 0, '\000');
        int int83 = strBuilder81.lastIndexOf("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        int int21 = strBuilder14.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendNewLine();
        java.io.Writer writer26 = strBuilder23.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.append(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) 214);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((float) 'a');
        java.io.Writer writer88 = strBuilder87.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder42.insert(2, (java.lang.Object) writer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader92 = strBuilder91.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder91.minimizeCapacity();
        char[] charArray96 = strBuilder91.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder42.insert((int) 'a', charArray96);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) 7);
        boolean boolean43 = strBuilder41.contains('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (byte) 10);
        java.lang.String str20 = strBuilder16.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.Object[] objArray38 = new java.lang.Object[] { strBuilder25, wildcardClass30, 10.0d, (-1.0d), str37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendAll(objArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.CharSequence) strBuilder39, 12, 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "true\n10" + "'", str20, "true\n10");
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        char[] charArray8 = strBuilder0.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n]");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("true\n10100.0 \n");
        char[] charArray12 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadLeft(45, (int) (short) -1, 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((float) 20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("");
        java.lang.String str57 = strBuilder56.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((long) (byte) 10);
        java.lang.String str67 = strBuilder63.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendNewLine();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln("");
        java.lang.String str84 = strBuilder80.rightString((int) '4');
        java.lang.Object[] objArray85 = new java.lang.Object[] { strBuilder72, wildcardClass77, 10.0d, (-1.0d), str84 };
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder63.appendAll(objArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder56.appendAll(objArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder53.append(strBuilder92);
        java.lang.StringBuffer stringBuffer96 = strBuilder95.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "true\n10" + "'", str67, "true\n10");
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\n" + "'", str84, "\n");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(stringBuffer96);
        org.junit.Assert.assertEquals(stringBuffer96.toString(), "true\n10###\n\nclassajava.lang.Object10.0-1.0\ntrue\n10\n ");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(0.0d);
        int int47 = strBuilder41.lastIndexOf("ass j", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder7.appendln((java.lang.Object) strBuilder41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder7.insert((int) (short) -1, (double) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setLength(7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.insert(20, (double) 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        int int14 = strBuilder7.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.String str21 = strBuilder20.getNewLineText();
        boolean boolean22 = strBuilder7.equals(strBuilder20);
        boolean boolean23 = strBuilder0.equals(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.append((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((long) 14);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight(9, 36, '4');
        char char53 = strBuilder47.charAt((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.append("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + char53 + "' != '" + '4' + "'", char53 == '4');
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strTokenizer20, 50, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendln('#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("ass j");
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendNull();
        int int12 = strBuilder9.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceAll(strMatcher13, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.deleteAll("\n");
        java.lang.StringBuffer stringBuffer25 = strBuilder21.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.append(stringBuffer25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder9, 100, ' ');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(stringBuffer25);
        org.junit.Assert.assertEquals(stringBuffer25.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(106, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 106");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((long) (byte) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.deleteFirst('3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.insert(8, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator('4', 18);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll(strMatcher51, "e\n10############################### true\n\n\n1.0\n\n");
        int int56 = strBuilder50.lastIndexOf('3', (int) '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        int int2 = strBuilder1.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        int int42 = strBuilder40.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("true\n10", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder1.insert((int) (byte) 1, (java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.insert((int) '\000', (long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder1.trim();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 39 + "'", int2 == 39);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(false);
        char[] charArray10 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(0, charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, 3);
        java.io.Reader reader15 = strBuilder2.asReader();
        int int18 = strBuilder2.indexOf("\n1.0\n", 12);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        int int15 = strBuilder8.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append("4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadRight(100, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.deleteFirst('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        int int33 = strBuilder31.lastIndexOf(strMatcher32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.setCharAt((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        java.util.stream.IntStream intStream30 = strBuilder24.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        int int42 = strBuilder35.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        java.lang.String str49 = strBuilder48.getNewLineText();
        boolean boolean50 = strBuilder35.equals(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.append(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.deleteFirst('\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder23.appendln(strBuilder54, (int) '\n', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) 50);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(false);
        boolean boolean27 = strBuilder20.equals(strBuilder26);
        boolean boolean29 = strBuilder20.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        int int37 = strBuilder30.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder20.append((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.delete((int) '\n', 10);
        int int45 = strBuilder43.indexOf("true");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        java.lang.String str49 = strBuilder39.substring((int) (byte) 1);
        java.lang.String str51 = strBuilder39.substring(3);
        int int53 = strBuilder39.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "rue\n10############################### true\n\n\n1.0\n\n" + "'", str49, "rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "e\n10############################### true\n\n\n1.0\n\n" + "'", str51, "e\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 38 + "'", int53 == 38);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder5.insert((int) (short) 0, (float) (short) 10);
        java.lang.String str44 = strBuilder43.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10.0false######4true\n" + "'", str44, "10.0false######4true\n");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.ensureCapacity((int) ' ');
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(stringBuffer38, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str50 = strBuilder49.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        java.lang.String str60 = strBuilder56.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNewLine();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        java.lang.String str77 = strBuilder73.rightString((int) '4');
        java.lang.Object[] objArray78 = new java.lang.Object[] { strBuilder65, wildcardClass70, 10.0d, (-1.0d), str77 };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder56.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder49.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.appendWithSeparators(objArray78, "\n1.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder30.append((java.lang.CharSequence) "\n1.0\n", (int) (short) 100, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "true\n10" + "'", str60, "true\n10");
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n" + "'", str77, "\n");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(false);
        int int16 = strBuilder15.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(false);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.appendln(charArray23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.insert(39, charArray23, 14, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 39");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.delete(12, 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceFirst("true", "0.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.String str47 = strBuilder41.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder33.appendln(strBuilder55, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.replace(41, (int) 'g', "true\n10100.0 \n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.io.Writer writer19 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        char[] charArray60 = strBuilder55.toCharArray();
        char[] charArray61 = strBuilder39.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder25.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder7.insert(1, (java.lang.Object) charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder7.appendln((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        int int69 = strBuilder67.indexOf('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(210);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.setNewLineText("false");
        java.lang.String str62 = strBuilder40.rightString((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.replaceAll('\n', '\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0" + "'", str62, "0");
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.String str30 = strBuilder28.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder28.lastIndexOf(strMatcher31, 6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.setCharAt(0, '4');
        int int40 = strBuilder2.lastIndexOf('a');
        java.lang.String str42 = strBuilder2.rightString((int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 14 + "'", int40 == 14);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(false);
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("true");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.append((float) 210);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln(stringBuffer21, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.appendln((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln(stringBuffer33, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("ass j", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        java.lang.String str54 = strBuilder50.rightString(10);
        boolean boolean56 = strBuilder50.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendFixedWidthPadLeft((java.lang.Object) strBuilder70, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder50.appendFixedWidthPadLeft((java.lang.Object) strBuilder57, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        java.lang.StringBuffer stringBuffer83 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder50.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder41.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder28.append(stringBuffer83);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "true\n10" + "'", str54, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(stringBuffer83);
        org.junit.Assert.assertEquals(stringBuffer83.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder22.chars();
        boolean boolean28 = strBuilder22.endsWith("4");
        boolean boolean30 = strBuilder22.endsWith("97########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        boolean boolean19 = strBuilder17.contains(strMatcher18);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((double) (byte) 1);
        boolean boolean47 = strBuilder5.equals(strBuilder46);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendSeparator('\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.replace(257, (int) (short) 10, "true");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        int int31 = strBuilder28.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.deleteFirst("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer45 = strBuilder44.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder40, 0, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.append("\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        char[] charArray8 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(stringBuffer13, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln(stringBuffer47, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        boolean boolean73 = strBuilder59.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.append((java.lang.Object) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        char[] charArray80 = strBuilder75.toCharArray();
        char[] charArray81 = strBuilder59.getChars(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder50.insert((int) (short) 1, charArray81);
        char[] charArray83 = strBuilder42.getChars(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder42.appendSeparator('\000', 'r');
        boolean boolean88 = strBuilder42.startsWith("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "true\n10 \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "true\n10 \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[t, r, u, e, \n, 1, 0,  , \n]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        boolean boolean50 = strBuilder48.contains("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln(stringBuffer57, (int) (short) -1, 5);
        java.util.stream.IntStream intStream61 = strBuilder56.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.appendSeparator('\000', 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.append((java.lang.CharSequence) strBuilder65);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteAll("\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        java.util.stream.IntStream intStream42 = strBuilder41.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder15.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.appendWithSeparators(objArray51, ".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setLength((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNewLine();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((long) (byte) 10);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        int int75 = strBuilder67.lastIndexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.setNullText("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln(strBuilder77);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll(strMatcher7, "true");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.deleteAll('g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(45);
        java.lang.String str45 = strBuilder42.getNullText();
        java.util.stream.IntStream intStream46 = strBuilder42.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceFirst('#', '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        int int27 = strBuilder24.lastIndexOf("\n1097########", 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendPadding(39, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity(45);
        int int37 = strBuilder32.lastIndexOf("true\n10100.0 \n", (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.delete((int) (short) 10, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceFirst('a', '#');
        int int39 = strBuilder31.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.appendFixedWidthPadLeft(322, 18, 't');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        java.lang.String str42 = strBuilder38.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n" + "'", str42, "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.appendSeparator('\000', 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("");
        java.lang.String str16 = strBuilder12.rightString((int) '4');
        java.lang.String str18 = strBuilder12.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder3.append((java.lang.CharSequence) strBuilder22, (int) (byte) -1, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n" + "'", str16, "\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n" + "'", str18, "\n");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        java.lang.String str14 = strBuilder12.leftString(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append(106);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "false" + "'", str14, "false");
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int10 = strBuilder3.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        java.util.stream.IntStream intStream18 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((long) (byte) 10);
        java.lang.String str34 = strBuilder30.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNewLine();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str51 = strBuilder47.rightString((int) '4');
        java.lang.Object[] objArray52 = new java.lang.Object[] { strBuilder39, wildcardClass44, 10.0d, (-1.0d), str51 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder23.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder20.appendAll(objArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer59 = strBuilder55.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder3.appendln(stringBuffer59);
        java.util.stream.IntStream intStream61 = strBuilder3.chars();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "true\n10" + "'", str34, "true\n10");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\n" + "'", str51, "\n");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.deleteCharAt(68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 68");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder9.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteCharAt(34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNewLine();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        int int14 = strBuilder11.indexOf("\n\nclass java.lang.Object10.0-1.0\n", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        java.lang.StringBuffer stringBuffer44 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder20.appendln(stringBuffer44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder11.appendln(stringBuffer44, 22, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(stringBuffer44);
        org.junit.Assert.assertEquals(stringBuffer44.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendSeparator('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(20);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        int int29 = strBuilder27.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append((long) (byte) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendSeparator(".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int32 = strBuilder24.lastIndexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.appendFixedWidthPadLeft(24, 32, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append((java.lang.Object) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder16.insert(22, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator("\n\nclass java.lang.Object10.0-1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((long) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendFixedWidthPadRight((int) (byte) 100, 66, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendln(stringBuffer54, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert((int) (short) 0, (double) 0);
        char[] charArray63 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder48.insert((int) '\000', charArray63);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        java.lang.String str4 = strBuilder3.toString();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        java.lang.String str42 = strBuilder38.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNewLine();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        java.lang.Object[] objArray60 = new java.lang.Object[] { strBuilder47, wildcardClass52, 10.0d, (-1.0d), str59 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder26.append(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendSeparator('r', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true\n10" + "'", str42, "true\n10");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        int int54 = strBuilder52.lastIndexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append('3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder5.lastIndexOf(strMatcher6, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator("\n1.0\ntrue\n10############################### true\n\n", "false");
        boolean boolean13 = strBuilder11.endsWith("rue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('3');
        int int45 = strBuilder40.lastIndexOf("\n10", (-1));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.String str37 = strBuilder31.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        int int44 = strBuilder41.indexOf(strMatcher42, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendPadding(3, ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.appendNull();
        java.lang.String str9 = strBuilder3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(stringBuffer14, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        boolean boolean37 = strBuilder23.equalsIgnoreCase(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder18.append((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        char[] charArray44 = strBuilder39.toCharArray();
        char[] charArray45 = strBuilder23.getChars(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.append(charArray45);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.appendln(stringBuffer47, 78, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\n" + "'", str9, "\n");
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "\n ");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append((float) 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('\000', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        java.io.Writer writer8 = strBuilder4.asWriter();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(strBuilder19, 68, (int) '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        int int24 = strBuilder16.lastIndexOf(strMatcher23);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        java.util.stream.IntStream intStream25 = strBuilder24.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str29 = strBuilder28.getNewLineText();
        java.lang.Object[] objArray34 = new java.lang.Object[] { strBuilder24, strBuilder28, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder17.appendAll(objArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder17.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder9.append((java.lang.Object) strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(false);
        boolean boolean27 = strBuilder20.equals(strBuilder26);
        int int28 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.append(214);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        java.lang.String str27 = strBuilder20.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.append(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.ensureCapacity((int) (short) -1);
        char char33 = strBuilder31.charAt((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strBuilder31.substring(78, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + 't' + "'", char33 == 't');
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.replace(0, (int) (short) 10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        java.io.Reader reader48 = strBuilder47.asReader();
        int int51 = strBuilder47.indexOf("4-1.0 true", 52);
        boolean boolean52 = strBuilder39.equals(strBuilder47);
        int int53 = strBuilder47.length();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str3 = strBuilder1.rightString(4);
        int int5 = strBuilder1.lastIndexOf('\n');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "e\n10" + "'", str3, "e\n10");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendSeparator("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.insert(40, ".0-1.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (short) 1);
        boolean boolean15 = strBuilder13.contains("true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNewLine();
        boolean boolean38 = strBuilder24.equalsIgnoreCase(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.append((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        char[] charArray45 = strBuilder40.toCharArray();
        char[] charArray46 = strBuilder24.getChars(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder18.appendln(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder18.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln(stringBuffer55, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        boolean boolean81 = strBuilder67.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.append((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.minimizeCapacity();
        char[] charArray88 = strBuilder83.toCharArray();
        char[] charArray89 = strBuilder67.getChars(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder58.insert((int) (short) 1, charArray89);
        char[] charArray91 = strBuilder50.getChars(charArray89);
        char[] charArray92 = strBuilder5.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder5.appendln("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ ]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[ ]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "true\n10 \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "true\n10 \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[t, r, u, e, \n, 1, 0,  , \n]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst('\n', '\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append((float) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendSeparator('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        java.util.stream.IntStream intStream11 = strBuilder10.codePoints();
        java.lang.String str12 = strBuilder10.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n1.0\n" + "'", str12, "\n1.0\n");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        int int24 = strBuilder20.indexOf(strMatcher23);
        int int25 = strBuilder20.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(false);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        java.util.stream.IntStream intStream57 = strBuilder56.codePoints();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        boolean boolean28 = strBuilder27.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str43 = strBuilder39.rightString((int) '4');
        java.lang.Object[] objArray44 = new java.lang.Object[] { strBuilder31, wildcardClass36, 10.0d, (-1.0d), str43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.appendAll(objArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendWithSeparators(objArray44, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator(' ', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator('\000', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n" + "'", str43, "\n");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendln((double) 10.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        int int17 = strBuilder16.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        boolean boolean81 = strBuilder67.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.append((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder62.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strBuilder84.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder58.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder46.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder16.append(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder31.deleteFirst("aaaaaaaaaaa32");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(false);
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.appendFixedWidthPadLeft(38, 12, 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        boolean boolean32 = strBuilder28.contains(strMatcher31);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("###### true\n\n###", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((long) (byte) 10);
        java.lang.String str39 = strBuilder35.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("");
        java.lang.String str56 = strBuilder52.rightString((int) '4');
        java.lang.Object[] objArray57 = new java.lang.Object[] { strBuilder44, wildcardClass49, 10.0d, (-1.0d), str56 };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder35.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendln(true);
        java.lang.String str62 = strBuilder61.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder26.append((java.lang.CharSequence) strBuilder65, 3, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "true\n10" + "'", str39, "true\n10");
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n" + "'", str56, "\n");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str62, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        java.io.Writer writer49 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (float) '\000');
        int int53 = strBuilder52.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 26 + "'", int53 == 26);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.util.stream.IntStream intStream15 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        java.lang.String str31 = strBuilder27.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str48 = strBuilder44.rightString((int) '4');
        java.lang.Object[] objArray49 = new java.lang.Object[] { strBuilder36, wildcardClass41, 10.0d, (-1.0d), str48 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder17.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        java.lang.StringBuffer stringBuffer65 = strBuilder64.toStringBuffer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10" + "'", str31, "true\n10");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n" + "'", str48, "\n");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "1444444444444444444444444444444444444444444444444444true\n\nclass java.lang.Object10.0-1.0\nclass\n\nclass java.lang.Object10.0-1.0\njava.lang.Object10.0-1.0\n\nclass java.lang.Object10.0-1.0\nass\n\nclass java.lang.Object10.0-1.0\nj#");
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append(10);
        int int12 = strBuilder8.lastIndexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.deleteFirst("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        int int52 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendSeparator("t", (int) (short) 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 68 + "'", int52 == 68);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.lang.StringBuffer stringBuffer6 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln(stringBuffer13, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendNewLine();
        boolean boolean36 = strBuilder22.equalsIgnoreCase(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        char[] charArray43 = strBuilder38.toCharArray();
        char[] charArray44 = strBuilder22.getChars(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder9.append(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.appendln(charArray44);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(stringBuffer6);
        org.junit.Assert.assertEquals(stringBuffer6.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        int int14 = strBuilder9.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) (short) 1, (int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str58 = strBuilder57.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        java.util.stream.IntStream intStream65 = strBuilder64.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str69 = strBuilder68.getNewLineText();
        java.lang.Object[] objArray74 = new java.lang.Object[] { strBuilder64, strBuilder68, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.appendAll(objArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln(stringBuffer82, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.deleteFirst(strMatcher86);
        boolean boolean89 = strBuilder87.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strBuilder87.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder75.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strBuilder93.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder52.appendln(strBuilder93);
        java.lang.String str98 = strBuilder52.midString(0, 200);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(intStream65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10100.0\n45\n\ntrue\n\n100.0-1.0 true\n\n" + "'", str98, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10100.0\n45\n\ntrue\n\n100.0-1.0 true\n\n");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        int int19 = strBuilder12.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.String str26 = strBuilder25.getNewLineText();
        boolean boolean27 = strBuilder12.equals(strBuilder25);
        java.lang.String str28 = strBuilder25.toString();
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(false);
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.insert(0, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.insert((int) (byte) 0, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder5.appendln(charArray41);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int17 = strBuilder15.lastIndexOf(strMatcher16);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.util.stream.IntStream intStream12 = strBuilder7.codePoints();
        boolean boolean14 = strBuilder7.endsWith("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) boolean14, (int) 'g', 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        boolean boolean15 = strBuilder13.contains("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteFirst('\000');
        java.lang.String str19 = strBuilder17.rightString(2);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ue" + "'", str19, "ue");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder5.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int15 = strBuilder5.lastIndexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder78, 0, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.append(false);
        java.lang.Object obj88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln(obj88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder89.minimizeCapacity();
        boolean boolean91 = strBuilder5.equals(strBuilder90);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendPadding(3, '#');
        boolean boolean28 = strBuilder8.equals((java.lang.Object) '#');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.replaceAll('\n', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendFixedWidthPadLeft((int) '4', (int) 'a', '#');
        java.lang.Class<?> wildcardClass19 = strBuilder14.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        java.lang.Object obj28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(obj28);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        boolean boolean32 = strBuilder18.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendNewLine();
        boolean boolean63 = strBuilder49.equalsIgnoreCase(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder13.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.replaceFirst("true\n100.0", "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        int int33 = strBuilder26.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.String str40 = strBuilder39.getNewLineText();
        boolean boolean41 = strBuilder26.equals(strBuilder39);
        java.lang.String str42 = strBuilder39.toString();
        java.lang.StringBuffer stringBuffer43 = strBuilder39.toStringBuffer();
        int int46 = strBuilder39.lastIndexOf("true\n100.0", 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.appendNewLine();
        boolean boolean48 = strBuilder22.equalsIgnoreCase(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendln((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append("true\n100.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(stringBuffer43);
        org.junit.Assert.assertEquals(stringBuffer43.toString(), "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(false);
        int int24 = strBuilder23.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder30.lastIndexOf(strMatcher31, (int) 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendNewLine();
        boolean boolean65 = strBuilder51.equalsIgnoreCase(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder46.append((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder46.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder34.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendFixedWidthPadRight(1, 40, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.append((java.lang.CharSequence) strBuilder66);
        boolean boolean69 = strBuilder9.endsWith("t");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) 'a', 10, '#');
        java.lang.String str53 = strBuilder46.midString((int) (short) 10, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.setCharAt(1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendln("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((long) 2);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ass j" + "'", str53, "ass j");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        boolean boolean61 = strBuilder47.equalsIgnoreCase(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder42.append((java.lang.Object) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder42.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder64.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendln(true);
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst(' ');
        java.io.Reader reader80 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader83 = strBuilder82.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((java.lang.CharSequence) strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.appendln(true);
        java.util.stream.IntStream intStream87 = strBuilder86.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder77.append(strBuilder90);
        java.lang.StringBuffer stringBuffer92 = strBuilder90.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder67.appendln(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder67.replaceAll("true\n10############################### true\n\n", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder11.append(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder11.append(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(intStream87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteAll(strMatcher22);
        int int25 = strBuilder23.indexOf("\n");
        int int27 = strBuilder23.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.replace(8, (int) 't', "4-1.0 true");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst('a', 'a');
        java.io.Reader reader10 = strBuilder9.asReader();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding((int) (short) 10, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.appendFixedWidthPadRight(1, 26, '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        java.lang.String str27 = strBuilder20.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendln(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.append(strBuilder38, 13, 41);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        int int49 = strBuilder42.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        boolean boolean54 = strBuilder51.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln(stringBuffer59, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendln(stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder39.appendln((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append("\n1097########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        int int17 = strBuilder16.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        boolean boolean81 = strBuilder67.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.append((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder62.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strBuilder84.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder58.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder46.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder16.append(strBuilder31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder16.insert((int) 'r', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 114");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('\n', '#');
        boolean boolean30 = strBuilder25.endsWith("true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendPadding((int) '#', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer33 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        int int41 = strBuilder34.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendSeparator("");
        char[] charArray51 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendln(charArray51);
        java.io.Reader reader53 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append((java.lang.CharSequence) strBuilder43, (int) (short) 1, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.deleteAll('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "#");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("\n1.0\n", 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((float) (byte) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        boolean boolean26 = strBuilder12.equalsIgnoreCase(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.append((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder29.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        boolean boolean52 = strBuilder38.equalsIgnoreCase(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        char[] charArray59 = strBuilder54.toCharArray();
        char[] charArray60 = strBuilder38.getChars(charArray59);
        char[] charArray61 = strBuilder29.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.append(charArray59);
        char[] charArray63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.append(charArray63, (-1), 32);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int15 = strBuilder13.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.minimizeCapacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        boolean boolean15 = strBuilder13.contains("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight(52, 32, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.deleteCharAt(78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendSeparator('r', 18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendSeparator("true\n10");
        int int22 = strBuilder0.lastIndexOf(".0-1.0\n", (int) (byte) 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        java.lang.String str13 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str40 = strBuilder36.rightString((int) '4');
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder28, wildcardClass33, 10.0d, (-1.0d), str40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder12.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.replace(strMatcher46, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        int int71 = strBuilder64.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        java.lang.String str78 = strBuilder77.getNewLineText();
        boolean boolean79 = strBuilder64.equals(strBuilder77);
        java.lang.String str80 = strBuilder77.toString();
        java.lang.StringBuffer stringBuffer81 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendln(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder43.append(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.appendln(stringBuffer81);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n" + "'", str40, "\n");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        boolean boolean3 = strBuilder0.contains("\n");
        java.util.stream.IntStream intStream4 = strBuilder0.chars();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(intStream4);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        int int17 = strBuilder16.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int20 = strBuilder16.indexOf(strMatcher18, 214);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        java.io.Reader reader19 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(30);
        int int22 = strBuilder21.capacity();
        int int23 = strBuilder21.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23 == 16);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("ass j", "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.ensureCapacity(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.setNewLineText("97########");
        java.util.stream.IntStream intStream60 = strBuilder59.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteAll(strMatcher9);
        java.util.stream.IntStream intStream11 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        boolean boolean15 = strBuilder10.endsWith("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        int int30 = strBuilder26.lastIndexOf('\n', 50);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.deleteFirst("4");
        java.lang.String str52 = strBuilder44.midString(7, 12);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(false);
        char[] charArray10 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(0, charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendln(stringBuffer32, (int) (byte) -1, 10);
        int int38 = strBuilder35.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "");
        boolean boolean45 = strBuilder2.equals((java.lang.Object) strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        boolean boolean46 = strBuilder32.equalsIgnoreCase(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.append((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder49.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNewLine();
        boolean boolean72 = strBuilder58.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder53.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        char[] charArray79 = strBuilder74.toCharArray();
        char[] charArray80 = strBuilder58.getChars(charArray79);
        char[] charArray81 = strBuilder49.getChars(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder23.append(charArray79);
        int int83 = strBuilder23.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ ]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 23 + "'", int83 == 23);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        boolean boolean37 = strBuilder23.equalsIgnoreCase(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder18.append((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        char[] charArray44 = strBuilder39.toCharArray();
        char[] charArray45 = strBuilder23.getChars(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder17.appendln(charArray44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder6.append(charArray44, 6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst(' ');
        java.io.Reader reader40 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendln((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.deleteFirst(strMatcher53);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln(stringBuffer12, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert((int) (short) 0, (double) 0);
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.appendln((java.lang.Object) charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder32, strBuilder36, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder25.append(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator(' ');
        boolean boolean64 = strBuilder22.equals(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(1, (int) '4', '4');
        int int29 = strBuilder22.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder22.appendln(stringBuffer78);
        boolean boolean80 = strBuilder12.equals((java.lang.Object) strBuilder79);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln(stringBuffer21, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln(stringBuffer25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        java.lang.String str33 = strBuilder32.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        java.lang.String str60 = strBuilder56.rightString((int) '4');
        java.lang.Object[] objArray61 = new java.lang.Object[] { strBuilder48, wildcardClass53, 10.0d, (-1.0d), str60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder39.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder32.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder29.appendWithSeparators(objArray61, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder14.appendWithSeparators(objArray61, "lse41\na\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n" + "'", str60, "\n");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln((double) 100.0f);
        java.lang.String str57 = strBuilder46.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendPadding((int) (byte) 0, 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n" + "'", str57, "true\n");
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((float) 'a');
        java.io.Writer writer88 = strBuilder87.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder42.insert(2, (java.lang.Object) writer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.replace((int) (byte) 0, 4, "e\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        boolean boolean33 = strBuilder29.startsWith("true\n0.0\ntrue\nra");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.delete(7, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.ensureCapacity(10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        java.lang.Object[] objArray25 = new java.lang.Object[] { strBuilder15, strBuilder19, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendSeparator("\n", "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder0.replaceFirst('a', '4');
        java.lang.String str47 = strBuilder0.leftString(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder50.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.append((float) (short) 10);
        java.util.stream.IntStream intStream86 = strBuilder81.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder0.append((java.lang.Object) intStream86);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n\ntrue\n" + "'", str47, "\n\ntrue\n");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(intStream86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(false);
        boolean boolean27 = strBuilder20.equals(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendFixedWidthPadLeft(22, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        java.lang.StringBuffer stringBuffer40 = strBuilder34.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(false);
        char[] charArray47 = strBuilder46.toCharArray();
        char[] charArray48 = strBuilder34.getChars(charArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder26.appendln(charArray48, 26, 210);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[t, r, u, e, \n]");
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.deleteFirst(strMatcher55);
        int int59 = strBuilder28.lastIndexOf('g', (int) '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder8.lastIndexOf('r', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendln((java.lang.Object) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.appendFixedWidthPadRight(39, 1, 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        java.lang.StringBuffer stringBuffer29 = strBuilder14.toStringBuffer();
        java.io.Writer writer30 = strBuilder14.asWriter();
        int int33 = strBuilder14.indexOf('\n', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.setNewLineText("\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "\n ");
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        java.lang.String str14 = strBuilder12.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        int int24 = strBuilder22.lastIndexOf('#');
        int int27 = strBuilder22.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        char[] charArray35 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder12.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendSeparator(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer27 = strBuilder26.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.append((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str9 = strBuilder7.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.ensureCapacity(4);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.append((double) 18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int54 = strBuilder47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendSeparator("\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str13 = strBuilder9.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replace(5, 50, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadLeft(39, 34, '\000');
        int int26 = strBuilder20.lastIndexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str41 = strBuilder40.getNewLineText();
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder36, strBuilder40, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.replace(13, 36, "###### true\n\n###");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln("");
        java.lang.String str71 = strBuilder70.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        java.util.stream.IntStream intStream78 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln("");
        java.lang.String str82 = strBuilder81.getNewLineText();
        java.lang.Object[] objArray87 = new java.lang.Object[] { strBuilder77, strBuilder81, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.appendAll(objArray87);
        java.lang.StringBuffer stringBuffer89 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder20.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder91.append(strBuilder92, 1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder91.insert(14, (long) '\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\n" + "'", str13, "\n");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "\ntrue\n\n100.04-1.0 ");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('\n', 3);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        int int10 = strBuilder7.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendPadding((int) '#', 'g');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replace((int) '\000', (int) (byte) 10, "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) 106);
        java.lang.String str17 = strBuilder15.rightString(39);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "true\n0.0\ntrue\nra106" + "'", str17, "true\n0.0\ntrue\nra106");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.deleteCharAt((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.append((double) 6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setNewLineText("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        char[] charArray30 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder4.append((java.lang.Object) strBuilder31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence35 = strBuilder32.subSequence(50, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.io.Writer writer45 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.appendln(0.0d);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replaceAll(strMatcher15, "hi!");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder9.append(strBuilder58);
        int int64 = strBuilder63.size();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 55 + "'", int64 == 55);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        int int39 = strBuilder37.indexOf("t");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.deleteAll("97########");
        java.lang.String str42 = strBuilder41.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append('\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        java.lang.String str49 = strBuilder12.rightString(23);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "04-1.0 true\n0.0\ntrue\nra" + "'", str49, "04-1.0 true\n0.0\ntrue\nra");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        boolean boolean16 = strBuilder12.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator(' ', 18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        java.lang.String str12 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append('\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.delete(18, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendSeparator("");
        char[] charArray74 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.insert(0, charArray74);
        boolean boolean78 = strBuilder76.startsWith("\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding(3, '#');
        java.lang.String str21 = strBuilder18.substring((int) ' ', 50);
        java.lang.String str22 = strBuilder18.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "###### true\n\n###" + "'", str21, "###### true\n\n###");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10############################### true\n\n###" + "'", str22, "true\n10############################### true\n\n###");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln("true\n", (int) '3', 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int45 = strBuilder10.lastIndexOf(strMatcher43, 24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        java.lang.String str9 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendFixedWidthPadLeft((int) '4', 210, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        java.lang.String str36 = strBuilder32.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("");
        java.lang.String str53 = strBuilder49.rightString((int) '4');
        java.lang.Object[] objArray54 = new java.lang.Object[] { strBuilder41, wildcardClass46, 10.0d, (-1.0d), str53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((double) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 50, 30, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((long) (byte) 10);
        int int74 = strBuilder72.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        boolean boolean81 = strBuilder77.contains(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.append((long) (byte) 10);
        boolean boolean85 = strBuilder77.endsWith("hi!");
        char[] charArray86 = strBuilder77.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder64.append(charArray86, 100, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "true\n10" + "'", str36, "true\n10");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "true\n1010");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "true\n1010");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[t, r, u, e, \n, 1, 0, 1, 0]");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteFirst('r');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        int int68 = strBuilder66.indexOf('r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 76 + "'", int68 == 76);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        int int54 = strBuilder52.lastIndexOf('#');
        int int57 = strBuilder52.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        char[] charArray65 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(false);
        java.lang.Object obj78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(obj78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) strBuilder80, (int) (short) 1, '4');
        boolean boolean85 = strBuilder44.contains('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder44.insert(3, (long) 26);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("\n ", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        java.lang.String str71 = strBuilder70.getNewLineText();
        boolean boolean72 = strBuilder57.equals(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln(stringBuffer82, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.insert((int) (short) 0, (double) 0);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.appendln(charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder9.appendln((java.lang.Object) strBuilder76);
        int int98 = strBuilder76.lastIndexOf('#', (int) '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendSeparator("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator("97########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10100.0 \n");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        boolean boolean17 = strBuilder15.contains(strMatcher16);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.CharSequence charSequence8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append(charSequence8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("", "e\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.setNewLineText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator("ue", "\n10");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.replaceFirst(strMatcher40, "rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        int int50 = strBuilder43.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.deleteFirst('\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder0.append(strBuilder52, (int) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding(3, '#');
        java.lang.String str20 = strBuilder18.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append((long) 200);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "t" + "'", str20, "t");
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strBuilder1.substring(1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder10.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNull();
        int int52 = strBuilder49.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.replaceAll(strMatcher53, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        java.lang.StringBuffer stringBuffer65 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder49.append(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder45.append(stringBuffer65);
        int int70 = strBuilder67.lastIndexOf("\nfalse\n", 170);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        java.io.Writer writer42 = strBuilder39.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceFirst(strMatcher43, "\n1097########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("true", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append((int) '\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln(stringBuffer49, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendNewLine();
        boolean boolean75 = strBuilder61.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.append((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        char[] charArray82 = strBuilder77.toCharArray();
        char[] charArray83 = strBuilder61.getChars(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder52.insert((int) (short) 1, charArray83);
        char[] charArray85 = strBuilder43.getChars(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder12.getChars(6, 34, charArray83, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ ]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0]");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.appendSeparator("true\n10############################### true\n\n", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.insert(0, (double) (byte) 0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        boolean boolean10 = strBuilder2.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.deleteFirst("35\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert(12, "true\n10############################### true\n\n###");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('4');
        int int11 = strBuilder9.lastIndexOf("hi!");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNewLine();
        java.lang.String str16 = strBuilder7.substring(7, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.setNullText("true\n10############################### true\n\n###");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n" + "'", str16, "\n");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (byte) 10);
        java.lang.String str20 = strBuilder16.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.Object[] objArray38 = new java.lang.Object[] { strBuilder25, wildcardClass30, 10.0d, (-1.0d), str37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendAll(objArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        int int49 = strBuilder47.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder39.append((java.lang.CharSequence) strBuilder47);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(stringBuffer54, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strBuilder58, 32, '#');
        java.io.Writer writer65 = strBuilder57.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.insert(52, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder10.appendln((java.lang.Object) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "############################ true\n\n\n1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "true\n10" + "'", str20, "true\n10");
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(0, (double) 13);
        int int50 = strBuilder44.lastIndexOf('4', (int) 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('a');
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendSeparator("04-1.0 true\n0.0\ntrue\nra", "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln(stringBuffer26, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.deleteAll(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder17.appendln((java.lang.Object) strMatcher31);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator('r', '3');
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('#');
        java.io.Writer writer19 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str34 = strBuilder33.getNewLineText();
        java.lang.Object[] objArray39 = new java.lang.Object[] { strBuilder29, strBuilder33, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll(objArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln('3');
        java.lang.String str64 = strBuilder60.rightString(78);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder18.append((java.lang.CharSequence) strBuilder60);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "trueahi!-1\n22.03\n" + "'", str64, "trueahi!-1\n22.03\n");
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        boolean boolean65 = strBuilder63.contains("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendPadding(10, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder63.appendln(strBuilder72, (int) '#', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.ensureCapacity((int) (byte) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replace(strMatcher7, "\n1.0\n", (int) '#', 34, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder42.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        java.lang.String str55 = strBuilder51.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.deleteAll("");
        java.lang.String str58 = strBuilder51.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder51.appendln("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        java.util.stream.IntStream intStream68 = strBuilder62.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln((java.lang.Object) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        int int76 = strBuilder70.indexOf(strMatcher74, (int) '4');
        java.util.stream.IntStream intStream77 = strBuilder70.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder70.append((double) (short) 10);
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder69.append(stringBuffer80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder14.append(stringBuffer80, 16, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10" + "'", str55, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(intStream68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(intStream77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "\n10.0");
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.insert((int) 't', 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int16 = strBuilder12.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        boolean boolean33 = strBuilder12.equalsIgnoreCase(strBuilder32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendFixedWidthPadLeft((int) ' ', (int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((double) '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        int int19 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        java.lang.Object[] objArray48 = new java.lang.Object[] { strBuilder38, strBuilder42, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.appendln(stringBuffer56, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.deleteFirst(strMatcher60);
        boolean boolean63 = strBuilder61.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "97########");
        char[] charArray73 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        int int75 = strBuilder13.lastIndexOf(strMatcher74);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ ]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        int int29 = strBuilder27.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceAll("true\n10100.0 \n", "");
        boolean boolean33 = strBuilder27.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = strBuilder1.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        boolean boolean6 = strBuilder1.contains(strMatcher5);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(stringBuffer4);
        org.junit.Assert.assertEquals(stringBuffer4.toString(), "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        int int10 = strBuilder7.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(false);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator('4', 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("\n1097########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll('a', '\n');
        int int25 = strBuilder23.indexOf("true\n10\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((-1L));
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteFirst(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((long) 36);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendFixedWidthPadLeft(0, (int) (short) 100, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append("v.lang.Object10.0-1.0\n", (int) (byte) 0, 11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str39 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendNewLine();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str66 = strBuilder62.rightString((int) '4');
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder54, wildcardClass59, 10.0d, (-1.0d), str66 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder31.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strBuilder71, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendln(strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.deleteAll('a');
        int int92 = strBuilder89.lastIndexOf("4true\n10############################### true\n\n", (int) (byte) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\n" + "'", str66, "\n");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append("rue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(36);
        boolean boolean13 = strBuilder11.contains("0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        int int37 = strBuilder2.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        java.util.stream.IntStream intStream46 = strBuilder40.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        int int58 = strBuilder51.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        java.lang.String str65 = strBuilder64.getNewLineText();
        boolean boolean66 = strBuilder51.equals(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.append(strBuilder64);
        java.lang.StringBuffer stringBuffer68 = strBuilder50.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder2.append(stringBuffer68, (int) '#', 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "true\n52##################################################################################################");
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendln((double) (short) 1);
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = strBuilder11.subSequence(11, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("");
        java.lang.String str57 = strBuilder56.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((long) (byte) 10);
        java.lang.String str67 = strBuilder63.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendNewLine();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln("");
        java.lang.String str84 = strBuilder80.rightString((int) '4');
        java.lang.Object[] objArray85 = new java.lang.Object[] { strBuilder72, wildcardClass77, 10.0d, (-1.0d), str84 };
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder63.appendAll(objArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder56.appendAll(objArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder53.append(strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder53.replaceAll("tr", "04-1.0 true\n0.0\ntrue\nra");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "true\n10" + "'", str67, "true\n10");
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\n" + "'", str84, "\n");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) -1);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder9.appendFixedWidthPadLeft((java.lang.Object) 210, 12, ' ');
        char[] charArray72 = strBuilder71.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444         210");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444         210");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, t, r, u, e, \n, 0, ., 0, \n, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,  ,  ,  ,  ,  ,  ,  ,  ,  , 2, 1, 0]");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.insert((int) '\000', false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('a', 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.setLength(13);
        int int26 = strBuilder9.indexOf("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendln("4-1.0 true", 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 10);
        int int83 = strBuilder81.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder90.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder73.appendln(strBuilder91);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.replaceAll(strMatcher45, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.replaceFirst("4-1.0 true", "v.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((long) (byte) 10);
        java.lang.String str71 = strBuilder67.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendln(strBuilder67);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "true\n10" + "'", str71, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str39 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendNewLine();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str66 = strBuilder62.rightString((int) '4');
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder54, wildcardClass59, 10.0d, (-1.0d), str66 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder31.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strBuilder71, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendln(strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.deleteAll('a');
        java.util.stream.IntStream intStream90 = strBuilder89.codePoints();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\n" + "'", str66, "\n");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(intStream90);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((int) (short) 10);
        java.io.Writer writer48 = strBuilder44.asWriter();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadLeft(22, 13, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        int int49 = strBuilder42.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        boolean boolean54 = strBuilder51.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln(stringBuffer59, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendln(stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder39.appendln((java.lang.Object) strTokenizer68);
        int int74 = strBuilder71.lastIndexOf("", (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.appendFixedWidthPadLeft((int) '4', 10, 'r');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        int int80 = strBuilder78.indexOf(strMatcher79);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        java.io.Reader reader41 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll(strMatcher50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.insert(22, (java.lang.Object) strBuilder51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendNewLine();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str52 = strBuilder48.rightString((int) '4');
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder40, wildcardClass45, 10.0d, (-1.0d), str52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder31.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("ass j", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        boolean boolean67 = strBuilder64.contains(strMatcher66);
        java.lang.String str70 = strBuilder64.midString(200, 20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.append("rue\n", 257, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(true);
        java.lang.String str43 = strBuilder42.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "trueahi!-1\n22.0true" + "'", str43, "trueahi!-1\n22.0true");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int13 = strBuilder10.indexOf(strMatcher11, 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder43, strBuilder47, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        boolean boolean60 = strBuilder54.equals((java.lang.Object) str59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.deleteAll(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append((long) 30);
        int int65 = strBuilder64.size();
        boolean boolean66 = strBuilder33.equals(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder33.replaceAll('\n', 'r');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 20 + "'", int65 == 20);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceFirst('3', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.replaceAll('\000', 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln(10.0d);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendSeparator('#', 32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) 'a', (double) 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst(strMatcher30);
        boolean boolean33 = strBuilder29.startsWith("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int34 = strBuilder32.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        java.lang.String str46 = strBuilder42.rightString(10);
        boolean boolean48 = strBuilder42.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder42.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.lang.StringBuffer stringBuffer75 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder42.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendln((java.lang.Object) strBuilder79);
        boolean boolean82 = strBuilder36.equals((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder36.replaceFirst(' ', 'r');
        int int88 = strBuilder85.lastIndexOf('4', (int) (byte) 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true\n10" + "'", str46, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        int int26 = strBuilder22.indexOf('a', 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendln("rue\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.deleteAll(strMatcher29);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9 + "'", int26 == 9);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        int int17 = strBuilder16.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.lang.String str23 = strBuilder21.rightString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(stringBuffer30, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder41.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder38.appendWithSeparators(objArray70, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder25.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder19.appendln(strBuilder75, 26, 9);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "e\n10" + "'", str23, "e\n10");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceFirst('\n', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator("\n", "\n\ntrue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator('3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(true);
        java.util.stream.IntStream intStream12 = strBuilder11.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll("\n");
        java.lang.String str15 = strBuilder11.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendFixedWidthPadLeft((int) '4', 210, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        java.lang.String str42 = strBuilder38.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNewLine();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        java.lang.Object[] objArray60 = new java.lang.Object[] { strBuilder47, wildcardClass52, 10.0d, (-1.0d), str59 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder28.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((double) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) 50, 30, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNewLineText("0.0\n");
        boolean boolean75 = strBuilder0.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder72.replace(strMatcher76, "true\n10############################### true\n\n\n1.0\n1.0\n\n\nclassajava.", 40, 32, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true\n10" + "'", str42, "true\n10");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        char char34 = strBuilder29.charAt(38);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        java.lang.String str45 = strBuilder41.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str62 = strBuilder58.rightString((int) '4');
        java.lang.Object[] objArray63 = new java.lang.Object[] { strBuilder50, wildcardClass55, 10.0d, (-1.0d), str62 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder41.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendPadding((int) (byte) 1, '#');
        char[] charArray71 = strBuilder64.toCharArray(0, 32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder29.insert(40, charArray71, 68, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 68");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + char34 + "' != '" + '#' + "'", char34 == '#');
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "true\n10" + "'", str45, "true\n10");
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n" + "'", str62, "\n");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#]");
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.ensureCapacity(8);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(0, (double) 13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert((int) 'g', (long) 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 103");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.substring((int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        int int9 = strBuilder0.indexOf(strMatcher7, 11);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 100);
        boolean boolean35 = strBuilder29.endsWith("4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendSeparator('\000');
        int int15 = strBuilder13.lastIndexOf("  \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.setNewLineText("\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(true);
        int int54 = strBuilder47.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.String str61 = strBuilder60.getNewLineText();
        boolean boolean62 = strBuilder47.equals(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence72 = strBuilder69.subSequence(322, 200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((long) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll("############################ true\n\n\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceFirst("e\n10############################### true\n\n\n1.0\n\n", "10.0false######4true\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        java.lang.String str14 = strBuilder12.leftString((int) 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\nfalse\n" + "'", str14, "\nfalse\n");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendPadding(9, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendSeparator(" \nclass java.lang.Object10.0-1.0\n97.0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll('g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.deleteAll(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        boolean boolean21 = strBuilder15.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder35, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.appendFixedWidthPadLeft((java.lang.Object) strBuilder22, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.lang.StringBuffer stringBuffer48 = strBuilder42.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder15.appendln(stringBuffer48);
        java.lang.String str51 = strBuilder49.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.insert(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder9.appendln(strBuilder54);
        java.lang.String str57 = strBuilder54.leftString(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln(stringBuffer62, (int) (short) -1, 5);
        java.util.stream.IntStream intStream66 = strBuilder61.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendSeparator('\000', 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((long) ' ');
        boolean boolean73 = strBuilder54.equals(strBuilder70);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10############################### true\n\n" + "'", str51, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4true\n10############################### true\n\n" + "'", str57, "4true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        int int19 = strBuilder12.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.append((int) (byte) 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        boolean boolean43 = strBuilder41.contains("\n1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendFixedWidthPadRight((int) '#', 45, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        boolean boolean15 = strBuilder13.contains("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight(52, 32, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendln(20);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.appendln(stringBuffer53, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replace(strMatcher60, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int67 = strBuilder56.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append(' ');
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendAll(strItor72);
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.append(charArray74, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader83 = strBuilder82.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((java.lang.CharSequence) strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.trim();
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.insert(0, charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder56.append(charArray89);
        char[] charArray92 = strBuilder43.getChars(charArray89);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "\ntrue\n\n100.04-1.0 true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , t, r, u, e, \n]");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.lang.StringBuffer stringBuffer13 = strBuilder7.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln(strBuilder15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.replaceFirst(strMatcher17, "4");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str54 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((long) (byte) 10);
        java.lang.String str64 = strBuilder60.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln("");
        java.lang.String str81 = strBuilder77.rightString((int) '4');
        java.lang.Object[] objArray82 = new java.lang.Object[] { strBuilder69, wildcardClass74, 10.0d, (-1.0d), str81 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder60.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.appendAll(objArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((float) 'a');
        java.io.Writer writer88 = strBuilder87.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder42.insert(2, (java.lang.Object) writer88);
        java.lang.String str92 = strBuilder89.midString(76, (int) (short) -1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "true\n10" + "'", str64, "true\n10");
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n" + "'", str81, "\n");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        boolean boolean51 = strBuilder49.startsWith("\n");
        int int53 = strBuilder49.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(' ');
        boolean boolean57 = strBuilder49.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) '4', (int) 'r', '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.appendln('a');
        int int38 = strBuilder36.lastIndexOf('r');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendSeparator('#');
        int int20 = strBuilder0.lastIndexOf('4', 9);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        int int30 = strBuilder23.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendSeparator("");
        char[] charArray39 = strBuilder32.toCharArray((int) (byte) 0, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append(charArray39, 39, 170);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 170");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "true\n0.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[t, r, u, e, \n, 0, ., 0, \n, \n]");
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendln(stringBuffer17, (int) (byte) -1, 10);
        int int23 = strBuilder20.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator('a', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 10);
        int int66 = strBuilder64.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) 2, 2, '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder5.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int15 = strBuilder5.lastIndexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder78, 0, '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.replace(257, (int) 'g', "###### true\n\n###");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(true);
        java.lang.String str32 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln("\n\ntrue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        int int41 = strBuilder31.lastIndexOf(strMatcher40);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.lang.StringBuffer stringBuffer6 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(false);
        char[] charArray13 = strBuilder12.toCharArray();
        char[] charArray14 = strBuilder0.getChars(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        boolean boolean35 = strBuilder21.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder16.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replace(0, 50, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder15.appendFixedWidthPadLeft((java.lang.Object) strBuilder38, 7, '3');
        int int52 = strBuilder15.lastIndexOf('t', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.appendln(stringBuffer58, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) (byte) 10);
        int int73 = strBuilder71.lastIndexOf('#');
        int int76 = strBuilder71.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.appendln(strBuilder78);
        java.lang.String str85 = strBuilder63.substring((int) (byte) 1);
        char[] charArray86 = strBuilder63.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder15.insert(40, charArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(stringBuffer6);
        org.junit.Assert.assertEquals(stringBuffer6.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n" + "'", str85, "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "\ntrue\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "\ntrue\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[\n, t, r, u, e, \n, 1, 0, 1, 0, 0, ., 0, 1, \n, t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, t, r, u, e, \n, \n, \n]");
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll(strMatcher10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(stringBuffer19, (int) (short) -1, 5);
        java.util.stream.IntStream intStream23 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.append("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        java.lang.StringBuffer stringBuffer29 = strBuilder14.toStringBuffer();
        java.io.Writer writer30 = strBuilder14.asWriter();
        int int33 = strBuilder14.indexOf('\n', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((int) '#');
        java.lang.String str61 = strBuilder54.substring((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.appendln(stringBuffer66, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        java.lang.StringBuffer stringBuffer79 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader82 = strBuilder81.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.append((java.lang.CharSequence) strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append(false);
        char[] charArray86 = strBuilder85.toCharArray();
        char[] charArray87 = strBuilder73.getChars(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder69.appendln(charArray87);
        char[] charArray89 = strBuilder54.getChars(charArray87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder14.append((java.lang.CharSequence) strBuilder54, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "\n ");
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "35\n" + "'", str61, "35\n");
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "true\n");
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, 3, 5, \n, \n]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[4, 3, 5, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "435\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "435\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, 3, 5, \n, \n]");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        java.lang.String str49 = strBuilder39.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        boolean boolean51 = strBuilder39.contains(strMatcher50);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "rue\n10############################### true\n\n\n1.0\n\n" + "'", str49, "rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendSeparator("\n", 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(stringBuffer44, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        boolean boolean70 = strBuilder56.equalsIgnoreCase(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder51.append((java.lang.Object) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.minimizeCapacity();
        char[] charArray77 = strBuilder72.toCharArray();
        char[] charArray78 = strBuilder56.getChars(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder47.insert((int) (short) 1, charArray78);
        char[] charArray80 = strBuilder38.getChars(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder0.append(charArray78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ ]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "true\n10\nclass java.lang.Object10.0-1.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding(3, '#');
        boolean boolean67 = strBuilder40.equals((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder40.appendln(30);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder40.setNewLineText("  \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.replaceFirst(strMatcher6, "true\n100.0");
        int int10 = strBuilder8.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n\ntrue\n");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        int int28 = strBuilder21.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.String str35 = strBuilder34.getNewLineText();
        boolean boolean36 = strBuilder21.equals(strBuilder34);
        boolean boolean37 = strBuilder20.equals(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.append((long) '\n');
        int int42 = strBuilder20.lastIndexOf('#', 214);
        int int43 = strBuilder20.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.appendNull();
        int int46 = strBuilder20.indexOf('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) 0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.replaceFirst(strMatcher9, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder28.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder28.appendFixedWidthPadRight((int) (byte) 1, 34, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("aaaaaaaaaaa32", "\n\nclassajava.");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        int int59 = strBuilder55.indexOf("", 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.deleteFirst("hi!");
        // The following exception was thrown during execution in test generation
        try {
            char char63 = strBuilder55.charAt(38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder7.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll("35\n", ".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendFixedWidthPadLeft((int) '4', 1, '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        boolean boolean38 = strBuilder36.contains(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendSeparator("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.deleteAll("");
        java.io.Writer writer16 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("\n");
        boolean boolean23 = strBuilder9.equalsIgnoreCase(strBuilder20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder20.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer24, "true\n0.0\ntrue\nra106");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        java.lang.String str9 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendFixedWidthPadLeft((int) '4', 210, '4');
        boolean boolean15 = strBuilder5.startsWith("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendFixedWidthPadLeft((int) (byte) 10, (-1), '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder8.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder8.appendSeparator('4', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder35.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        int int82 = strBuilder75.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strBuilder75, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder75.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder75.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder75.deleteAll(strMatcher92);
        boolean boolean94 = strBuilder34.equalsIgnoreCase(strBuilder75);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln(stringBuffer16, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        int int21 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder8.append(strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) 50);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.minimizeCapacity();
        java.lang.String str16 = strBuilder9.rightString(11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "e\n0.0\nass j" + "'", str16, "e\n0.0\nass j");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        boolean boolean64 = strBuilder50.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        char[] charArray71 = strBuilder66.toCharArray();
        char[] charArray72 = strBuilder50.getChars(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder44.replaceFirst("hi!", "hi!");
        boolean boolean77 = strBuilder30.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        int int79 = strBuilder30.lastIndexOf(strMatcher78);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append((float) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(" \nclass java.lang.Object10.0-1.0\n97.0");
        java.lang.CharSequence charSequence15 = strBuilder12.subSequence(23, 23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        java.io.Reader reader52 = strBuilder51.asReader();
        java.lang.String str53 = strBuilder51.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(55);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.clear();
        char[] charArray53 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendln(true);
        java.lang.String str57 = strBuilder52.leftString(20);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.replaceAll(strMatcher58, "0.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n" + "'", str57, "true\n");
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        boolean boolean20 = strBuilder18.contains("e\n10");
        boolean boolean22 = strBuilder18.contains('t');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.insert((int) (short) 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        boolean boolean19 = strBuilder17.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((float) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.append((java.lang.CharSequence) strBuilder24, (int) (short) 1, 0);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((long) (byte) 10);
        java.lang.String str42 = strBuilder38.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNewLine();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("");
        java.lang.String str59 = strBuilder55.rightString((int) '4');
        java.lang.Object[] objArray60 = new java.lang.Object[] { strBuilder47, wildcardClass52, 10.0d, (-1.0d), str59 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendAll(objArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder26.append(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendSeparator('r', 'a');
        boolean boolean70 = strBuilder64.startsWith("\n1.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "true\n10" + "'", str42, "true\n10");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n" + "'", str59, "\n");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendFixedWidthPadRight(1, (int) '4', '\000');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        int int59 = strBuilder56.lastIndexOf('a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder20.insert((int) '\000', (java.lang.Object) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        int int63 = strBuilder20.indexOf(strMatcher61, 14);
        int int66 = strBuilder20.indexOf("10.0false######4true\n", (int) ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (-1));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((float) '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.setNewLineText("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.append(10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.ensureCapacity(24);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        int int64 = strBuilder40.indexOf(strMatcher62, 55);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendSeparator('g', 41);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('a');
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendSeparator("04-1.0 true\n0.0\ntrue\nra", "true\n100.0");
        char[] charArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            strBuilder17.getChars((int) (short) 0, 40, charArray24, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendSeparator("false", "true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((long) (byte) 10);
        java.lang.String str36 = strBuilder32.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNewLine();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("");
        java.lang.String str53 = strBuilder49.rightString((int) '4');
        java.lang.Object[] objArray54 = new java.lang.Object[] { strBuilder41, wildcardClass46, 10.0d, (-1.0d), str53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder13.appendAll(objArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteAll("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("4");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "true\n10" + "'", str36, "true\n10");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        java.util.stream.IntStream intStream21 = strBuilder15.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        int int33 = strBuilder26.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.String str40 = strBuilder39.getNewLineText();
        boolean boolean41 = strBuilder26.equals(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        boolean boolean48 = strBuilder46.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder7.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(170);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 170");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.reverse();
        boolean boolean9 = strBuilder0.contains("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("");
        java.lang.String str78 = strBuilder74.rightString((int) '4');
        java.lang.Object[] objArray79 = new java.lang.Object[] { strBuilder66, wildcardClass71, 10.0d, (-1.0d), str78 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendAll(objArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder80.indexOf(strMatcher83, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 100, 'r');
        int int18 = strBuilder15.lastIndexOf('\000', (int) 'a');
        int int21 = strBuilder15.indexOf("97########", 19);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.setNewLineText("\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.append(10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll('a', '\n');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("true\n100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        java.lang.Class<?> wildcardClass42 = strBuilder41.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.io.Writer writer19 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendln(stringBuffer30, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        boolean boolean53 = strBuilder39.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        char[] charArray60 = strBuilder55.toCharArray();
        char[] charArray61 = strBuilder39.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder25.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder7.insert(1, (java.lang.Object) charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder7.replaceFirst(' ', '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ ]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        boolean boolean31 = strBuilder17.equalsIgnoreCase(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder12.append((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.append(strBuilder34);
        java.io.Reader reader39 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendFixedWidthPadLeft(41, 14, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert(30, "\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        java.lang.String str50 = strBuilder49.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 10);
        java.lang.String str60 = strBuilder56.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendNewLine();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln("");
        java.lang.String str77 = strBuilder73.rightString((int) '4');
        java.lang.Object[] objArray78 = new java.lang.Object[] { strBuilder65, wildcardClass70, 10.0d, (-1.0d), str77 };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder56.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder49.appendAll(objArray78);
        java.lang.String str82 = strBuilder49.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder49.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.insert(8, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder46.appendln(strBuilder88, 13, (int) ' ');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "true\n10" + "'", str60, "true\n10");
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n" + "'", str77, "\n");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str82, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.setCharAt(4, 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.setCharAt((int) (byte) 1, '4');
        int int24 = strBuilder2.capacity();
        java.lang.String str25 = strBuilder2.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        java.lang.String str27 = strBuilder24.toString();
        boolean boolean28 = strBuilder7.equals((java.lang.Object) str27);
        java.lang.String str30 = strBuilder7.rightString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str39 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendNewLine();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str66 = strBuilder62.rightString((int) '4');
        java.lang.Object[] objArray67 = new java.lang.Object[] { strBuilder54, wildcardClass59, 10.0d, (-1.0d), str66 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder31.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(true);
        int int78 = strBuilder71.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strBuilder71, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendln(strBuilder86);
        int int89 = strBuilder7.lastIndexOf('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n1.0\ntrue\n10############################### true\n\n" + "'", str30, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\n" + "'", str66, "\n");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        boolean boolean12 = strBuilder9.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(stringBuffer17, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        java.io.Reader reader41 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        java.util.stream.IntStream intStream48 = strBuilder47.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(strBuilder51);
        java.lang.StringBuffer stringBuffer53 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder28.appendln(stringBuffer53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder28.insert(78, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        char[] charArray47 = strBuilder42.toCharArray();
        char[] charArray48 = strBuilder26.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.append(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 10.0d, 39, '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll(strMatcher55, "\ntrue\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ ]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) (byte) 10);
        java.lang.String str45 = strBuilder41.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln("");
        java.lang.String str62 = strBuilder58.rightString((int) '4');
        java.lang.Object[] objArray63 = new java.lang.Object[] { strBuilder50, wildcardClass55, 10.0d, (-1.0d), str62 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder41.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendAll(objArray63);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "true\n10" + "'", str45, "true\n10");
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n" + "'", str62, "\n");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(0.0d);
        int int47 = strBuilder41.lastIndexOf("ass j", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder7.appendln((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        int int62 = strBuilder41.indexOf(strMatcher60, 50);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(210);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((int) (short) -1);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) (byte) 10);
        java.lang.String str31 = strBuilder27.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        java.lang.String str48 = strBuilder44.rightString((int) '4');
        java.lang.Object[] objArray49 = new java.lang.Object[] { strBuilder36, wildcardClass41, 10.0d, (-1.0d), str48 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder13.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        int int60 = strBuilder53.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) strBuilder53, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder53.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder53.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder53.setNewLineText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(false);
        char[] charArray80 = strBuilder79.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append(charArray80);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder9.getChars(210, 0, charArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "true\n10" + "'", str31, "true\n10");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n" + "'", str48, "\n");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln("");
        java.lang.String str16 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("");
        java.lang.String str27 = strBuilder26.getNewLineText();
        java.lang.Object[] objArray32 = new java.lang.Object[] { strBuilder22, strBuilder26, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll(objArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.appendln(stringBuffer40, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.deleteFirst(strMatcher44);
        boolean boolean47 = strBuilder45.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder45.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder12.append((java.lang.Object) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) 5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.appendln(strBuilder54, (int) (short) -1, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 10);
        java.lang.String str37 = strBuilder33.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendNewLine();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("");
        java.lang.String str54 = strBuilder50.rightString((int) '4');
        java.lang.Object[] objArray55 = new java.lang.Object[] { strBuilder42, wildcardClass47, 10.0d, (-1.0d), str54 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.appendAll(objArray55);
        int int59 = strBuilder56.lastIndexOf('a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder20.insert((int) '\000', (java.lang.Object) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        int int63 = strBuilder20.indexOf(strMatcher61, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(false);
        int int70 = strBuilder69.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((long) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder20.append((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder20.deleteFirst('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "true\n10" + "'", str37, "true\n10");
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n" + "'", str54, "\n");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteFirst("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('g', '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendln(true);
        java.util.stream.IntStream intStream88 = strBuilder82.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.appendFixedWidthPadRight((java.lang.Object) strBuilder82, 39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder81.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder81.appendFixedWidthPadLeft(0, (int) 'r', '4');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        int int13 = strBuilder5.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setNullText("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln('\000');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        int int43 = strBuilder36.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        boolean boolean48 = strBuilder45.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        java.util.stream.IntStream intStream71 = strBuilder70.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(' ');
        java.io.Reader reader77 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln(true);
        java.util.stream.IntStream intStream84 = strBuilder83.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.append(strBuilder87);
        java.lang.StringBuffer stringBuffer89 = strBuilder87.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder64.appendln(stringBuffer89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder64.deleteFirst(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder2.append((java.lang.CharSequence) strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceFirst('\000', '\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = null;
        int int98 = strBuilder96.indexOf(strMatcher97);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        int int42 = strBuilder39.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int45 = strBuilder39.lastIndexOf(strMatcher43, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.String str52 = strBuilder46.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll(strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        int int65 = strBuilder62.lastIndexOf(strMatcher63, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int68 = strBuilder62.lastIndexOf(strMatcher66, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder39.appendln(strBuilder62);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n" + "'", str52, "\n");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.ensureCapacity(7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.insert(55, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 55");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        boolean boolean15 = strBuilder13.contains("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight(52, 32, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        boolean boolean55 = strBuilder41.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        char[] charArray62 = strBuilder57.toCharArray();
        char[] charArray63 = strBuilder41.getChars(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder35.append(charArray63);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ ]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendln(stringBuffer31, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append((long) (byte) 10);
        int int76 = strBuilder74.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder66.append((java.lang.CharSequence) strBuilder74);
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.append(stringBuffer81, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.appendFixedWidthPadRight((java.lang.Object) strBuilder85, 32, '#');
        java.io.Writer writer92 = strBuilder84.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder84.insert(52, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder37.appendln((java.lang.Object) 3);
        boolean boolean97 = strBuilder14.equalsIgnoreCase(strBuilder96);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(writer92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        char[] charArray37 = strBuilder32.toCharArray();
        char[] charArray38 = strBuilder16.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder10.replaceFirst("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder10.appendln(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.ensureCapacity(7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln("v.lang.Object10.0-1.0\n", 18, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendSeparator('a', 15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        int int27 = strBuilder22.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.io.Writer writer34 = strBuilder31.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln(stringBuffer45, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendNewLine();
        boolean boolean68 = strBuilder54.equalsIgnoreCase(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder49.append((java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.minimizeCapacity();
        char[] charArray75 = strBuilder70.toCharArray();
        char[] charArray76 = strBuilder54.getChars(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder41.append(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln(charArray76);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder22.getChars(19, 0, charArray76, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ ]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.replace(0, 10, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendFixedWidthPadLeft((int) ' ', (int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((float) 32);
        boolean boolean23 = strBuilder19.startsWith("\n1.0\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder0.asTokenizer();
        int int8 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        char[] charArray15 = strBuilder14.toCharArray();
        char[] charArray16 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str31 = strBuilder30.getNewLineText();
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder26, strBuilder30, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendWithSeparators(objArray36, ".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str44 = strBuilder40.rightString((int) '4');
        java.lang.String str46 = strBuilder40.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadLeft((int) (byte) 1, 100, 'r');
        int int58 = strBuilder55.lastIndexOf('\000', (int) 'a');
        boolean boolean59 = strBuilder39.equalsIgnoreCase(strBuilder55);
        java.lang.Class<?> wildcardClass60 = strBuilder55.getClass();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\n" + "'", str44, "\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        boolean boolean33 = strBuilder31.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder24.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n35\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("true\n10############################### true\n\n", "hi!");
        char[] charArray13 = strBuilder7.toCharArray(0, 18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n1.0\ntrue\n10######");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n1.0\ntrue\n10######");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 1, ., 0, \n, t, r, u, e, \n, 1, 0, #, #, #, #, #, #]");
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        boolean boolean14 = strBuilder12.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        boolean boolean15 = strBuilder13.contains("\n1.0\n");
        // The following exception was thrown during execution in test generation
        try {
            char char17 = strBuilder13.charAt(38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }
}

